version: "3"
services:
  ngrok-external:
    image: wernight/ngrok
    command: ngrok http external-agent:${EXTERNAL_HTTP_PORT} --log stdout
    networks:
      - indy_demo
  external-agent:
    build:
      context: ../../
      dockerfile: dockerfiles/agents/Dockerfile.ngrok
    environment:
      - NGROK_NAME=ngrok-external
      - ADMIN_URL=http://external-agent:${EXTERNAL_ADMIN_PORT}
      - AGENT_NAME=${EXTERNAL_AGENT_NAME}
      - ADMIN_PORT=${EXTERNAL_ADMIN_PORT}
      - HTTP_PORT=${EXTERNAL_HTTP_PORT}
      - ACAPY_WEBHOOK_URL=${EXTERNAL_WEBHOOK_URL}
      - AGENT_ENDPOINT=${EXTERNAL_AGENT_ENDPOINT}
      - WALLET_SEED=${EXTERNAL_WALLET_SEED}
      - WALLET_NAME=${EXTERNAL_WALLET_NAME}
      - WALLET_KEY=${EXTERNAL_WALLET_KEY}
      - WALLET_TYPE=${WALLET_TYPE}
      - ACAPY_ADMIN_INSECURE_MODE=${EXTERNAL_ADMIN_SECURE}
      - GENESIS_URL=${GENESIS_URL}
    ports:
      - ${EXTERNAL_HTTP_PORT}:${EXTERNAL_HTTP_PORT}
      - ${EXTERNAL_ADMIN_PORT}:${EXTERNAL_ADMIN_PORT}
    networks:
      - indy_demo
  ngrok-mediator:
    image: wernight/ngrok
    command: ngrok http mediator-agent:${MEDIATOR_HTTP_PORT} --log stdout
    networks:
      - indy_demo
  mediator-agent:
    build:
      context: ../../
      dockerfile: dockerfiles/agents/Dockerfile.ngrok
    environment:
      - NGROK_NAME=ngrok-mediator
      - ADMIN_URL=http://mediator-agent:${MEDIATOR_ADMIN_PORT}
      - AGENT_NAME=${MEDIATOR_AGENT_NAME}
      - ADMIN_PORT=${MEDIATOR_ADMIN_PORT}
      - HTTP_PORT=${MEDIATOR_HTTP_PORT}
      - ACAPY_WEBHOOK_URL=${MEDIATOR_WEBHOOK_URL}
      - AGENT_ENDPOINT=${MEDIATOR_AGENT_ENDPOINT}
      - WALLET_SEED=${MEDIATOR_WALLET_SEED}
      - WALLET_NAME=${MEDIATOR_WALLET_NAME}
      - WALLET_KEY=${MEDIATOR_WALLET_KEY}
      - WALLET_TYPE=${WALLET_TYPE}
      - ACAPY_ADMIN_INSECURE_MODE=${MEDIATOR_ADMIN_SECURE}
      - GENESIS_URL=${GENESIS_URL}
    ports:
      - ${MEDIATOR_HTTP_PORT}:${MEDIATOR_HTTP_PORT}
      - ${MEDIATOR_ADMIN_PORT}:${MEDIATOR_ADMIN_PORT}
    networks:
      - indy_demo
  mediator-notebook:
    build:
      context: ../../
      dockerfile: dockerfiles/controllers/Dockerfile.basiccontroller
      args:
        - jupyter_port=${MEDIATOR_JUPYTER_PORT}
    depends_on:
      - mediator-agent
    networks:
      - indy_demo
    volumes:
      - ${PWD}/notebooks/mediator:/workspace
    ports:
      - ${MEDIATOR_JUPYTER_PORT}:8888
      - ${MEDIATOR_WEBHOOK_PORT}:${MEDIATOR_WEBHOOK_PORT}
  wallets-db:
    image: postgres:11
    container_name: wallets-db
    command: postgres -c listen_addresses='*'
    environment:
      POSTGRES_PASSWORD: dbpass
      POSTGRES_USER: postgres
      POSTGRES_DB: wallets
    volumes:
      - ./resources/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - indy_demo
    tty: true
  ngrok-multitenant:
    image: wernight/ngrok
    command: ngrok http multitenant-agent:${MULTITENANT_HTTP_PORT} --log stdout
    networks:
      - indy_demo
  multitenant-agent:
    build:
      context: ../../
      dockerfile: dockerfiles/agents/Dockerfile.ngrok
    environment:
      - NGROK_NAME=ngrok-multitenant
      - ADMIN_URL=http://multitenant-agent:${MULTITENANT_ADMIN_PORT}
      - AGENT_NAME=${MULTITENANT_AGENT_NAME}
      - ADMIN_PORT=${MULTITENANT_ADMIN_PORT}
      - HTTP_PORT=${MULTITENANT_HTTP_PORT}
      - ACAPY_WEBHOOK_URL=${MULTITENANT_WEBHOOK_URL}
      - AGENT_ENDPOINT=${MULTITENANT_AGENT_ENDPOINT}
      - WALLET_SEED=${MULTITENANT_WALLET_SEED}
      - WALLET_NAME=${MULTITENANT_WALLET_NAME}
      - WALLET_KEY=${MULTITENANT_WALLET_KEY}
      - WALLET_TYPE=${WALLET_TYPE}
      - ACAPY_ADMIN_INSECURE_MODE=${MULTITENANT_ADMIN_SECURE}
      - GENESIS_URL=${GENESIS_URL}
      - ACAPY_MULTITENANT=true
      - ACAPY_MULTITENANT_JWT_SECRET="password"
      - ACAPY_MULTITENANT_ADMIN=true
      - ACAPY_WALLET_STORAGE_TYPE=postgres_storage
      - ACAPY_WALLET_STORAGE_CONFIG={"url":"wallets-db:5432","wallet_scheme":"MultiWalletSingleTable"}
      - ACAPY_WALLET_STORAGE_CREDS={"account":"postgres","password":"dbpass","admin_account":"postgres","admin_password":"dbpass"}
    ports:
      - ${MULTITENANT_HTTP_PORT}:${MULTITENANT_HTTP_PORT}
      - ${MULTITENANT_ADMIN_PORT}:${MULTITENANT_ADMIN_PORT}
    depends_on:
      - wallets-db
    networks:
      - indy_demo
  multitenant-notebook:
    build:
      context: ../../
      dockerfile: dockerfiles/controllers/Dockerfile.basiccontroller
      args:
        - jupyter_port=${MULTITENANT_JUPYTER_PORT}
    depends_on:
      - multitenant-agent
    networks:
      - indy_demo
    volumes:
      - ./notebooks/multitenant:/workspace
    ports:
      - "8888:8888"
      - ${MULTITENANT_WEBHOOK_PORT}:${MULTITENANT_WEBHOOK_PORT}
  external-notebook:
    build:
      context: ../../
      dockerfile: dockerfiles/controllers/Dockerfile.basiccontroller
      args:
        - jupyter_port=${EXTERNAL_JUPYTER_PORT}
    depends_on:
      - external-agent
    networks:
      - indy_demo
    volumes:
      - ${PWD}/notebooks/external:/workspace
    ports:
      - "8889:8888"
      - ${EXTERNAL_WEBHOOK_PORT}:${EXTERNAL_WEBHOOK_PORT}



networks:
  indy_demo:
