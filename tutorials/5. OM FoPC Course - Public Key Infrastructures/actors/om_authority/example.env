
# These are dummy values that can be used to get started quickly
# Replace these with real values when deploying to a real environment

# For postgres DB which hosts the wallets
#WALLET_DB_HOST=om-authority-wallet-db
#WALLET_DB_PORT=5432
#WALLET_DB_USER=postgres
#WALLET_DB_PASS=dbpass
#WALLET_DB_ADMIN_USER=postgres
#WALLET_DB_ADMIN_PASS=dbpass

# These values are only used locally by docker-compose to set up the DB container - should match values above
#POSTGRES_PASSWORD=dbpass
#POSTGRES_USER=postgres
#POSTGRES_DB=om-authority_wallet

# for tails server
# ACAPY_TAILS_SERVER_BASE_URL=http://tails-server:6543

# for aca-py agent
HTTP_PORT=3020
WEBHOOK_PORT=3010
ADMIN_PORT=3021
ADMIN_URL=http://om-authority-agent:3021
ACAPY_OUTBOUND_TRANSPORT=http
ACAPY_ADMIN=[0.0.0.0,3021]

# Only used if run ./manage production
# Typically you will want to update 0.0.0.0 to some public IP
ACAPY_ENDPOINT=http://om-authority-agent:3020

ACAPY_WEBHOOK_URL=http://om-authority-business-logic:3010
ACAPY_ADMIN_API_KEY=adminApiKey
ACAPY_LABEL=OpenMined
ACAPY_WALLET_NAME=OM
ACAPY_WALLET_KEY=omauthority_key
ACAPY_WALLET_TYPE=indy

#ACAPY_WALLET_STORAGE_TYPE=postgres_storage
#ACAPY_WALLET_STORAGE_CONFIG={"url":"om-authority-wallet-db:5432","wallet_scheme":"MultiWalletSingleTable"}
#ACAPY_WALLET_STORAGE_CREDS={"account":"postgres","password":"dbpass","admin_account":"postgres","admin_password":"dbpass"}
ACAPY_AUTO_PROVISION=true


## Local Network
# ACAPY_GENESIS_FILE=/home/indy/von-local-genesis-txns

## BC Gov Greenlight
# ACAPY_GENESIS_URL=http://greenlight.bcovrin.vonx.io/genesis

## Sovrin BuilderNet
ACAPY_GENESIS_URL=https://raw.githubusercontent.com/sovrin-foundation/sovrin/master/sovrin/pool_transactions_builder_genesis

## Sovrin StagingNet
# ACAPY_GENESIS_URL=https://raw.githubusercontent.com/sovrin-foundation/sovrin/master/sovrin/pool_transactions_sandbox_genesis


# Multi-tenant Configuration
# ACAPY_MULTITENANT=true
# ACAPY_MULTITENANT_ADMIN=true
# ACAPY_MULTITENANT_JWT_SECRET=jwtSecret

# Name of ngrok container if exposing agent endpoint over ngrok
NGROK_NAME= ngrok-om-authority


# Optional Helper Configurations - See https://github.com/hyperledger/aries-cloudagent-python/blob/main/aries_cloudagent/config/argparse.py
ACAPY_AUTO_ACCEPT_INVITES=true
ACAPY_AUTO_ACCEPT_REQUESTS=true
ACAPY_AUTO_PING_CONNECTION=true
ACAPY_AUTO_RESPOND_MESSAGES=true
ACAPY_AUTO_RESPOND_CREDENTIAL_PROPOSAL=true
ACAPY_AUTO_RESPOND_CREDENTIAL_OFFER=true
ACAPY_AUTO_RESPOND_CREDENTIAL_REQUEST=true
ACAPY_AUTO_RESPOND_PRESENTATION_PROPOSAL=true
ACAPY_AUTO_RESPOND_PRESENTATION_REQUEST=true
ACAPY_AUTO_STORE_CREDENTIAL=true
ACAPY_AUTO_VERIFY_PRESENTATION=true
ACAPY_PRESERVE_EXCHANGE_RECORDS=true


# Optional Trace Arguments
# ACAPY_TRACE=true
# ACAPY_TRACE_TARGET=log
# ACAPY_TRACE_LABEL=Issuer

# Timing arguments
# ACAPY_TIMING=true
# ACAPY_TIMING_LOG=/home/indy/logs/timing.txt

# Debug Arguments
# ACAPY_DEBUG=true

ACAPY_LOG_LEVEL=debug
# ACAPY_LOG_FILE=/home/indy/logs/agent_logs.txt