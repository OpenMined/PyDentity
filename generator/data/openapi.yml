openapi: 3.0.1
info:
  title: Aries Cloud Agent
  version: v0.7.4
servers:
- url: /
security:
- AuthorizationHeader: []
tags:
- name: action-menu
  description: Menu interaction over connection
- name: basicmessage
  description: Simple messaging
  externalDocs:
    description: Specification
    url: https://github.com/hyperledger/aries-rfcs/tree/527849ec3aa2a8fd47a7bb6c57f918ff8bcb5e8c/features/0095-basic-message
- name: connection
  description: Connection management
  externalDocs:
    description: Specification
    url: https://github.com/hyperledger/aries-rfcs/tree/9b0aaa39df7e8bd434126c4b33c097aae78d65bf/features/0160-connection-protocol
- name: credential-definition
  description: Credential definition operations
  externalDocs:
    description: Specification
    url: https://github.com/hyperledger/indy-node/blob/master/design/anoncreds.md#cred_def
- name: credentials
  description: Holder credential management
  externalDocs:
    description: Overview
    url: https://w3c.github.io/vc-data-model/#credentials
- name: did-exchange
  description: Connection management via DID exchange
  externalDocs:
    description: Specification
    url: https://github.com/hyperledger/aries-rfcs/tree/25464a5c8f8a17b14edaa4310393df6094ace7b0/features/0023-did-exchange
- name: discover-features
  description: Feature discovery
  externalDocs:
    description: Specification
    url: https://github.com/hyperledger/aries-rfcs/tree/b3a3942ef052039e73cd23d847f42947f8287da2/features/0031-discover-features
- name: discover-features v2.0
  description: Feature discovery v2
  externalDocs:
    description: Specification
    url: https://github.com/hyperledger/aries-rfcs/tree/b3a3942ef052039e73cd23d847f42947f8287da2/features/0557-discover-features-v2
- name: endorse-transaction
  description: Endorse a Transaction
- name: introduction
  description: Introduction of known parties
- name: issue-credential v1.0
  description: Credential issue v1.0
  externalDocs:
    description: Specification
    url: https://github.com/hyperledger/aries-rfcs/tree/bb42a6c35e0d5543718fb36dd099551ab192f7b0/features/0036-issue-credential
- name: issue-credential v2.0
  description: Credential issue v2.0
  externalDocs:
    description: Specification
    url: https://github.com/hyperledger/aries-rfcs/tree/cd27fc64aa2805f756a118043d7c880354353047/features/0453-issue-credential-v2
- name: jsonld
  description: Sign and verify json-ld data
  externalDocs:
    description: Specification
    url: https://tools.ietf.org/html/rfc7515
- name: ledger
  description: Interaction with ledger
  externalDocs:
    description: Overview
    url: https://hyperledger-indy.readthedocs.io/projects/plenum/en/latest/storage.html#ledger
- name: mediation
  description: Mediation management
  externalDocs:
    description: Specification
    url: https://github.com/hyperledger/aries-rfcs/tree/fa8dc4ea1e667eb07db8f9ffeaf074a4455697c0/features/0211-route-coordination
- name: multitenancy
  description: Multitenant wallet management
- name: out-of-band
  description: Out-of-band connections
  externalDocs:
    description: Design
    url: https://github.com/hyperledger/aries-rfcs/tree/2da7fc4ee043effa3a9960150e7ba8c9a4628b68/features/0434-outofband
- name: present-proof v1.0
  description: Proof presentation v1.0
  externalDocs:
    description: Specification
    url: https://github.com/hyperledger/aries-rfcs/tree/4fae574c03f9f1013db30bf2c0c676b1122f7149/features/0037-present-proof
- name: present-proof v2.0
  description: Proof presentation v2.0
  externalDocs:
    description: Specification
    url: https://github.com/hyperledger/aries-rfcs/tree/eace815c3e8598d4a8dd7881d8c731fdb2bcc0aa/features/0454-present-proof-v2
- name: resolver
  description: did resolver interface.
  externalDocs:
    description: Specification
    url: https://example.com/replace/me
- name: revocation
  description: Revocation registry management
  externalDocs:
    description: Overview
    url: https://github.com/hyperledger/indy-hipe/tree/master/text/0011-cred-revocation
- name: schema
  description: Schema operations
  externalDocs:
    description: Specification
    url: https://github.com/hyperledger/indy-node/blob/master/design/anoncreds.md#schema
- name: trustping
  description: Trust-ping over connection
  externalDocs:
    description: Specification
    url: https://github.com/hyperledger/aries-rfcs/tree/527849ec3aa2a8fd47a7bb6c57f918ff8bcb5e8c/features/0048-trust-ping
- name: wallet
  description: DID and tag policy management
  externalDocs:
    description: Design
    url: https://github.com/hyperledger/indy-sdk/tree/master/docs/design/003-wallet-storage
paths:
  /action-menu/{conn_id}/close:
    post:
      tags:
      - action-menu
      summary: Close the active menu associated with a connection
      parameters:
      - name: conn_id
        in: path
        description: Connection identifier
        required: true
        schema:
          type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionMenuModulesResult'
      operationId: close_active_menu
  /action-menu/{conn_id}/fetch:
    post:
      tags:
      - action-menu
      summary: Fetch the active menu
      parameters:
      - name: conn_id
        in: path
        description: Connection identifier
        required: true
        schema:
          type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionMenuFetchResult'
      operationId: fetch_active_menu
  /action-menu/{conn_id}/perform:
    post:
      tags:
      - action-menu
      summary: Perform an action associated with the active menu
      parameters:
      - name: conn_id
        in: path
        description: Connection identifier
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PerformRequest'
        required: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionMenuModulesResult'
      x-codegen-request-body-name: body
      operationId: perform_action
  /action-menu/{conn_id}/request:
    post:
      tags:
      - action-menu
      summary: Request the active menu
      parameters:
      - name: conn_id
        in: path
        description: Connection identifier
        required: true
        schema:
          type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionMenuModulesResult'
      operationId: request_active_menu
  /action-menu/{conn_id}/send-menu:
    post:
      tags:
      - action-menu
      summary: Send an action menu to a connection
      parameters:
      - name: conn_id
        in: path
        description: Connection identifier
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendMenu'
        required: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionMenuModulesResult'
      x-codegen-request-body-name: body
      operationId: send_menu
  /connections:
    get:
      tags:
      - connection
      summary: Query agent-to-agent connections
      parameters:
      - name: alias
        in: query
        description: Alias
        schema:
          type: string
      - name: connection_protocol
        in: query
        description: Connection protocol used
        schema:
          type: string
          enum:
          - connections/1.0
          - didexchange/1.0
      - name: invitation_key
        in: query
        description: invitation key
        schema:
          pattern: ^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$
          type: string
      - name: invitation_msg_id
        in: query
        description: Identifier of the associated Invitation Mesage
        schema:
          type: string
          format: uuid
      - name: my_did
        in: query
        description: My DID
        schema:
          pattern: ^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$
          type: string
      - name: state
        in: query
        description: Connection state
        schema:
          type: string
          enum:
          - request
          - response
          - invitation
          - error
          - abandoned
          - init
          - active
          - start
          - completed
      - name: their_did
        in: query
        description: Their DID
        schema:
          pattern: ^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$
          type: string
      - name: their_public_did
        in: query
        description: Their Public DID
        schema:
          pattern: ^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$
          type: string
      - name: their_role
        in: query
        description: Their role in the connection protocol
        schema:
          type: string
          enum:
          - invitee
          - requester
          - inviter
          - responder
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionList'
      operationId: get_connections
  /connections/create-invitation:
    post:
      tags:
      - connection
      summary: Create a new connection invitation
      parameters:
      - name: alias
        in: query
        description: Alias
        schema:
          type: string
      - name: auto_accept
        in: query
        description: Auto-accept connection (defaults to configuration)
        schema:
          type: boolean
      - name: multi_use
        in: query
        description: Create invitation for multiple use (default false)
        schema:
          type: boolean
      - name: public
        in: query
        description: Create invitation from public DID (default false)
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateInvitationRequest'
        required: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvitationResult'
      x-codegen-request-body-name: body
      operationId: create_invitation
  /connections/create-static:
    post:
      tags:
      - connection
      summary: Create a new static connection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionStaticRequest'
        required: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionStaticResult'
      x-codegen-request-body-name: body
      operationId: create_static_connection
  /connections/receive-invitation:
    post:
      tags:
      - connection
      summary: Receive a new connection invitation
      parameters:
      - name: alias
        in: query
        description: Alias
        schema:
          type: string
      - name: auto_accept
        in: query
        description: Auto-accept connection (defaults to configuration)
        schema:
          type: boolean
      - name: mediation_id
        in: query
        description: Identifier for active mediation record to be used
        schema:
          pattern: '[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}'
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReceiveInvitationRequest'
        required: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnRecord'
      x-codegen-request-body-name: body
      operationId: receive_invitation
  /connections/{conn_id}:
    get:
      tags:
      - connection
      summary: Fetch a single connection record
      parameters:
      - name: conn_id
        in: path
        description: Connection identifier
        required: true
        schema:
          type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnRecord'
      operationId: get_connection
    delete:
      tags:
      - connection
      summary: Remove an existing connection record
      parameters:
      - name: conn_id
        in: path
        description: Connection identifier
        required: true
        schema:
          type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionModuleResponse'
      operationId: delete_connection
  /connections/{conn_id}/accept-invitation:
    post:
      tags:
      - connection
      summary: Accept a stored connection invitation
      parameters:
      - name: conn_id
        in: path
        description: Connection identifier
        required: true
        schema:
          type: string
      - name: mediation_id
        in: query
        description: Identifier for active mediation record to be used
        schema:
          pattern: '[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}'
          type: string
      - name: my_endpoint
        in: query
        description: My URL endpoint
        schema:
          pattern: ^[A-Za-z0-9\.\-\+]+://([A-Za-z0-9][.A-Za-z0-9-_]+[A-Za-z0-9])+(:[1-9][0-9]*)?(/[^?&#]+)?$
          type: string
      - name: my_label
        in: query
        description: Label for connection
        schema:
          type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnRecord'
      operationId: accept_invitation
  /connections/{conn_id}/accept-request:
    post:
      tags:
      - connection
      summary: Accept a stored connection request
      parameters:
      - name: conn_id
        in: path
        description: Connection identifier
        required: true
        schema:
          type: string
      - name: my_endpoint
        in: query
        description: My URL endpoint
        schema:
          pattern: ^[A-Za-z0-9\.\-\+]+://([A-Za-z0-9][.A-Za-z0-9-_]+[A-Za-z0-9])+(:[1-9][0-9]*)?(/[^?&#]+)?$
          type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnRecord'
      operationId: accept_request
  /connections/{conn_id}/endpoints:
    get:
      tags:
      - connection
      summary: Fetch connection remote endpoint
      parameters:
      - name: conn_id
        in: path
        description: Connection identifier
        required: true
        schema:
          type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EndpointsResult'
      operationId: get_connection_endpoint
  /connections/{conn_id}/establish-inbound/{ref_id}:
    post:
      tags:
      - connection
      summary: Assign another connection as the inbound connection
      parameters:
      - name: conn_id
        in: path
        description: Connection identifier
        required: true
        schema:
          type: string
      - name: ref_id
        in: path
        description: Inbound connection identifier
        required: true
        schema:
          type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionModuleResponse'
      operationId: establish_inbound
  /connections/{conn_id}/metadata:
    get:
      tags:
      - connection
      summary: Fetch connection metadata
      parameters:
      - name: conn_id
        in: path
        description: Connection identifier
        required: true
        schema:
          type: string
      - name: key
        in: query
        description: Key to retrieve.
        schema:
          type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionMetadata'
      operationId: get_metadata
    post:
      tags:
      - connection
      summary: Set connection metadata
      parameters:
      - name: conn_id
        in: path
        description: Connection identifier
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionMetadataSetRequest'
        required: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionMetadata'
      x-codegen-request-body-name: body
      operationId: set_metadata
  /connections/{conn_id}/send-message:
    post:
      tags:
      - basicmessage
      summary: Send a basic message to a connection
      parameters:
      - name: conn_id
        in: path
        description: Connection identifier
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendMessage'
        required: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicMessageModuleResponse'
      x-codegen-request-body-name: body
      operationId: send_message
  /connections/{conn_id}/send-ping:
    post:
      tags:
      - trustping
      summary: Send a trust ping to a connection
      parameters:
      - name: conn_id
        in: path
        description: Connection identifier
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PingRequest'
        required: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PingRequestResponse'
      x-codegen-request-body-name: body
      operationId: send_ping
  /connections/{conn_id}/start-introduction:
    post:
      tags:
      - introduction
      summary: Start an introduction between two connections
      parameters:
      - name: conn_id
        in: path
        description: Connection identifier
        required: true
        schema:
          type: string
      - name: target_connection_id
        in: query
        description: Target connection identifier
        required: true
        schema:
          type: string
      - name: message
        in: query
        description: Message
        schema:
          type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntroModuleResponse'
      operationId: start_introduction
  /credential-definitions:
    post:
      tags:
      - credential-definition
      summary: Sends a credential definition to the ledger
      parameters:
      - name: conn_id
        in: query
        description: Connection identifier
        schema:
          type: string
      - name: create_transaction_for_endorser
        in: query
        description: Create Transaction For Endorser's signature
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CredentialDefinitionSendRequest'
        required: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/CredentialDefinitionSendResult'
                - $ref: '#/components/schemas/TxnOrCredentialDefinitionSendResult'
      x-codegen-request-body-name: body
      operationId: publish_cred_def
  /credential-definitions/created:
    get:
      tags:
      - credential-definition
      summary: Search for matching credential definitions that agent originated
      parameters:
      - name: cred_def_id
        in: query
        description: Credential definition id
        schema:
          pattern: ^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$
          type: string
      - name: issuer_did
        in: query
        description: Issuer DID
        schema:
          pattern: ^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$
          type: string
      - name: schema_id
        in: query
        description: Schema identifier
        schema:
          pattern: ^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$
          type: string
      - name: schema_issuer_did
        in: query
        description: Schema issuer DID
        schema:
          pattern: ^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$
          type: string
      - name: schema_name
        in: query
        description: Schema name
        schema:
          type: string
      - name: schema_version
        in: query
        description: Schema version
        schema:
          pattern: ^[0-9.]+$
          type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialDefinitionsCreatedResult'
      operationId: get_created_cred_defs
  /credential-definitions/{cred_def_id}:
    get:
      tags:
      - credential-definition
      summary: Gets a credential definition from the ledger
      parameters:
      - name: cred_def_id
        in: path
        description: Credential definition identifier
        required: true
        schema:
          pattern: ^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$
          type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialDefinitionGetResult'
      operationId: get_cred_def
  /credential-definitions/{cred_def_id}/write_record:
    post:
      tags:
      - credential-definition
      summary: Writes a credential definition non-secret record to the wallet
      parameters:
      - name: cred_def_id
        in: path
        description: Credential definition identifier
        required: true
        schema:
          pattern: ^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$
          type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialDefinitionGetResult'
  /credential/mime-types/{credential_id}:
    get:
      tags:
      - credentials
      summary: Get attribute MIME types from wallet
      parameters:
      - name: credential_id
        in: path
        description: Credential identifier
        required: true
        schema:
          type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttributeMimeTypesResult'
      operationId: get_credential_mime_types
  /credential/revoked/{credential_id}:
    get:
      tags:
      - credentials
      summary: Query credential revocation status by id
      parameters:
      - name: credential_id
        in: path
        description: Credential identifier
        required: true
        schema:
          type: string
      - name: from
        in: query
        description: Earliest epoch of revocation status interval of interest
        schema:
          pattern: ^[0-9]*$
          type: string
      - name: to
        in: query
        description: Latest epoch of revocation status interval of interest
        schema:
          pattern: ^[0-9]*$
          type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredRevokedResult'
      operationId: get_revocation_status
  /credential/w3c/{credential_id}:
    get:
      tags:
      - credentials
      summary: Fetch W3C credential from wallet by id
      parameters:
      - name: credential_id
        in: path
        description: Credential identifier
        required: true
        schema:
          type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VCRecord'
      operationId: get_w3c_credential
    delete:
      tags:
      - credentials
      summary: Remove W3C credential from wallet by id
      parameters:
      - name: credential_id
        in: path
        description: Credential identifier
        required: true
        schema:
          type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HolderModuleResponse'
      operationId: delete_w3c_credential
  /credential/{credential_id}:
    get:
      tags:
      - credentials
      summary: Fetch credential from wallet by id
      parameters:
      - name: credential_id
        in: path
        description: Credential identifier
        required: true
        schema:
          type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IndyCredInfo'
      operationId: get_record
    delete:
      tags:
      - credentials
      summary: Remove credential from wallet by id
      parameters:
      - name: credential_id
        in: path
        description: Credential identifier
        required: true
        schema:
          type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HolderModuleResponse'
      operationId: delete_record
  /credentials:
    get:
      tags:
      - credentials
      summary: Fetch credentials from wallet
      parameters:
      - name: count
        in: query
        description: Maximum number to retrieve
        schema:
          pattern: ^[1-9][0-9]*$
          type: string
      - name: start
        in: query
        description: Start index
        schema:
          pattern: ^[0-9]*$
          type: string
      - name: wql
        in: query
        description: (JSON) WQL query
        schema:
          pattern: ^{.*}$
          type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredInfoList'
      operationId: get_records
  /credentials/w3c:
    post:
      tags:
      - credentials
      summary: Fetch W3C credentials from wallet
      parameters:
      - name: count
        in: query
        description: Maximum number to retrieve
        schema:
          pattern: ^[1-9][0-9]*$
          type: string
      - name: start
        in: query
        description: Start index
        schema:
          pattern: ^[0-9]*$
          type: string
      - name: wql
        in: query
        description: (JSON) WQL query
        schema:
          pattern: ^{.*}$
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/W3CCredentialsListRequest'
        required: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VCRecordList'
      x-codegen-request-body-name: body
      operationId: get_w3c_credentials
  /didexchange/create-request:
    post:
      tags:
      - did-exchange
      summary: Create and send a request against public DID's implicit invitation
      parameters:
      - name: their_public_did
        in: query
        description: Qualified public DID to which to request connection
        required: true
        schema:
          pattern: ^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$|^did:([a-zA-Z0-9_]+):([a-zA-Z0-9_.%-]+(:[a-zA-Z0-9_.%-]+)*)((;[a-zA-Z0-9_.:%-]+=[a-zA-Z0-9_.:%-]*)*)(\/[^#?]*)?([?][^#]*)?(\#.*)?$$
          type: string
      - name: alias
        in: query
        description: Alias for connection
        schema:
          type: string
      - name: mediation_id
        in: query
        description: Identifier for active mediation record to be used
        schema:
          pattern: '[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}'
          type: string
      - name: my_endpoint
        in: query
        description: My URL endpoint
        schema:
          pattern: ^[A-Za-z0-9\.\-\+]+://([A-Za-z0-9][.A-Za-z0-9-_]+[A-Za-z0-9])+(:[1-9][0-9]*)?(/[^?&#]+)?$
          type: string
      - name: my_label
        in: query
        description: Label for connection request
        schema:
          type: string
      - name: use_public_did
        in: query
        description: Use public DID for this connection
        schema:
          type: boolean
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnRecord'
      operationId: create_request
  /didexchange/receive-request:
    post:
      tags:
      - did-exchange
      summary: Receive request against public DID's implicit invitation
      parameters:
      - name: alias
        in: query
        description: Alias for connection
        schema:
          type: string
      - name: auto_accept
        in: query
        description: Auto-accept connection (defaults to configuration)
        schema:
          type: boolean
      - name: mediation_id
        in: query
        description: Identifier for active mediation record to be used
        schema:
          pattern: '[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}'
          type: string
      - name: my_endpoint
        in: query
        description: My URL endpoint
        schema:
          pattern: ^[A-Za-z0-9\.\-\+]+://([A-Za-z0-9][.A-Za-z0-9-_]+[A-Za-z0-9])+(:[1-9][0-9]*)?(/[^?&#]+)?$
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DIDXRequest'
        required: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnRecord'
      x-codegen-request-body-name: body
      operationId: receive_request
  /didexchange/{conn_id}/accept-invitation:
    post:
      tags:
      - did-exchange
      summary: Accept a stored connection invitation
      parameters:
      - name: conn_id
        in: path
        description: Connection identifier
        required: true
        schema:
          type: string
      - name: my_endpoint
        in: query
        description: My URL endpoint
        schema:
          pattern: ^[A-Za-z0-9\.\-\+]+://([A-Za-z0-9][.A-Za-z0-9-_]+[A-Za-z0-9])+(:[1-9][0-9]*)?(/[^?&#]+)?$
          type: string
      - name: my_label
        in: query
        description: Label for connection request
        schema:
          type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnRecord'
      operationId: accept_invitation
  /didexchange/{conn_id}/accept-request:
    post:
      tags:
      - did-exchange
      summary: Accept a stored connection request
      parameters:
      - name: conn_id
        in: path
        description: Connection identifier
        required: true
        schema:
          type: string
      - name: mediation_id
        in: query
        description: Identifier for active mediation record to be used
        schema:
          pattern: '[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}'
          type: string
      - name: my_endpoint
        in: query
        description: My URL endpoint
        schema:
          pattern: ^[A-Za-z0-9\.\-\+]+://([A-Za-z0-9][.A-Za-z0-9-_]+[A-Za-z0-9])+(:[1-9][0-9]*)?(/[^?&#]+)?$
          type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnRecord'
      operationId: accept_request
  /discover-features-2.0/queries:
    get:
      tags:
      - discover-features v2.0
      summary: Query supported features
      parameters:
      - name: connection_id
        in: query
        description: Connection identifier, if none specified, then the query will
          provide features for this agent.
        schema:
          type: string
      - name: query_goal_code
        in: query
        description: Goal-code feature-type query
        schema:
          type: string
      - name: query_protocol
        in: query
        description: Protocol feature-type query
        schema:
          type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V20DiscoveryExchangeResult'
  /discover-features-2.0/records:
    get:
      tags:
      - discover-features v2.0
      summary: Discover Features v2.0 records
      parameters:
      - name: connection_id
        in: query
        description: Connection identifier
        schema:
          type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V20DiscoveryExchangeListResult'
  /discover-features/query:
    get:
      tags:
      - discover-features
      summary: Query supported features
      parameters:
      - name: comment
        in: query
        description: Comment
        schema:
          type: string
      - name: connection_id
        in: query
        description: Connection identifier, if none specified, then the query will
          provide features for this agent.
        schema:
          type: string
      - name: query
        in: query
        description: Protocol feature query
        schema:
          type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V10DiscoveryExchangeResult'
  /discover-features/records:
    get:
      tags:
      - discover-features
      summary: Discover Features records
      parameters:
      - name: connection_id
        in: query
        description: Connection identifier
        schema:
          type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V10DiscoveryExchangeListResult'
  /issue-credential-2.0/create:
    post:
      tags:
      - issue-credential v2.0
      summary: Create credential from attribute values
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V20IssueCredSchemaCore'
        required: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V20CredExRecord'
      x-codegen-request-body-name: body
      operationId: create_credential
  /issue-credential-2.0/create-offer:
    post:
      tags:
      - issue-credential v2.0
      summary: Create a credential offer, independent of any proposal or connection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V20CredOfferConnFreeRequest'
        required: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V20CredExRecord'
      x-codegen-request-body-name: body
  /issue-credential-2.0/records:
    get:
      tags:
      - issue-credential v2.0
      summary: Fetch all credential exchange records
      parameters:
      - name: connection_id
        in: query
        description: Connection identifier
        schema:
          type: string
          format: uuid
      - name: role
        in: query
        description: Role assigned in credential exchange
        schema:
          type: string
          enum:
          - issuer
          - holder
      - name: state
        in: query
        description: Credential exchange state
        schema:
          type: string
          enum:
          - proposal-sent
          - proposal-received
          - offer-sent
          - offer-received
          - request-sent
          - request-received
          - credential-issued
          - credential-received
          - done
          - credential-revoked
          - abandoned
      - name: thread_id
        in: query
        description: Thread identifier
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V20CredExRecordListResult'
      operationId: get_records
  /issue-credential-2.0/records/{cred_ex_id}:
    get:
      tags:
      - issue-credential v2.0
      summary: Fetch a single credential exchange record
      parameters:
      - name: cred_ex_id
        in: path
        description: Credential exchange identifier
        required: true
        schema:
          pattern: '[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}'
          type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V20CredExRecordDetail'
      operationId: get_record
    delete:
      tags:
      - issue-credential v2.0
      summary: Remove an existing credential exchange record
      parameters:
      - name: cred_ex_id
        in: path
        description: Credential exchange identifier
        required: true
        schema:
          pattern: '[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}'
          type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V20IssueCredentialModuleResponse'
      operationId: delete_record
  /issue-credential-2.0/records/{cred_ex_id}/issue:
    post:
      tags:
      - issue-credential v2.0
      summary: Send holder a credential
      parameters:
      - name: cred_ex_id
        in: path
        description: Credential exchange identifier
        required: true
        schema:
          pattern: '[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}'
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V20CredIssueRequest'
        required: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V20CredExRecordDetail'
      x-codegen-request-body-name: body
      operationId: issue_credential
  /issue-credential-2.0/records/{cred_ex_id}/problem-report:
    post:
      tags:
      - issue-credential v2.0
      summary: Send a problem report for credential exchange
      parameters:
      - name: cred_ex_id
        in: path
        description: Credential exchange identifier
        required: true
        schema:
          pattern: '[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}'
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V20CredIssueProblemReportRequest'
        required: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V20IssueCredentialModuleResponse'
      x-codegen-request-body-name: body
      operationId: report_problem
  /issue-credential-2.0/records/{cred_ex_id}/send-offer:
    post:
      tags:
      - issue-credential v2.0
      summary: Send holder a credential offer in reference to a proposal with preview
      parameters:
      - name: cred_ex_id
        in: path
        description: Credential exchange identifier
        required: true
        schema:
          pattern: '[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}'
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V20CredBoundOfferRequest'
        required: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V20CredExRecord'
      x-codegen-request-body-name: body
      operationId: send_offer
  /issue-credential-2.0/records/{cred_ex_id}/send-request:
    post:
      tags:
      - issue-credential v2.0
      summary: Send issuer a credential request
      parameters:
      - name: cred_ex_id
        in: path
        description: Credential exchange identifier
        required: true
        schema:
          pattern: '[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}'
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V20CredRequestRequest'
        required: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V20CredExRecord'
      x-codegen-request-body-name: body
      operationId: send_request
  /issue-credential-2.0/records/{cred_ex_id}/store:
    post:
      tags:
      - issue-credential v2.0
      summary: Store a received credential
      parameters:
      - name: cred_ex_id
        in: path
        description: Credential exchange identifier
        required: true
        schema:
          pattern: '[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}'
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V20CredStoreRequest'
        required: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V20CredExRecordDetail'
      x-codegen-request-body-name: body
      operationId: store_credential
  /issue-credential-2.0/send:
    post:
      tags:
      - issue-credential v2.0
      summary: Send holder a credential, automating entire flow
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V20CredExFree'
        required: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V20CredExRecord'
      x-codegen-request-body-name: body
      operationId: issue_credential_automated
  /issue-credential-2.0/send-offer:
    post:
      tags:
      - issue-credential v2.0
      summary: Send holder a credential offer, independent of any proposal
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V20CredOfferRequest'
        required: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V20CredExRecord'
      x-codegen-request-body-name: body
      operationId: send_offer_free
  /issue-credential-2.0/send-proposal:
    post:
      tags:
      - issue-credential v2.0
      summary: Send issuer a credential proposal
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V20CredExFree'
        required: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V20CredExRecord'
      x-codegen-request-body-name: body
      operationId: send_proposal
  /issue-credential-2.0/send-request:
    post:
      tags:
      - issue-credential v2.0
      summary: Send issuer a credential request not bound to an existing thread. Indy
        credentials cannot start at a request
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V20CredRequestFree'
        required: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V20CredExRecord'
      x-codegen-request-body-name: body
      operationId: send_request_free
  /issue-credential/create:
    post:
      tags:
      - issue-credential v1.0
      summary: Send holder a credential, automating entire flow
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V10CredentialCreate'
        required: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V10CredentialExchange'
      x-codegen-request-body-name: body
      operationId: create_credential
  /issue-credential/create-offer:
    post:
      tags:
      - issue-credential v1.0
      summary: Create a credential offer, independent of any proposal or connection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V10CredentialConnFreeOfferRequest'
        required: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V10CredentialExchange'
      x-codegen-request-body-name: body
      operationId: create_offer
  /issue-credential/records:
    get:
      tags:
      - issue-credential v1.0
      summary: Fetch all credential exchange records
      parameters:
      - name: connection_id
        in: query
        description: Connection identifier
        schema:
          type: string
          format: uuid
      - name: role
        in: query
        description: Role assigned in credential exchange
        schema:
          type: string
          enum:
          - issuer
          - holder
      - name: state
        in: query
        description: Credential exchange state
        schema:
          type: string
          enum:
          - proposal_sent
          - proposal_received
          - offer_sent
          - offer_received
          - request_sent
          - request_received
          - credential_issued
          - credential_received
          - credential_acked
          - credential_revoked
          - abandoned
      - name: thread_id
        in: query
        description: Thread identifier
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V10CredentialExchangeListResult'
      operationId: get_records
  /issue-credential/records/{cred_ex_id}:
    get:
      tags:
      - issue-credential v1.0
      summary: Fetch a single credential exchange record
      parameters:
      - name: cred_ex_id
        in: path
        description: Credential exchange identifier
        required: true
        schema:
          pattern: '[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}'
          type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V10CredentialExchange'
      operationId: get_record
    delete:
      tags:
      - issue-credential v1.0
      summary: Remove an existing credential exchange record
      parameters:
      - name: cred_ex_id
        in: path
        description: Credential exchange identifier
        required: true
        schema:
          pattern: '[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}'
          type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueCredentialModuleResponse'
      operationId: delete_record
  /issue-credential/records/{cred_ex_id}/issue:
    post:
      tags:
      - issue-credential v1.0
      summary: Send holder a credential
      parameters:
      - name: cred_ex_id
        in: path
        description: Credential exchange identifier
        required: true
        schema:
          pattern: '[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}'
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V10CredentialIssueRequest'
        required: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V10CredentialExchange'
      x-codegen-request-body-name: body
      operationId: issue_credential
  /issue-credential/records/{cred_ex_id}/problem-report:
    post:
      tags:
      - issue-credential v1.0
      summary: Send a problem report for credential exchange
      parameters:
      - name: cred_ex_id
        in: path
        description: Credential exchange identifier
        required: true
        schema:
          pattern: '[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}'
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V10CredentialProblemReportRequest'
        required: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueCredentialModuleResponse'
      x-codegen-request-body-name: body
      operationId: report_problem
  /issue-credential/records/{cred_ex_id}/send-offer:
    post:
      tags:
      - issue-credential v1.0
      summary: Send holder a credential offer in reference to a proposal with preview
      parameters:
      - name: cred_ex_id
        in: path
        description: Credential exchange identifier
        required: true
        schema:
          pattern: '[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}'
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V10CredentialBoundOfferRequest'
        required: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V10CredentialExchange'
      x-codegen-request-body-name: body
      operationId: send_offer
  /issue-credential/records/{cred_ex_id}/send-request:
    post:
      tags:
      - issue-credential v1.0
      summary: Send issuer a credential request
      parameters:
      - name: cred_ex_id
        in: path
        description: Credential exchange identifier
        required: true
        schema:
          pattern: '[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}'
          type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V10CredentialExchange'
      operationId: send_request
  /issue-credential/records/{cred_ex_id}/store:
    post:
      tags:
      - issue-credential v1.0
      summary: Store a received credential
      parameters:
      - name: cred_ex_id
        in: path
        description: Credential exchange identifier
        required: true
        schema:
          pattern: '[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}'
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V10CredentialStoreRequest'
        required: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V10CredentialExchange'
      x-codegen-request-body-name: body
      operationId: store_credential
  /issue-credential/send:
    post:
      tags:
      - issue-credential v1.0
      summary: Send holder a credential, automating entire flow
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V10CredentialProposalRequestMand'
        required: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V10CredentialExchange'
      x-codegen-request-body-name: body
      operationId: issue_credential_automated
  /issue-credential/send-offer:
    post:
      tags:
      - issue-credential v1.0
      summary: Send holder a credential offer, independent of any proposal
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V10CredentialFreeOfferRequest'
        required: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V10CredentialExchange'
      x-codegen-request-body-name: body
      operationId: send_offer_free
  /issue-credential/send-proposal:
    post:
      tags:
      - issue-credential v1.0
      summary: Send issuer a credential proposal
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V10CredentialProposalRequestOpt'
        required: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V10CredentialExchange'
      x-codegen-request-body-name: body
      operationId: send_proposal
  /jsonld/sign:
    post:
      tags:
      - jsonld
      summary: Sign a JSON-LD structure and return it
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignRequest'
        required: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignResponse'
      x-codegen-request-body-name: body
      operationId: sign
  /jsonld/verify:
    post:
      tags:
      - jsonld
      summary: Verify a JSON-LD structure.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyRequest'
        required: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyResponse'
      x-codegen-request-body-name: body
      operationId: verify
  /ledger/did-endpoint:
    get:
      tags:
      - ledger
      summary: Get the endpoint for a DID from the ledger.
      parameters:
      - name: did
        in: query
        description: DID of interest
        required: true
        schema:
          pattern: ^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$
          type: string
      - name: endpoint_type
        in: query
        description: Endpoint type of interest (default 'Endpoint')
        schema:
          type: string
          enum:
          - Endpoint
          - Profile
          - LinkedDomains
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDIDEndpointResponse'
      operationId: get_did_endpoint
  /ledger/did-verkey:
    get:
      tags:
      - ledger
      summary: Get the verkey for a DID from the ledger.
      parameters:
      - name: did
        in: query
        description: DID of interest
        required: true
        schema:
          pattern: ^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$
          type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDIDVerkeyResponse'
      operationId: get_did_verkey
  /ledger/get-nym-role:
    get:
      tags:
      - ledger
      summary: Get the role from the NYM registration of a public DID.
      parameters:
      - name: did
        in: query
        description: DID of interest
        required: true
        schema:
          pattern: ^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$
          type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetNymRoleResponse'
      operationId: get_did_nym_role
  /ledger/multiple/config:
    get:
      tags:
      - ledger
      summary: Fetch the multiple ledger configuration currently in use
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerConfigList'
  /ledger/multiple/get-write-ledger:
    get:
      tags:
      - ledger
      summary: Fetch the current write ledger
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WriteLedgerRequest'
  /ledger/register-nym:
    post:
      tags:
      - ledger
      summary: Send a NYM registration to the ledger.
      parameters:
      - name: did
        in: query
        description: DID to register
        required: true
        schema:
          pattern: ^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$
          type: string
      - name: verkey
        in: query
        description: Verification key
        required: true
        schema:
          pattern: ^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$
          type: string
      - name: alias
        in: query
        description: Alias
        schema:
          type: string
      - name: conn_id
        in: query
        description: Connection identifier
        schema:
          type: string
      - name: create_transaction_for_endorser
        in: query
        description: Create Transaction For Endorser's signature
        schema:
          type: boolean
      - name: role
        in: query
        description: Role
        schema:
          type: string
          enum:
          - STEWARD
          - TRUSTEE
          - ENDORSER
          - NETWORK_MONITOR
          - reset
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TxnOrRegisterLedgerNymResponse'
      operationId: register_nym
  /ledger/rotate-public-did-keypair:
    patch:
      tags:
      - ledger
      summary: Rotate key pair for public DID.
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerModulesResult'
      operationId: rotate_public_did_keypair
  /ledger/taa:
    get:
      tags:
      - ledger
      summary: Fetch the current transaction author agreement, if any
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TAAResult'
      operationId: fetch_taa
  /ledger/taa/accept:
    post:
      tags:
      - ledger
      summary: Accept the transaction author agreement
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TAAAccept'
        required: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerModulesResult'
      x-codegen-request-body-name: body
      operationId: accept_taa
  /mediation/default-mediator:
    get:
      tags:
      - mediation
      summary: Get default mediator
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MediationRecord'
      operationId: get_default_mediator
    delete:
      tags:
      - mediation
      summary: Clear default mediator
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MediationRecord'
      operationId: clear_default_mediator
  /mediation/keylists:
    get:
      tags:
      - mediation
      summary: Retrieve keylists by connection or role
      parameters:
      - name: conn_id
        in: query
        description: Connection identifier (optional)
        schema:
          type: string
          format: uuid
      - name: role
        in: query
        description: Filer on role, 'client' for keys         mediated by other agents,
          'server' for keys         mediated by this agent
        schema:
          type: string
          default: server
          enum:
          - client
          - server
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Keylist'
      operationId: retrieve_keylists
  /mediation/keylists/{mediation_id}/send-keylist-query:
    post:
      tags:
      - mediation
      summary: Send keylist query to mediator
      parameters:
      - name: mediation_id
        in: path
        description: Mediation record identifier
        required: true
        schema:
          type: string
          format: uuid
      - name: paginate_limit
        in: query
        description: limit number of results
        schema:
          type: integer
          format: int32
          default: -1
      - name: paginate_offset
        in: query
        description: offset to use in pagination
        schema:
          type: integer
          format: int32
          default: 0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeylistQueryFilterRequest'
        required: false
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeylistQuery'
      x-codegen-request-body-name: body
      operationId: send_keylist_query
  /mediation/keylists/{mediation_id}/send-keylist-update:
    post:
      tags:
      - mediation
      summary: Send keylist update to mediator
      parameters:
      - name: mediation_id
        in: path
        description: Mediation record identifier
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeylistUpdateRequest'
        required: false
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeylistUpdate'
      x-codegen-request-body-name: body
      operationId: send_keylist_update
  /mediation/request/{conn_id}:
    post:
      tags:
      - mediation
      summary: Request mediation from connection
      parameters:
      - name: conn_id
        in: path
        description: Connection identifier
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MediationCreateRequest'
        required: false
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MediationRecord'
      x-codegen-request-body-name: body
      operationId: request_mediation
  /mediation/requests:
    get:
      tags:
      - mediation
      summary: Query mediation requests, returns list of all mediation records
      parameters:
      - name: conn_id
        in: query
        description: Connection identifier (optional)
        schema:
          type: string
          format: uuid
      - name: mediator_terms
        in: query
        description: List of mediator rules for recipient
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            description: Indicate terms to which the mediator requires the recipient
              to agree
      - name: recipient_terms
        in: query
        description: List of recipient rules for mediation
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            description: Indicate terms to which the recipient requires the mediator
              to agree
      - name: state
        in: query
        description: Mediation state (optional)
        schema:
          type: string
          enum:
          - request
          - granted
          - denied
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MediationList'
      operationId: get_records
  /mediation/requests/{mediation_id}:
    get:
      tags:
      - mediation
      summary: Retrieve mediation request record
      parameters:
      - name: mediation_id
        in: path
        description: Mediation record identifier
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MediationRecord'
      operationId: get_record
    delete:
      tags:
      - mediation
      summary: Delete mediation request by ID
      parameters:
      - name: mediation_id
        in: path
        description: Mediation record identifier
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MediationRecord'
      operationId: delete_record
  /mediation/requests/{mediation_id}/deny:
    post:
      tags:
      - mediation
      summary: Deny a stored mediation request
      parameters:
      - name: mediation_id
        in: path
        description: Mediation record identifier
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminMediationDeny'
        required: false
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MediationDeny'
      x-codegen-request-body-name: body
      operationId: deny_mediation_request
  /mediation/requests/{mediation_id}/grant:
    post:
      tags:
      - mediation
      summary: Grant received mediation
      parameters:
      - name: mediation_id
        in: path
        description: Mediation record identifier
        required: true
        schema:
          type: string
          format: uuid
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MediationGrant'
      operationId: grant_mediation_request
  /mediation/{mediation_id}/default-mediator:
    put:
      tags:
      - mediation
      summary: Set default mediator
      parameters:
      - name: mediation_id
        in: path
        description: Mediation record identifier
        required: true
        schema:
          type: string
          format: uuid
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MediationRecord'
      operationId: set_default_mediator
  /multitenancy/wallet:
    post:
      tags:
      - multitenancy
      summary: Create a subwallet
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWalletRequest'
        required: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateWalletResponse'
      x-codegen-request-body-name: body
      operationId: create_wallet
  /multitenancy/wallet/{wallet_id}:
    get:
      tags:
      - multitenancy
      summary: Get a single subwallet
      parameters:
      - name: wallet_id
        in: path
        description: Subwallet identifier
        required: true
        schema:
          type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WalletRecord'
      operationId: get_wallet
    put:
      tags:
      - multitenancy
      summary: Update a subwallet
      parameters:
      - name: wallet_id
        in: path
        description: Subwallet identifier
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateWalletRequest'
        required: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WalletRecord'
      x-codegen-request-body-name: body
      operationId: update_wallet
  /multitenancy/wallet/{wallet_id}/remove:
    post:
      tags:
      - multitenancy
      summary: Remove a subwallet
      parameters:
      - name: wallet_id
        in: path
        description: Subwallet identifier
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveWalletRequest'
        required: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultitenantModuleResponse'
      x-codegen-request-body-name: body
      operationId: delete_wallet
  /multitenancy/wallet/{wallet_id}/token:
    post:
      tags:
      - multitenancy
      summary: Get auth token for a subwallet
      parameters:
      - name: wallet_id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWalletTokenRequest'
        required: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateWalletTokenResponse'
      x-codegen-request-body-name: body
      operationId: get_auth_token
  /multitenancy/wallets:
    get:
      tags:
      - multitenancy
      summary: Query subwallets
      parameters:
      - name: wallet_name
        in: query
        description: Wallet name
        schema:
          type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WalletList'
      operationId: get_wallets
  /out-of-band/create-invitation:
    post:
      tags:
      - out-of-band
      summary: Create a new connection invitation
      parameters:
      - name: auto_accept
        in: query
        description: Auto-accept connection (defaults to configuration)
        schema:
          type: boolean
      - name: multi_use
        in: query
        description: Create invitation for multiple use (default false)
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvitationCreateRequest'
        required: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvitationRecord'
      x-codegen-request-body-name: body
      operationId: create_invitation
  /out-of-band/receive-invitation:
    post:
      tags:
      - out-of-band
      summary: Receive a new connection invitation
      parameters:
      - name: alias
        in: query
        description: Alias for connection
        schema:
          type: string
      - name: auto_accept
        in: query
        description: Auto-accept connection (defaults to configuration)
        schema:
          type: boolean
      - name: mediation_id
        in: query
        description: Identifier for active mediation record to be used
        schema:
          pattern: '[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}'
          type: string
      - name: use_existing_connection
        in: query
        description: Use an existing connection, if possible
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvitationMessage'
        required: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnRecord'
      x-codegen-request-body-name: body
      operationId: receive_invitation
  /plugins:
    get:
      tags:
      - server
      summary: Fetch the list of loaded plugins
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminModules'
      operationId: get_plugins
  /present-proof-2.0/create-request:
    post:
      tags:
      - present-proof v2.0
      summary: Creates a presentation request not bound to any proposal or connection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V20PresCreateRequestRequest'
        required: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V20PresExRecord'
      x-codegen-request-body-name: body
      operationId: create_proof_request
  /present-proof-2.0/records:
    get:
      tags:
      - present-proof v2.0
      summary: Fetch all present-proof exchange records
      parameters:
      - name: connection_id
        in: query
        description: Connection identifier
        schema:
          type: string
          format: uuid
      - name: role
        in: query
        description: Role assigned in presentation exchange
        schema:
          type: string
          enum:
          - prover
          - verifier
      - name: state
        in: query
        description: Presentation exchange state
        schema:
          type: string
          enum:
          - proposal-sent
          - proposal-received
          - request-sent
          - request-received
          - presentation-sent
          - presentation-received
          - done
          - abandoned
      - name: thread_id
        in: query
        description: Thread identifier
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V20PresExRecordList'
      operationId: get_records
  /present-proof-2.0/records/{pres_ex_id}:
    get:
      tags:
      - present-proof v2.0
      summary: Fetch a single presentation exchange record
      parameters:
      - name: pres_ex_id
        in: path
        description: Presentation exchange identifier
        required: true
        schema:
          pattern: '[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}'
          type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V20PresExRecord'
      operationId: get_record
    delete:
      tags:
      - present-proof v2.0
      summary: Remove an existing presentation exchange record
      parameters:
      - name: pres_ex_id
        in: path
        description: Presentation exchange identifier
        required: true
        schema:
          pattern: '[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}'
          type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V20PresentProofModuleResponse'
      operationId: delete_record
  /present-proof-2.0/records/{pres_ex_id}/credentials:
    get:
      tags:
      - present-proof v2.0
      summary: Fetch credentials from wallet for presentation request
      parameters:
      - name: pres_ex_id
        in: path
        description: Presentation exchange identifier
        required: true
        schema:
          pattern: '[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}'
          type: string
      - name: count
        in: query
        description: Maximum number to retrieve
        schema:
          pattern: ^[1-9][0-9]*$
          type: string
      - name: extra_query
        in: query
        description: (JSON) object mapping referents to extra WQL queries
        schema:
          pattern: ^{\s*".*?"\s*:\s*{.*?}\s*(,\s*".*?"\s*:\s*{.*?}\s*)*\s*}$
          type: string
      - name: referent
        in: query
        description: Proof request referents of interest, comma-separated
        schema:
          type: string
      - name: start
        in: query
        description: Start index
        schema:
          pattern: ^[0-9]*$
          type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IndyCredPrecis'
      operationId: get_matching_credentials
  /present-proof-2.0/records/{pres_ex_id}/problem-report:
    post:
      tags:
      - present-proof v2.0
      summary: Send a problem report for presentation exchange
      parameters:
      - name: pres_ex_id
        in: path
        description: Presentation exchange identifier
        required: true
        schema:
          pattern: '[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}'
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V20PresProblemReportRequest'
        required: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V20PresentProofModuleResponse'
      x-codegen-request-body-name: body
      operationId: report_problem
  /present-proof-2.0/records/{pres_ex_id}/send-presentation:
    post:
      tags:
      - present-proof v2.0
      summary: Sends a proof presentation
      parameters:
      - name: pres_ex_id
        in: path
        description: Presentation exchange identifier
        required: true
        schema:
          pattern: '[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}'
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V20PresSpecByFormatRequest'
        required: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V20PresExRecord'
      x-codegen-request-body-name: body
      operationId: send_presentation
  /present-proof-2.0/records/{pres_ex_id}/send-request:
    post:
      tags:
      - present-proof v2.0
      summary: Sends a presentation request in reference to a proposal
      parameters:
      - name: pres_ex_id
        in: path
        description: Presentation exchange identifier
        required: true
        schema:
          pattern: '[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}'
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V20PresentationSendRequestToProposal'
        required: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V20PresExRecord'
      x-codegen-request-body-name: body
      operationId: send_request
  /present-proof-2.0/records/{pres_ex_id}/verify-presentation:
    post:
      tags:
      - present-proof v2.0
      summary: Verify a received presentation
      parameters:
      - name: pres_ex_id
        in: path
        description: Presentation exchange identifier
        required: true
        schema:
          pattern: '[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}'
          type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V20PresExRecord'
      operationId: verify_presentation
  /present-proof-2.0/send-proposal:
    post:
      tags:
      - present-proof v2.0
      summary: Sends a presentation proposal
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V20PresProposalRequest'
        required: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V20PresExRecord'
      x-codegen-request-body-name: body
      operationId: send_proposal
  /present-proof-2.0/send-request:
    post:
      tags:
      - present-proof v2.0
      summary: Sends a free presentation request not bound to any proposal
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V20PresSendRequestRequest'
        required: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V20PresExRecord'
      x-codegen-request-body-name: body
      operationId: send_request_free
  /present-proof/create-request:
    post:
      tags:
      - present-proof v1.0
      summary: Creates a presentation request not bound to any proposal or connection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V10PresentationCreateRequestRequest'
        required: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V10PresentationExchange'
      x-codegen-request-body-name: body
      operationId: create_proof_request
  /present-proof/records:
    get:
      tags:
      - present-proof v1.0
      summary: Fetch all present-proof exchange records
      parameters:
      - name: connection_id
        in: query
        description: Connection identifier
        schema:
          type: string
          format: uuid
      - name: role
        in: query
        description: Role assigned in presentation exchange
        schema:
          type: string
          enum:
          - prover
          - verifier
      - name: state
        in: query
        description: Presentation exchange state
        schema:
          type: string
          enum:
          - proposal_sent
          - proposal_received
          - request_sent
          - request_received
          - presentation_sent
          - presentation_received
          - verified
          - presentation_acked
          - abandoned
      - name: thread_id
        in: query
        description: Thread identifier
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V10PresentationExchangeList'
      operationId: get_records
  /present-proof/records/{pres_ex_id}:
    get:
      tags:
      - present-proof v1.0
      summary: Fetch a single presentation exchange record
      parameters:
      - name: pres_ex_id
        in: path
        description: Presentation exchange identifier
        required: true
        schema:
          pattern: '[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}'
          type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V10PresentationExchange'
      operationId: get_record
    delete:
      tags:
      - present-proof v1.0
      summary: Remove an existing presentation exchange record
      parameters:
      - name: pres_ex_id
        in: path
        description: Presentation exchange identifier
        required: true
        schema:
          pattern: '[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}'
          type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V10PresentProofModuleResponse'
      operationId: delete_record
  /present-proof/records/{pres_ex_id}/credentials:
    get:
      tags:
      - present-proof v1.0
      summary: Fetch credentials for a presentation request from wallet
      parameters:
      - name: pres_ex_id
        in: path
        description: Presentation exchange identifier
        required: true
        schema:
          pattern: '[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}'
          type: string
      - name: count
        in: query
        description: Maximum number to retrieve
        schema:
          pattern: ^[1-9][0-9]*$
          type: string
      - name: extra_query
        in: query
        description: (JSON) object mapping referents to extra WQL queries
        schema:
          pattern: ^{\s*".*?"\s*:\s*{.*?}\s*(,\s*".*?"\s*:\s*{.*?}\s*)*\s*}$
          type: string
      - name: referent
        in: query
        description: Proof request referents of interest, comma-separated
        schema:
          type: string
      - name: start
        in: query
        description: Start index
        schema:
          pattern: ^[0-9]*$
          type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IndyCredPrecis'
      operationId: get_matching_credentials
  /present-proof/records/{pres_ex_id}/problem-report:
    post:
      tags:
      - present-proof v1.0
      summary: Send a problem report for presentation exchange
      parameters:
      - name: pres_ex_id
        in: path
        description: Presentation exchange identifier
        required: true
        schema:
          pattern: '[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}'
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V10PresentationProblemReportRequest'
        required: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V10PresentProofModuleResponse'
      x-codegen-request-body-name: body
      operationId: report_problem
  /present-proof/records/{pres_ex_id}/send-presentation:
    post:
      tags:
      - present-proof v1.0
      summary: Sends a proof presentation
      parameters:
      - name: pres_ex_id
        in: path
        description: Presentation exchange identifier
        required: true
        schema:
          pattern: '[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}'
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IndyPresSpec'
        required: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V10PresentationExchange'
      x-codegen-request-body-name: body
      operationId: send_presentation
  /present-proof/records/{pres_ex_id}/send-request:
    post:
      tags:
      - present-proof v1.0
      summary: Sends a presentation request in reference to a proposal
      parameters:
      - name: pres_ex_id
        in: path
        description: Presentation exchange identifier
        required: true
        schema:
          pattern: '[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}'
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V10PresentationSendRequestToProposal'
        required: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V10PresentationExchange'
      x-codegen-request-body-name: body
      operationId: send_request
  /present-proof/records/{pres_ex_id}/verify-presentation:
    post:
      tags:
      - present-proof v1.0
      summary: Verify a received presentation
      parameters:
      - name: pres_ex_id
        in: path
        description: Presentation exchange identifier
        required: true
        schema:
          pattern: '[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}'
          type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V10PresentationExchange'
      operationId: verify_presentation
  /present-proof/send-proposal:
    post:
      tags:
      - present-proof v1.0
      summary: Sends a presentation proposal
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V10PresentationProposalRequest'
        required: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V10PresentationExchange'
      x-codegen-request-body-name: body
      operationId: send_proposal
  /present-proof/send-request:
    post:
      tags:
      - present-proof v1.0
      summary: Sends a free presentation request not bound to any proposal
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V10PresentationSendRequestRequest'
        required: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V10PresentationExchange'
      x-codegen-request-body-name: body
      operationId: send_request_free
  /resolver/resolve/{did}:
    get:
      tags:
      - resolver
      summary: Retrieve doc for requested did
      parameters:
      - name: did
        in: path
        description: DID
        required: true
        schema:
          pattern: ^did:([a-z0-9]+):((?:[a-zA-Z0-9._%-]*:)*[a-zA-Z0-9._%-]+)$
          type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResolutionResult'
      operationId: get_did
  /revocation/active-registry/{cred_def_id}:
    get:
      tags:
      - revocation
      summary: Get current active revocation registry by credential definition id
      parameters:
      - name: cred_def_id
        in: path
        description: Credential definition identifier
        required: true
        schema:
          pattern: ^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$
          type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RevRegResult'
      operationId: get_active_registry_for_cred_def
  /revocation/clear-pending-revocations:
    post:
      tags:
      - revocation
      summary: Clear pending revocations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClearPendingRevocationsRequest'
        required: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublishRevocations'
      x-codegen-request-body-name: body
      operationId: clear_pending_revocations
  /revocation/create-registry:
    post:
      tags:
      - revocation
      summary: Creates a new revocation registry
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RevRegCreateRequest'
        required: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RevRegResult'
      x-codegen-request-body-name: body
      operationId: create_registry
  /revocation/credential-record:
    get:
      tags:
      - revocation
      summary: Get credential revocation status
      parameters:
      - name: cred_ex_id
        in: query
        description: Credential exchange identifier
        schema:
          pattern: '[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}'
          type: string
      - name: cred_rev_id
        in: query
        description: Credential revocation identifier
        schema:
          pattern: ^[1-9][0-9]*$
          type: string
      - name: rev_reg_id
        in: query
        description: Revocation registry identifier
        schema:
          pattern: ^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)
          type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredRevRecordResult'
      operationId: get_revocation_status
  /revocation/publish-revocations:
    post:
      tags:
      - revocation
      summary: Publish pending revocations to ledger
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PublishRevocations'
        required: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/PublishRevocations'
                - $ref: '#/components/schemas/TxnOrPublishRevocationsResult'
      x-codegen-request-body-name: body
      operationId: publish_revocations
  /revocation/registries/created:
    get:
      tags:
      - revocation
      summary: Search for matching revocation registries that current agent created
      parameters:
      - name: cred_def_id
        in: query
        description: Credential definition identifier
        schema:
          pattern: ^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$
          type: string
      - name: state
        in: query
        description: Revocation registry state
        schema:
          type: string
          enum:
          - init
          - generated
          - posted
          - active
          - full
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RevRegsCreated'
      operationId: get_created_registries
  /revocation/registry/{rev_reg_id}:
    get:
      tags:
      - revocation
      summary: Get revocation registry by revocation registry id
      parameters:
      - name: rev_reg_id
        in: path
        description: Revocation Registry identifier
        required: true
        schema:
          pattern: ^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)
          type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RevRegResult'
      operationId: get_registry
    patch:
      tags:
      - revocation
      summary: Update revocation registry with new public URI to its tails file
      parameters:
      - name: rev_reg_id
        in: path
        description: Revocation Registry identifier
        required: true
        schema:
          pattern: ^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RevRegUpdateTailsFileUri'
        required: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RevRegResult'
      x-codegen-request-body-name: body
      operationId: update_registry
  /revocation/registry/{rev_reg_id}/definition:
    post:
      tags:
      - revocation
      summary: Send revocation registry definition to ledger
      parameters:
      - name: rev_reg_id
        in: path
        description: Revocation Registry identifier
        required: true
        schema:
          pattern: ^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)
          type: string
      - name: conn_id
        in: query
        description: Connection identifier
        schema:
          type: string
      - name: create_transaction_for_endorser
        in: query
        description: Create Transaction For Endorser's signature
        schema:
          type: boolean
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/RevRegResult'
                - $ref: '#/components/schemas/TxnOrRevRegResult'
      operationId: publish_rev_reg_def
  /revocation/registry/{rev_reg_id}/entry:
    post:
      tags:
      - revocation
      summary: Send revocation registry entry to ledger
      parameters:
      - name: rev_reg_id
        in: path
        description: Revocation Registry identifier
        required: true
        schema:
          pattern: ^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)
          type: string
      - name: conn_id
        in: query
        description: Connection identifier
        schema:
          type: string
      - name: create_transaction_for_endorser
        in: query
        description: Create Transaction For Endorser's signature
        schema:
          type: boolean
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RevRegResult'
      operationId: publish_rev_reg_entry
  /revocation/registry/{rev_reg_id}/fix-revocation-entry-state:
    put:
      tags:
      - revocation
      summary: Fix revocation state in wallet and return number of updated entries
      parameters:
      - name: rev_reg_id
        in: path
        description: Revocation Registry identifier
        required: true
        schema:
          pattern: ^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)
          type: string
      - name: apply_ledger_update
        in: query
        description: Apply updated accumulator transaction to ledger
        required: true
        schema:
          type: boolean
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RevRegWalletUpdatedResult'
  /revocation/registry/{rev_reg_id}/issued:
    get:
      tags:
      - revocation
      summary: Get number of credentials issued against revocation registry
      parameters:
      - name: rev_reg_id
        in: path
        description: Revocation Registry identifier
        required: true
        schema:
          pattern: ^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)
          type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RevRegIssuedResult'
      operationId: get_registry_issued_credentials_count
  /revocation/registry/{rev_reg_id}/issued/details:
    get:
      tags:
      - revocation
      summary: Get details of credentials issued against revocation registry
      parameters:
      - name: rev_reg_id
        in: path
        description: Revocation Registry identifier
        required: true
        schema:
          pattern: ^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)
          type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredRevRecordDetailsResult'
  /revocation/registry/{rev_reg_id}/issued/indy_recs:
    get:
      tags:
      - revocation
      summary: Get details of revoked credentials from ledger
      parameters:
      - name: rev_reg_id
        in: path
        description: Revocation Registry identifier
        required: true
        schema:
          pattern: ^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)
          type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredRevIndyRecordsResult'
  /revocation/registry/{rev_reg_id}/set-state:
    patch:
      tags:
      - revocation
      summary: Set revocation registry state manually
      parameters:
      - name: rev_reg_id
        in: path
        description: Revocation Registry identifier
        required: true
        schema:
          pattern: ^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)
          type: string
      - name: state
        in: query
        description: Revocation registry state to set
        required: true
        schema:
          type: string
          enum:
          - init
          - generated
          - posted
          - active
          - full
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RevRegResult'
      operationId: set_registry_state
  /revocation/registry/{rev_reg_id}/tails-file:
    get:
      tags:
      - revocation
      summary: Download tails file
      parameters:
      - name: rev_reg_id
        in: path
        description: Revocation Registry identifier
        required: true
        schema:
          pattern: ^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)
          type: string
      responses:
        200:
          description: tails file
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      operationId: download_tails_file
    put:
      tags:
      - revocation
      summary: Upload local tails file to server
      parameters:
      - name: rev_reg_id
        in: path
        description: Revocation Registry identifier
        required: true
        schema:
          pattern: ^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)
          type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RevocationModuleResponse'
      operationId: upload_tails_file
  /revocation/revoke:
    post:
      tags:
      - revocation
      summary: Revoke an issued credential
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RevokeRequest'
        required: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RevocationModuleResponse'
      x-codegen-request-body-name: body
      operationId: revoke_credential
  /schemas:
    post:
      tags:
      - schema
      summary: Sends a schema to the ledger
      parameters:
      - name: conn_id
        in: query
        description: Connection identifier
        schema:
          type: string
      - name: create_transaction_for_endorser
        in: query
        description: Create Transaction For Endorser's signature
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SchemaSendRequest'
        required: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/SchemaSendResult'
                - $ref: '#/components/schemas/TxnOrSchemaSendResult'
      x-codegen-request-body-name: body
      operationId: publish_schema
  /schemas/created:
    get:
      tags:
      - schema
      summary: Search for matching schema that agent originated
      parameters:
      - name: schema_id
        in: query
        description: Schema identifier
        schema:
          pattern: ^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$
          type: string
      - name: schema_issuer_did
        in: query
        description: Schema issuer DID
        schema:
          pattern: ^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$
          type: string
      - name: schema_name
        in: query
        description: Schema name
        schema:
          type: string
      - name: schema_version
        in: query
        description: Schema version
        schema:
          pattern: ^[0-9.]+$
          type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchemasCreatedResult'
      operationId: get_created_schemas
  /schemas/{schema_id}:
    get:
      tags:
      - schema
      summary: Gets a schema from the ledger
      parameters:
      - name: schema_id
        in: path
        description: Schema identifier
        required: true
        schema:
          pattern: ^[1-9][0-9]*|[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$
          type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchemaGetResult'
      operationId: get_schema
  /schemas/{schema_id}/write_record:
    post:
      tags:
      - schema
      summary: Writes a schema non-secret record to the wallet
      parameters:
      - name: schema_id
        in: path
        description: Schema identifier
        required: true
        schema:
          pattern: ^[1-9][0-9]*|[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$
          type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchemaGetResult'
      operationId: write_record
  /shutdown:
    get:
      tags:
      - server
      summary: Shut down server
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminShutdown'
      operationId: shutdown_server
  /status:
    get:
      tags:
      - server
      summary: Fetch the server status
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminStatus'
      operationId: get_status
  /status/config:
    get:
      tags:
      - server
      summary: Fetch the server configuration
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminConfig'
      operationId: get_config
  /status/live:
    get:
      tags:
      - server
      summary: Liveliness check
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminStatusLiveliness'
      operationId: check_liveliness
  /status/ready:
    get:
      tags:
      - server
      summary: Readiness check
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminStatusReadiness'
      operationId: get_ready_state
  /status/reset:
    post:
      tags:
      - server
      summary: Reset statistics
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminReset'
      operationId: reset_statistics
  /transaction/{tran_id}/resend:
    post:
      tags:
      - endorse-transaction
      summary: For Author to resend a particular transaction request
      parameters:
      - name: tran_id
        in: path
        description: Transaction identifier
        required: true
        schema:
          type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionRecord'
      operationId: resend_transaction_request
  /transactions:
    get:
      tags:
      - endorse-transaction
      summary: Query transactions
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionList'
      operationId: get_records
  /transactions/create-request:
    post:
      tags:
      - endorse-transaction
      summary: For author to send a transaction request
      parameters:
      - name: tran_id
        in: query
        description: Transaction identifier
        required: true
        schema:
          type: string
      - name: endorser_write_txn
        in: query
        description: Endorser will write the transaction after endorsing it
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Date'
        required: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionRecord'
      x-codegen-request-body-name: body
      operationId: create_request
  /transactions/{conn_id}/set-endorser-info:
    post:
      tags:
      - endorse-transaction
      summary: Set Endorser Info
      parameters:
      - name: conn_id
        in: path
        description: Connection identifier
        required: true
        schema:
          type: string
      - name: endorser_did
        in: query
        description: Endorser DID
        required: true
        schema:
          type: string
      - name: endorser_name
        in: query
        description: Endorser Name
        schema:
          type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EndorserInfo'
      operationId: set_endorser_info
  /transactions/{conn_id}/set-endorser-role:
    post:
      tags:
      - endorse-transaction
      summary: Set transaction jobs
      parameters:
      - name: conn_id
        in: path
        description: Connection identifier
        required: true
        schema:
          type: string
      - name: transaction_my_job
        in: query
        description: Transaction related jobs
        schema:
          type: string
          enum:
          - TRANSACTION_AUTHOR
          - TRANSACTION_ENDORSER
          - reset
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionJobs'
      operationId: set_endorser_role
  /transactions/{tran_id}:
    get:
      tags:
      - endorse-transaction
      summary: Fetch a single transaction record
      parameters:
      - name: tran_id
        in: path
        description: Transaction identifier
        required: true
        schema:
          type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionRecord'
      operationId: get_transaction
  /transactions/{tran_id}/cancel:
    post:
      tags:
      - endorse-transaction
      summary: For Author to cancel a particular transaction request
      parameters:
      - name: tran_id
        in: path
        description: Transaction identifier
        required: true
        schema:
          type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionRecord'
      operationId: cancel_transaction
  /transactions/{tran_id}/endorse:
    post:
      tags:
      - endorse-transaction
      summary: For Endorser to endorse a particular transaction record
      parameters:
      - name: tran_id
        in: path
        description: Transaction identifier
        required: true
        schema:
          type: string
      - name: endorser_did
        in: query
        description: Endorser DID
        schema:
          type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionRecord'
      operationId: endorse_transaction
  /transactions/{tran_id}/refuse:
    post:
      tags:
      - endorse-transaction
      summary: For Endorser to refuse a particular transaction record
      parameters:
      - name: tran_id
        in: path
        description: Transaction identifier
        required: true
        schema:
          type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionRecord'
      operationId: refuse_transaction
  /transactions/{tran_id}/write:
    post:
      tags:
      - endorse-transaction
      summary: For Author / Endorser to write an endorsed transaction to the ledger
      parameters:
      - name: tran_id
        in: path
        description: Transaction identifier
        required: true
        schema:
          type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionRecord'
      operationId: write_transaction
  /wallet/did:
    get:
      tags:
      - wallet
      summary: List wallet DIDs
      parameters:
      - name: did
        in: query
        description: DID of interest
        schema:
          pattern: ^did:key:z[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]+$|^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$
          type: string
      - name: key_type
        in: query
        description: Key type to query for.
        schema:
          type: string
          enum:
          - ed25519
          - bls12381g2
      - name: method
        in: query
        description: DID method to query for. e.g. sov to only fetch indy/sov DIDs
        schema:
          type: string
          enum:
          - key
          - sov
      - name: posture
        in: query
        description: Whether DID is current public DID, posted to ledger but current
          public DID, or local to the wallet
        schema:
          type: string
          enum:
          - public
          - posted
          - wallet_only
      - name: verkey
        in: query
        description: Verification key of interest
        schema:
          pattern: ^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$
          type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DIDList'
      operationId: get_dids
  /wallet/did/create:
    post:
      tags:
      - wallet
      summary: Create a local DID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DIDCreate'
        required: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DIDResult'
      x-codegen-request-body-name: body
      operationId: create_did
  /wallet/did/local/rotate-keypair:
    patch:
      tags:
      - wallet
      summary: Rotate keypair for a DID not posted to the ledger
      parameters:
      - name: did
        in: query
        description: DID of interest
        required: true
        schema:
          pattern: ^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$
          type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WalletModuleResponse'
      operationId: rotate_keypair
  /wallet/did/public:
    get:
      tags:
      - wallet
      summary: Fetch the current public DID
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DIDResult'
      operationId: get_public_did
    post:
      tags:
      - wallet
      summary: Assign the current public DID
      parameters:
      - name: did
        in: query
        description: DID of interest
        required: true
        schema:
          pattern: ^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$
          type: string
      - name: conn_id
        in: query
        description: Connection identifier
        schema:
          type: string
      - name: create_transaction_for_endorser
        in: query
        description: Create Transaction For Endorser's signature
        schema:
          type: boolean
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DIDResult'
      operationId: set_public_did
  /wallet/get-did-endpoint:
    get:
      tags:
      - wallet
      summary: Query DID endpoint in wallet
      parameters:
      - name: did
        in: query
        description: DID of interest
        required: true
        schema:
          pattern: ^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$
          type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DIDEndpoint'
      operationId: get_did_endpoint
  /wallet/set-did-endpoint:
    post:
      tags:
      - wallet
      summary: Update endpoint in wallet and on ledger if posted to it
      parameters:
      - name: conn_id
        in: query
        description: Connection identifier
        schema:
          type: string
      - name: create_transaction_for_endorser
        in: query
        description: Create Transaction For Endorser's signature
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DIDEndpointWithType'
        required: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WalletModuleResponse'
      x-codegen-request-body-name: body
      operationId: set_did_endpoint
  /features:
    get:
      operationId: get_features
components:
  schemas:
    AMLRecord:
      type: object
      properties:
        aml:
          type: object
          additionalProperties:
            type: string
        amlContext:
          type: string
        version:
          type: string
    ActionMenuFetchResult:
      type: object
      properties:
        result:
          type: object
          description: Action menu
          allOf:
          - $ref: '#/components/schemas/Menu'
    ActionMenuModulesResult:
      type: object
    AdminConfig:
      type: object
      properties:
        config:
          type: object
          properties: {}
          description: Configuration settings
    AdminMediationDeny:
      type: object
      properties:
        mediator_terms:
          type: array
          description: List of mediator rules for recipient
          items:
            type: string
            description: Indicate terms to which the mediator requires the recipient
              to agree
        recipient_terms:
          type: array
          description: List of recipient rules for mediation
          items:
            type: string
            description: Indicate terms to which the recipient requires the mediator
              to agree
    AdminModules:
      type: object
      properties:
        result:
          type: array
          description: List of admin modules
          items:
            type: string
            description: admin module
    AdminReset:
      type: object
    AdminShutdown:
      type: object
    AdminStatus:
      type: object
      properties:
        conductor:
          type: object
          properties: {}
          description: Conductor statistics
        label:
          type: string
          description: Default label
          nullable: true
        timing:
          type: object
          properties: {}
          description: Timing results
        version:
          type: string
          description: Version code
    AdminStatusLiveliness:
      type: object
      properties:
        alive:
          type: boolean
          description: Liveliness status
          example: true
    AdminStatusReadiness:
      type: object
      properties:
        ready:
          type: boolean
          description: Readiness status
          example: true
    AttachDecorator:
      required:
      - data
      type: object
      properties:
        '@id':
          type: string
          description: Attachment identifier
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        byte_count:
          type: integer
          description: Byte count of data included by reference
          format: int32
          example: 1234
        data:
          $ref: '#/components/schemas/AttachDecoratorData'
        description:
          type: string
          description: Human-readable description of content
          example: view from doorway, facing east, with lights off
        filename:
          type: string
          description: File name
          example: IMG1092348.png
        lastmod_time:
          pattern: ^\d{4}-\d\d-\d\d[T ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$
          type: string
          description: Hint regarding last modification datetime, in ISO-8601 format
          example: 2021-12-31 23:59:59+00:00
        mime-type:
          type: string
          description: MIME type
          example: image/png
    AttachDecoratorData:
      type: object
      properties:
        base64:
          pattern: ^[a-zA-Z0-9+/]*={0,2}$
          type: string
          description: Base64-encoded data
          example: ey4uLn0=
        json:
          type: object
          properties: {}
          description: JSON-serialized data
          example: '{"sample": "content"}'
        jws:
          type: object
          description: Detached Java Web Signature
          allOf:
          - $ref: '#/components/schemas/AttachDecoratorDataJWS'
        links:
          type: array
          description: List of hypertext links to data
          items:
            type: string
            example: https://link.to/data
        sha256:
          pattern: ^[a-fA-F0-9+/]{64}$
          type: string
          description: SHA256 hash (binhex encoded) of content
          example: 617a48c7c8afe0521efdc03e5bb0ad9e655893e6b4b51f0e794d70fba132aacb
    AttachDecoratorData1JWS:
      required:
      - header
      - signature
      type: object
      properties:
        header:
          $ref: '#/components/schemas/AttachDecoratorDataJWSHeader'
        protected:
          pattern: ^[-_a-zA-Z0-9]*$
          type: string
          description: protected JWS header
          example: ey4uLn0
        signature:
          pattern: ^[-_a-zA-Z0-9]*$
          type: string
          description: signature
          example: ey4uLn0
    AttachDecoratorDataJWS:
      type: object
      properties:
        header:
          $ref: '#/components/schemas/AttachDecoratorDataJWSHeader'
        protected:
          pattern: ^[-_a-zA-Z0-9]*$
          type: string
          description: protected JWS header
          example: ey4uLn0
        signature:
          pattern: ^[-_a-zA-Z0-9]*$
          type: string
          description: signature
          example: ey4uLn0
        signatures:
          type: array
          description: List of signatures
          items:
            $ref: '#/components/schemas/AttachDecoratorData1JWS'
    AttachDecoratorDataJWSHeader:
      required:
      - kid
      type: object
      properties:
        kid:
          pattern: ^did:(?:key:z[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]+|sov:[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}(;.*)?(\?.*)?#.+)$
          type: string
          description: Key identifier, in W3C did:key or DID URL format
          example: did:sov:LjgpST2rjsoxYegQDRm7EL#keys-4
    AttachmentDef:
      type: object
      properties:
        id:
          type: string
          description: Attachment identifier
          example: attachment-0
        type:
          type: string
          description: Attachment type
          example: present-proof
          enum:
          - credential-offer
          - present-proof
    AttributeMimeTypesResult:
      type: object
      properties:
        results:
          type: object
          additionalProperties:
            type: string
            description: MIME type
          nullable: true
    BasicMessageModuleResponse:
      type: object
    ClaimFormat:
      type: object
      properties:
        jwt:
          type: object
          properties: {}
        jwt_vc:
          type: object
          properties: {}
        jwt_vp:
          type: object
          properties: {}
        ldp:
          type: object
          properties: {}
        ldp_vc:
          type: object
          properties: {}
        ldp_vp:
          type: object
          properties: {}
    ClearPendingRevocationsRequest:
      type: object
      properties:
        purge:
          type: object
          additionalProperties:
            type: array
            items:
              pattern: ^[1-9][0-9]*$
              type: string
              description: Credential revocation identifier
              example: '12345'
          description: 'Credential revocation ids by revocation registry id: omit
            for all, specify null or empty list for all pending per revocation registry'
    ConnRecord:
      type: object
      properties:
        accept:
          type: string
          description: 'Connection acceptance: manual or auto'
          example: auto
          enum:
          - manual
          - auto
        alias:
          type: string
          description: Optional alias to apply to connection for later use
          example: Bob, providing quotes
        connection_id:
          type: string
          description: Connection identifier
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        connection_protocol:
          type: string
          description: Connection protocol used
          example: connections/1.0
          enum:
          - connections/1.0
          - didexchange/1.0
        created_at:
          pattern: ^\d{4}-\d\d-\d\d[T ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$
          type: string
          description: Time of record creation
          example: 2021-12-31 23:59:59+00:00
        error_msg:
          type: string
          description: Error message
          example: No DIDDoc provided; cannot connect to public DID
        inbound_connection_id:
          type: string
          description: Inbound routing connection id to use
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        invitation_key:
          pattern: ^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$
          type: string
          description: Public key for connection
          example: H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV
        invitation_mode:
          type: string
          description: Invitation mode
          example: once
          enum:
          - once
          - multi
          - static
        invitation_msg_id:
          type: string
          description: ID of out-of-band invitation message
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        my_did:
          pattern: ^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$
          type: string
          description: Our DID for connection
          example: WgWxqztrNooG92RXvxSTWv
        request_id:
          type: string
          description: Connection request identifier
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        rfc23_state:
          type: string
          description: State per RFC 23
          readOnly: true
          example: invitation-sent
        routing_state:
          type: string
          description: Routing state of connection
          example: active
          enum:
          - none
          - request
          - active
          - error
        state:
          type: string
          description: Current record state
          example: active
        their_did:
          pattern: ^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$
          type: string
          description: Their DID for connection
          example: WgWxqztrNooG92RXvxSTWv
        their_label:
          type: string
          description: Their label for connection
          example: Bob
        their_public_did:
          type: string
          description: Other agent's public DID for connection
          example: 2cpBmR3FqGKWi5EyUbpRY8
        their_role:
          type: string
          description: Their role in the connection protocol
          example: requester
          enum:
          - invitee
          - requester
          - inviter
          - responder
        updated_at:
          pattern: ^\d{4}-\d\d-\d\d[T ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$
          type: string
          description: Time of last record update
          example: 2021-12-31 23:59:59+00:00
    ConnectionInvitation:
      type: object
      properties:
        '@id':
          type: string
          description: Message identifier
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        '@type':
          type: string
          description: Message type
          readOnly: true
          example: https://didcomm.org/my-family/1.0/my-message-type
        did:
          pattern: ^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$
          type: string
          description: DID for connection invitation
          example: WgWxqztrNooG92RXvxSTWv
        imageUrl:
          type: string
          description: Optional image URL for connection invitation
          format: url
          nullable: true
          example: http://192.168.56.101/img/logo.jpg
        label:
          type: string
          description: Optional label for connection invitation
          example: Bob
        recipientKeys:
          type: array
          description: List of recipient keys
          items:
            pattern: ^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$
            type: string
            description: Recipient public key
            example: H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV
        routingKeys:
          type: array
          description: List of routing keys
          items:
            pattern: ^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$
            type: string
            description: Routing key
            example: H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV
        serviceEndpoint:
          type: string
          description: Service endpoint at which to reach this agent
          example: http://192.168.56.101:8020
    ConnectionList:
      type: object
      properties:
        results:
          type: array
          description: List of connection records
          items:
            $ref: '#/components/schemas/ConnRecord'
    ConnectionMetadata:
      type: object
      properties:
        results:
          type: object
          properties: {}
          description: Dictionary of metadata associated with connection.
    ConnectionMetadataSetRequest:
      required:
      - metadata
      type: object
      properties:
        metadata:
          type: object
          properties: {}
          description: Dictionary of metadata to set for connection.
    ConnectionModuleResponse:
      type: object
    ConnectionStaticRequest:
      type: object
      properties:
        alias:
          type: string
          description: Alias to assign to this connection
        my_did:
          pattern: ^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$
          type: string
          description: Local DID
          example: WgWxqztrNooG92RXvxSTWv
        my_seed:
          type: string
          description: Seed to use for the local DID
        their_did:
          pattern: ^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$
          type: string
          description: Remote DID
          example: WgWxqztrNooG92RXvxSTWv
        their_endpoint:
          pattern: ^[A-Za-z0-9\.\-\+]+://([A-Za-z0-9][.A-Za-z0-9-_]+[A-Za-z0-9])+(:[1-9][0-9]*)?(/[^?&#]+)?$
          type: string
          description: URL endpoint for other party
          example: https://myhost:8021
        their_label:
          type: string
          description: Other party's label for this connection
        their_seed:
          type: string
          description: Seed to use for the remote DID
        their_verkey:
          type: string
          description: Remote verification key
    ConnectionStaticResult:
      required:
      - my_did
      - my_endpoint
      - my_verkey
      - record
      - their_did
      - their_verkey
      type: object
      properties:
        my_did:
          pattern: ^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$
          type: string
          description: Local DID
          example: WgWxqztrNooG92RXvxSTWv
        my_endpoint:
          pattern: ^[A-Za-z0-9\.\-\+]+://([A-Za-z0-9][.A-Za-z0-9-_]+[A-Za-z0-9])+(:[1-9][0-9]*)?(/[^?&#]+)?$
          type: string
          description: My URL endpoint
          example: https://myhost:8021
        my_verkey:
          pattern: ^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$
          type: string
          description: My verification key
          example: H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV
        record:
          $ref: '#/components/schemas/ConnRecord'
        their_did:
          pattern: ^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$
          type: string
          description: Remote DID
          example: WgWxqztrNooG92RXvxSTWv
        their_verkey:
          pattern: ^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$
          type: string
          description: Remote verification key
          example: H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV
    Constraints:
      type: object
      properties:
        fields:
          type: array
          items:
            $ref: '#/components/schemas/DIFField'
        is_holder:
          type: array
          items:
            $ref: '#/components/schemas/DIFHolder'
        limit_disclosure:
          type: string
          description: LimitDisclosure
        status_active:
          type: string
          enum:
          - required
          - allowed
          - disallowed
        status_revoked:
          type: string
          enum:
          - required
          - allowed
          - disallowed
        status_suspended:
          type: string
          enum:
          - required
          - allowed
          - disallowed
        subject_is_issuer:
          type: string
          description: SubjectIsIssuer
          enum:
          - required
          - preferred
    CreateInvitationRequest:
      type: object
      properties:
        mediation_id:
          pattern: '[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}'
          type: string
          description: Identifier for active mediation record to be used
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        metadata:
          type: object
          properties: {}
          description: Optional metadata to attach to the connection created with
            the invitation
        my_label:
          type: string
          description: Optional label for connection invitation
          example: Bob
        recipient_keys:
          type: array
          description: List of recipient keys
          items:
            pattern: ^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$
            type: string
            description: Recipient public key
            example: H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV
        routing_keys:
          type: array
          description: List of routing keys
          items:
            pattern: ^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$
            type: string
            description: Routing key
            example: H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV
        service_endpoint:
          type: string
          description: Connection endpoint
          example: http://192.168.56.102:8020
    CreateWalletRequest:
      type: object
      properties:
        image_url:
          type: string
          description: Image url for this wallet. This image url is publicized            (self-attested)
            to other agents as part of forming a connection.
          example: https://aries.ca/images/sample.png
        key_management_mode:
          type: string
          description: Key management method to use for this wallet.
          example: managed
          enum:
          - managed
        label:
          type: string
          description: Label for this wallet. This label is publicized            (self-attested)
            to other agents as part of forming a connection.
          example: Alice
        wallet_dispatch_type:
          type: string
          description: Webhook target dispatch type for this wallet.             default
            - Dispatch only to webhooks associated with this wallet.             base
            - Dispatch only to webhooks associated with the base wallet.             both
            - Dispatch to both webhook targets.
          example: default
          enum:
          - default
          - both
          - base
        wallet_key:
          type: string
          description: Master key used for key derivation.
          example: MySecretKey123
        wallet_key_derivation:
          type: string
          description: Key derivation
          example: RAW
          enum:
          - ARGON2I_MOD
          - ARGON2I_INT
          - RAW
        wallet_name:
          type: string
          description: Wallet name
          example: MyNewWallet
        wallet_type:
          type: string
          description: Type of the wallet to create
          example: indy
          enum:
          - askar
          - in_memory
          - indy
        wallet_webhook_urls:
          type: array
          description: List of Webhook URLs associated with this subwallet
          items:
            type: string
            description: Optional webhook URL to receive webhook messages
            example: http://localhost:8022/webhooks
    CreateWalletResponse:
      required:
      - key_management_mode
      - wallet_id
      type: object
      properties:
        created_at:
          pattern: ^\d{4}-\d\d-\d\d[T ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$
          type: string
          description: Time of record creation
          example: 2021-12-31 23:59:59+00:00
        key_management_mode:
          type: string
          description: Mode regarding management of wallet key
          enum:
          - managed
          - unmanaged
        settings:
          type: object
          properties: {}
          description: Settings for this wallet.
        state:
          type: string
          description: Current record state
          example: active
        token:
          type: string
          description: Authorization token to authenticate wallet requests
          example: eyJhbGciOiJFZERTQSJ9.eyJhIjogIjAifQ.dBjftJeZ4CVP-mB92K27uhbUJU1p1r_wW1gFWFOEjXk
        updated_at:
          pattern: ^\d{4}-\d\d-\d\d[T ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$
          type: string
          description: Time of last record update
          example: 2021-12-31 23:59:59+00:00
        wallet_id:
          type: string
          description: Wallet record ID
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
    CreateWalletTokenRequest:
      type: object
      properties:
        wallet_key:
          type: string
          description: Master key used for key derivation. Only required for             unamanged
            wallets.
          example: MySecretKey123
    CreateWalletTokenResponse:
      type: object
      properties:
        token:
          type: string
          description: Authorization token to authenticate wallet requests
          example: eyJhbGciOiJFZERTQSJ9.eyJhIjogIjAifQ.dBjftJeZ4CVP-mB92K27uhbUJU1p1r_wW1gFWFOEjXk
    CredAttrSpec:
      required:
      - name
      - value
      type: object
      properties:
        mime-type:
          type: string
          description: 'MIME type: omit for (null) default'
          nullable: true
          example: image/jpeg
        name:
          type: string
          description: Attribute name
          example: favourite_drink
        value:
          type: string
          description: 'Attribute value: base64-encode if MIME type is present'
          example: martini
    CredDefValue:
      type: object
      properties:
        primary:
          type: object
          description: Primary value for credential definition
          allOf:
          - $ref: '#/components/schemas/CredDefValuePrimary'
        revocation:
          type: object
          description: Revocation value for credential definition
          allOf:
          - $ref: '#/components/schemas/CredDefValueRevocation'
    CredDefValuePrimary:
      type: object
      properties:
        n:
          pattern: ^[0-9]*$
          type: string
          example: '0'
        r:
          $ref: '#/components/schemas/Generated'
        rctxt:
          pattern: ^[0-9]*$
          type: string
          example: '0'
        s:
          pattern: ^[0-9]*$
          type: string
          example: '0'
        z:
          pattern: ^[0-9]*$
          type: string
          example: '0'
    CredDefValueRevocation:
      type: object
      properties:
        g:
          type: string
          example: 1 1F14F&ECB578F 2 095E45DDF417D
        g_dash:
          type: string
          example: 1 1D64716fCDC00C 1 0C781960FA66E3D3 2 095E45DDF417D
        h:
          type: string
          example: 1 16675DAE54BFAE8 2 095E45DD417D
        h0:
          type: string
          example: 1 21E5EF9476EAF18 2 095E45DDF417D
        h1:
          type: string
          example: 1 236D1D99236090 2 095E45DDF417D
        h2:
          type: string
          example: 1 1C3AE8D1F1E277 2 095E45DDF417D
        h_cap:
          type: string
          example: 1 1B2A32CF3167 1 2490FEBF6EE55 1 0000000000000000
        htilde:
          type: string
          example: 1 1D8549E8C0F8 2 095E45DDF417D
        pk:
          type: string
          example: 1 142CD5E5A7DC 1 153885BD903312 2 095E45DDF417D
        u:
          type: string
          example: 1 0C430AAB2B4710 1 1CB3A0932EE7E 1 0000000000000000
        y:
          type: string
          example: 1 153558BD903312 2 095E45DDF417D 1 0000000000000000
    CredInfoList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/IndyCredInfo'
    CredRevIndyRecordsResult:
      type: object
      properties:
        rev_reg_delta:
          type: object
          properties: {}
          description: Indy revocation registry delta
    CredRevRecordDetailsResult:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/IssuerCredRevRecord'
    CredRevRecordResult:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/IssuerCredRevRecord'
    CredRevokedResult:
      type: object
      properties:
        revoked:
          type: boolean
          description: Whether credential is revoked on the ledger
    Credential:
      required:
      - '@context'
      - credentialSubject
      - issuanceDate
      - issuer
      - type
      type: object
      properties:
        '@context':
          type: array
          description: The JSON-LD context of the credential
          example:
          - https://www.w3.org/2018/credentials/v1
          - https://www.w3.org/2018/credentials/examples/v1
          items:
            type: object
        credentialSubject:
          type: object
          example: ''
        expirationDate:
          pattern: ^([0-9]{4})-([0-9]{2})-([0-9]{2})([Tt ]([0-9]{2}):([0-9]{2}):([0-9]{2})(\.[0-9]+)?)?(([Zz]|([+-])([0-9]{2}):([0-9]{2})))?$
          type: string
          description: The expiration date
          example: 2010-01-01 19:23:24+00:00
        id:
          pattern: \w+:(\/?\/?)[^\s]+
          type: string
          example: http://example.edu/credentials/1872
        issuanceDate:
          pattern: ^([0-9]{4})-([0-9]{2})-([0-9]{2})([Tt ]([0-9]{2}):([0-9]{2}):([0-9]{2})(\.[0-9]+)?)?(([Zz]|([+-])([0-9]{2}):([0-9]{2})))?$
          type: string
          description: The issuance date
          example: 2010-01-01 19:23:24+00:00
        issuer:
          type: object
          description: The JSON-LD Verifiable Credential Issuer. Either string of
            object with id field.
          example: did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH
        proof:
          type: object
          description: The proof of the credential
          example:
            created: 2019-12-11 03:50:55
            jws: eyJhbGciOiAiRWREU0EiLCAiYjY0IjogZmFsc2UsICJjcml0JiNjQiXX0..lKJU0Df_keblRKhZAS9Qq6zybm-HqUXNVZ8vgEPNTAjQKBhQDxvXNo7nvtUBb_Eq1Ch6YBKY5qBQ
            proofPurpose: assertionMethod
            type: Ed25519Signature2018
            verificationMethod: did:key:z6Mkgg342Ycpuk263R9d8Aq6MUaxPn1DDeHyGo38EefXmgDL#z6Mkgg342Ycpuk263R9d8Aq6MUaxPn1DDeHyGo38EefXmgDL
          allOf:
          - $ref: '#/components/schemas/LinkedDataProof'
        type:
          type: array
          description: The JSON-LD type of the credential
          example:
          - VerifiableCredential
          - AlumniCredential
          items:
            type: string
    CredentialDefinition:
      type: object
      properties:
        id:
          pattern: ^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$
          type: string
          description: Credential definition identifier
          example: WgWxqztrNooG92RXvxSTWv:3:CL:20:tag
        schemaId:
          type: string
          description: Schema identifier within credential definition identifier
          example: '20'
        tag:
          type: string
          description: Tag within credential definition identifier
          example: tag
        type:
          enum:
          - CL
          description: 'Signature type: CL for Camenisch-Lysyanskaya'
          example: CL
        value:
          type: object
          description: Credential definition primary and revocation values
          allOf:
          - $ref: '#/components/schemas/CredDefValue'
        ver:
          pattern: ^[0-9.]+$
          type: string
          description: Node protocol version
          example: '1.0'
    CredentialDefinitionGetResult:
      type: object
      properties:
        credential_definition:
          $ref: '#/components/schemas/CredentialDefinition'
    CredentialDefinitionSendRequest:
      type: object
      properties:
        revocation_registry_size:
          maximum: 32768
          minimum: 4
          type: integer
          description: Revocation registry size
          format: int32
          example: 1000
        schema_id:
          pattern: ^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$
          type: string
          description: Schema identifier
          example: WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0
        support_revocation:
          type: boolean
          description: Revocation supported flag
        tag:
          type: string
          description: Credential definition identifier tag
          example: default
    CredentialDefinitionSendResult:
      type: object
      required:
      - credential_definition_id
      properties:
        credential_definition_id:
          pattern: ^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$
          type: string
          description: Credential definition identifier
          example: WgWxqztrNooG92RXvxSTWv:3:CL:20:tag
    CredentialDefinitionsCreatedResult:
      type: object
      properties:
        credential_definition_ids:
          type: array
          items:
            pattern: ^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$
            type: string
            description: Credential definition identifiers
            example: WgWxqztrNooG92RXvxSTWv:3:CL:20:tag
    CredentialOffer:
      required:
      - offers~attach
      type: object
      properties:
        '@id':
          type: string
          description: Message identifier
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        '@type':
          type: string
          description: Message type
          readOnly: true
          example: https://didcomm.org/my-family/1.0/my-message-type
        comment:
          type: string
          description: Human-readable comment
          nullable: true
        credential_preview:
          $ref: '#/components/schemas/CredentialPreview'
        offers~attach:
          type: array
          items:
            $ref: '#/components/schemas/AttachDecorator'
    CredentialPreview:
      required:
      - attributes
      type: object
      properties:
        '@type':
          type: string
          description: Message type identifier
          example: issue-credential/1.0/credential-preview
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/CredAttrSpec'
    CredentialProposal:
      type: object
      properties:
        '@id':
          type: string
          description: Message identifier
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        '@type':
          type: string
          description: Message type
          readOnly: true
          example: https://didcomm.org/my-family/1.0/my-message-type
        comment:
          type: string
          description: Human-readable comment
          nullable: true
        cred_def_id:
          pattern: ^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$
          type: string
          example: WgWxqztrNooG92RXvxSTWv:3:CL:20:tag
        credential_proposal:
          $ref: '#/components/schemas/CredentialPreview'
        issuer_did:
          pattern: ^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$
          type: string
          example: WgWxqztrNooG92RXvxSTWv
        schema_id:
          pattern: ^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$
          type: string
          example: WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0
        schema_issuer_did:
          pattern: ^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$
          type: string
          example: WgWxqztrNooG92RXvxSTWv
        schema_name:
          type: string
        schema_version:
          pattern: ^[0-9.]+$
          type: string
          example: '1.0'
    CredentialStatusOptions:
      required:
      - type
      type: object
      properties:
        type:
          type: string
          description: Credential status method type to use for the credential. Should
            match status method registered in the Verifiable Credential Extension
            Registry
          example: CredentialStatusList2017
    DID:
      type: object
      properties:
        did:
          pattern: ^did:key:z[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]+$|^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$
          type: string
          description: DID of interest
          example: WgWxqztrNooG92RXvxSTWv
        key_type:
          type: string
          description: Key type associated with the DID
          example: ed25519
          enum:
          - ed25519
          - bls12381g2
        method:
          type: string
          description: Did method associated with the DID
          example: sov
          enum:
          - sov
          - key
        posture:
          type: string
          description: Whether DID is current public DID, posted to ledger but not
            current public DID, or local to the wallet
          example: wallet_only
          enum:
          - public
          - posted
          - wallet_only
        verkey:
          pattern: ^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$
          type: string
          description: Public verification key
          example: H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV
    DIDCreate:
      type: object
      properties:
        method:
          type: string
          example: sov
          enum:
          - key
          - sov
        options:
          type: object
          description: To define a key type for a did:key
          allOf:
          - $ref: '#/components/schemas/DIDCreateOptions'
    DIDCreateOptions:
      required:
      - key_type
      type: object
      properties:
        key_type:
          type: string
          example: ed25519
          enum:
          - ed25519
          - bls12381g2
    DIDEndpoint:
      required:
      - did
      type: object
      properties:
        did:
          pattern: ^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$
          type: string
          description: DID of interest
          example: WgWxqztrNooG92RXvxSTWv
        endpoint:
          pattern: ^[A-Za-z0-9\.\-\+]+://([A-Za-z0-9][.A-Za-z0-9-_]+[A-Za-z0-9])+(:[1-9][0-9]*)?(/[^?&#]+)?$
          type: string
          description: Endpoint to set (omit to delete)
          example: https://myhost:8021
    DIDEndpointWithType:
      required:
      - did
      type: object
      properties:
        did:
          pattern: ^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$
          type: string
          description: DID of interest
          example: WgWxqztrNooG92RXvxSTWv
        endpoint:
          pattern: ^[A-Za-z0-9\.\-\+]+://([A-Za-z0-9][.A-Za-z0-9-_]+[A-Za-z0-9])+(:[1-9][0-9]*)?(/[^?&#]+)?$
          type: string
          description: Endpoint to set (omit to delete)
          example: https://myhost:8021
        endpoint_type:
          type: string
          description: Endpoint type to set (default 'Endpoint'); affects only public
            or posted DIDs
          example: Endpoint
          enum:
          - Endpoint
          - Profile
          - LinkedDomains
    DIDList:
      type: object
      properties:
        results:
          type: array
          description: DID list
          items:
            $ref: '#/components/schemas/DID'
    DIDResult:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/DID'
    DIDXRequest:
      required:
      - label
      type: object
      properties:
        '@id':
          type: string
          description: Message identifier
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        '@type':
          type: string
          description: Message type
          readOnly: true
          example: https://didcomm.org/my-family/1.0/my-message-type
        did:
          pattern: ^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$
          type: string
          description: DID of exchange
          example: WgWxqztrNooG92RXvxSTWv
        did_doc~attach:
          type: object
          description: As signed attachment, DID Doc associated with DID
          allOf:
          - $ref: '#/components/schemas/AttachDecorator'
        label:
          type: string
          description: Label for DID exchange request
          example: Request to connect with Bob
    DIFField:
      type: object
      properties:
        filter:
          $ref: '#/components/schemas/Filter'
        id:
          type: string
          description: ID
        path:
          type: array
          items:
            type: string
            description: Path
        predicate:
          type: string
          description: Preference
          enum:
          - required
          - preferred
        purpose:
          type: string
          description: Purpose
    DIFHolder:
      type: object
      properties:
        directive:
          type: string
          description: Preference
          enum:
          - required
          - preferred
        field_id:
          type: array
          items:
            pattern: '[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}'
            type: string
            description: FieldID
            example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
    DIFOptions:
      type: object
      properties:
        challenge:
          pattern: '[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}'
          type: string
          description: Challenge protect against replay attack
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        domain:
          type: string
          description: Domain protect against replay attack
          example: 4jt78h47fh47
    DIFPresSpec:
      type: object
      properties:
        issuer_id:
          type: string
          description: Issuer identifier to sign the presentation, if different from
            current public DID
        presentation_definition:
          $ref: '#/components/schemas/PresentationDefinition'
        record_ids:
          type: object
          properties: {}
          description: Mapping of input_descriptor id to list of stored W3C credential
            record_id
          example:
            <input descriptor id_1>:
            - <record id_1>
            - <record id_2>
            <input descriptor id_2>:
            - <record id>
        reveal_doc:
          type: object
          properties: {}
          description: reveal doc [JSON-LD frame] dict used to derive the credential
            when selective disclosure is required
          example:
            '@context':
            - https://www.w3.org/2018/credentials/v1
            - https://w3id.org/security/bbs/v1
            '@explicit': true
            '@requireAll': true
            credentialSubject:
              '@explicit': true
              '@requireAll': true
              Observation:
              - effectiveDateTime: {}
                '@explicit': true
                '@requireAll': true
            issuanceDate: {}
            issuer: {}
            type:
            - VerifiableCredential
            - LabReport
    DIFProofProposal:
      type: object
      properties:
        input_descriptors:
          type: array
          items:
            $ref: '#/components/schemas/InputDescriptors'
        options:
          $ref: '#/components/schemas/DIFOptions'
    DIFProofRequest:
      required:
      - presentation_definition
      type: object
      properties:
        options:
          $ref: '#/components/schemas/DIFOptions'
        presentation_definition:
          $ref: '#/components/schemas/PresentationDefinition'
    Date:
      required:
      - expires_time
      type: object
      properties:
        expires_time:
          type: string
          description: Expiry Date
          format: date-time
          example: 2021-03-29 05:22:19+00:00
    Disclose:
      required:
      - protocols
      type: object
      properties:
        '@id':
          type: string
          description: Message identifier
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        '@type':
          type: string
          description: Message type
          readOnly: true
          example: https://didcomm.org/my-family/1.0/my-message-type
        protocols:
          type: array
          description: List of protocol descriptors
          items:
            $ref: '#/components/schemas/ProtocolDescriptor'
    Disclosures:
      required:
      - disclosures
      type: object
      properties:
        '@id':
          type: string
          description: Message identifier
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        '@type':
          type: string
          description: Message type
          readOnly: true
          example: https://didcomm.org/my-family/1.0/my-message-type
        disclosures:
          type: array
          description: List of protocol or goal_code descriptors
          items:
            type: object
    Doc:
      required:
      - credential
      - options
      type: object
      properties:
        credential:
          type: object
          properties: {}
          description: Credential to sign
        options:
          type: object
          description: Signature options
          allOf:
          - $ref: '#/components/schemas/SignatureOptions'
    EndorserInfo:
      required:
      - endorser_did
      type: object
      properties:
        endorser_did:
          type: string
          description: Endorser DID
        endorser_name:
          type: string
          description: Endorser Name
    EndpointsResult:
      type: object
      properties:
        my_endpoint:
          pattern: ^[A-Za-z0-9\.\-\+]+://([A-Za-z0-9][.A-Za-z0-9-_]+[A-Za-z0-9])+(:[1-9][0-9]*)?(/[^?&#]+)?$
          type: string
          description: My endpoint
          example: https://myhost:8021
        their_endpoint:
          pattern: ^[A-Za-z0-9\.\-\+]+://([A-Za-z0-9][.A-Za-z0-9-_]+[A-Za-z0-9])+(:[1-9][0-9]*)?(/[^?&#]+)?$
          type: string
          description: Their endpoint
          example: https://myhost:8021
    Filter:
      type: object
      properties:
        const:
          type: object
          description: Const
        enum:
          type: array
          items:
            type: object
            description: Enum
        exclusiveMaximum:
          type: object
          description: ExclusiveMaximum
        exclusiveMinimum:
          type: object
          description: ExclusiveMinimum
        format:
          type: string
          description: Format
        maxLength:
          type: integer
          description: Max Length
          format: int32
          example: 1234
        maximum:
          type: object
          description: Maximum
        minLength:
          type: integer
          description: Min Length
          format: int32
          example: 1234
        minimum:
          type: object
          description: Minimum
        not:
          type: boolean
          description: Not
          example: false
        pattern:
          type: string
          description: Pattern
        type:
          type: string
          description: Type
    Generated:
      type: object
      properties:
        master_secret:
          pattern: ^[0-9]*$
          type: string
          example: '0'
        number:
          pattern: ^[0-9]*$
          type: string
          example: '0'
        remainder:
          pattern: ^[0-9]*$
          type: string
          example: '0'
    GetDIDEndpointResponse:
      type: object
      properties:
        endpoint:
          pattern: ^[A-Za-z0-9\.\-\+]+://([A-Za-z0-9][.A-Za-z0-9-_]+[A-Za-z0-9])+(:[1-9][0-9]*)?(/[^?&#]+)?$
          type: string
          description: Full verification key
          nullable: true
          example: https://myhost:8021
    GetDIDVerkeyResponse:
      type: object
      properties:
        verkey:
          pattern: ^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$
          type: string
          description: Full verification key
          nullable: true
          example: H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV
    GetNymRoleResponse:
      type: object
      properties:
        role:
          type: string
          description: Ledger role
          example: ENDORSER
          enum:
          - STEWARD
          - TRUSTEE
          - ENDORSER
          - NETWORK_MONITOR
          - USER
          - ROLE_REMOVE
    HolderModuleResponse:
      type: object
    IndyAttrValue:
      required:
      - encoded
      - raw
      type: object
      properties:
        encoded:
          pattern: ^-?[0-9]*$
          type: string
          description: Attribute encoded value
          example: -1
        raw:
          type: string
          description: Attribute raw value
    IndyCredAbstract:
      required:
      - cred_def_id
      - key_correctness_proof
      - nonce
      - schema_id
      type: object
      properties:
        cred_def_id:
          pattern: ^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$
          type: string
          description: Credential definition identifier
          example: WgWxqztrNooG92RXvxSTWv:3:CL:20:tag
        key_correctness_proof:
          type: object
          description: Key correctness proof
          allOf:
          - $ref: '#/components/schemas/IndyKeyCorrectnessProof'
        nonce:
          pattern: ^[0-9]*$
          type: string
          description: Nonce in credential abstract
          example: '0'
        schema_id:
          pattern: ^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$
          type: string
          description: Schema identifier
          example: WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0
    IndyCredInfo:
      type: object
      properties:
        attrs:
          type: object
          additionalProperties:
            type: string
            example: alice
          description: Attribute names and value
        cred_def_id:
          pattern: ^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$
          type: string
          description: Credential definition identifier
          example: WgWxqztrNooG92RXvxSTWv:3:CL:20:tag
        cred_rev_id:
          pattern: ^[1-9][0-9]*$
          type: string
          description: Credential revocation identifier
          nullable: true
          example: '12345'
        referent:
          type: string
          description: Wallet referent
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        rev_reg_id:
          pattern: ^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)
          type: string
          description: Revocation registry identifier
          nullable: true
          example: WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0
        schema_id:
          pattern: ^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$
          type: string
          description: Schema identifier
          example: WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0
    IndyCredPrecis:
      type: object
      properties:
        cred_info:
          type: object
          description: Credential info
          allOf:
          - $ref: '#/components/schemas/IndyCredInfo'
        interval:
          type: object
          description: Non-revocation interval from presentation request
          allOf:
          - $ref: '#/components/schemas/IndyNonRevocationInterval'
        presentation_referents:
          type: array
          items:
            type: string
            description: presentation referent
            example: 1_age_uuid
    IndyCredRequest:
      required:
      - blinded_ms
      - blinded_ms_correctness_proof
      - cred_def_id
      - nonce
      type: object
      properties:
        blinded_ms:
          type: object
          properties: {}
          description: Blinded master secret
        blinded_ms_correctness_proof:
          type: object
          properties: {}
          description: Blinded master secret correctness proof
        cred_def_id:
          pattern: ^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$
          type: string
          description: Credential definition identifier
          example: WgWxqztrNooG92RXvxSTWv:3:CL:20:tag
        nonce:
          pattern: ^[0-9]*$
          type: string
          description: Nonce in credential request
          example: '0'
        prover_did:
          pattern: ^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$
          type: string
          description: Prover DID
          example: WgWxqztrNooG92RXvxSTWv
    IndyCredential:
      required:
      - cred_def_id
      - schema_id
      - signature
      - signature_correctness_proof
      - values
      type: object
      properties:
        cred_def_id:
          pattern: ^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$
          type: string
          description: Credential definition identifier
          example: WgWxqztrNooG92RXvxSTWv:3:CL:20:tag
        rev_reg:
          type: object
          properties: {}
          description: Revocation registry state
          nullable: true
        rev_reg_id:
          pattern: ^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)
          type: string
          description: Revocation registry identifier
          nullable: true
          example: WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0
        schema_id:
          pattern: ^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$
          type: string
          description: Schema identifier
          example: WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0
        signature:
          type: object
          properties: {}
          description: Credential signature
        signature_correctness_proof:
          type: object
          properties: {}
          description: Credential signature correctness proof
        values:
          type: object
          additionalProperties:
            type: object
            description: Attribute value
            allOf:
            - $ref: '#/components/schemas/IndyAttrValue'
          description: Credential attributes
        witness:
          type: object
          properties: {}
          description: Witness for revocation proof
          nullable: true
    IndyEQProof:
      type: object
      properties:
        a_prime:
          pattern: ^[0-9]*$
          type: string
          example: '0'
        e:
          pattern: ^[0-9]*$
          type: string
          example: '0'
        m:
          type: object
          additionalProperties:
            pattern: ^[0-9]*$
            type: string
            example: '0'
        m2:
          pattern: ^[0-9]*$
          type: string
          example: '0'
        revealed_attrs:
          type: object
          additionalProperties:
            pattern: ^-?[0-9]*$
            type: string
            example: -1
        v:
          pattern: ^[0-9]*$
          type: string
          example: '0'
    IndyGEProof:
      type: object
      properties:
        alpha:
          pattern: ^[0-9]*$
          type: string
          example: '0'
        mj:
          pattern: ^[0-9]*$
          type: string
          example: '0'
        predicate:
          $ref: '#/components/schemas/IndyGEProofPred'
        r:
          type: object
          additionalProperties:
            pattern: ^[0-9]*$
            type: string
            example: '0'
        t:
          type: object
          additionalProperties:
            pattern: ^[0-9]*$
            type: string
            example: '0'
        u:
          type: object
          additionalProperties:
            pattern: ^[0-9]*$
            type: string
            example: '0'
    IndyGEProofPred:
      type: object
      properties:
        attr_name:
          type: string
          description: Attribute name, indy-canonicalized
        p_type:
          type: string
          description: Predicate type
          enum:
          - LT
          - LE
          - GE
          - GT
        value:
          type: integer
          description: Predicate threshold value
          format: int32
    IndyKeyCorrectnessProof:
      required:
      - c
      - xr_cap
      - xz_cap
      type: object
      properties:
        c:
          pattern: ^[0-9]*$
          type: string
          description: c in key correctness proof
          example: '0'
        xr_cap:
          type: array
          description: xr_cap in key correctness proof
          items:
            type: array
            description: xr_cap components in key correctness proof
            items:
              type: string
              description: xr_cap component values in key correctness proof
        xz_cap:
          pattern: ^[0-9]*$
          type: string
          description: xz_cap in key correctness proof
          example: '0'
    IndyNonRevocProof:
      type: object
      properties:
        c_list:
          type: object
          additionalProperties:
            type: string
        x_list:
          type: object
          additionalProperties:
            type: string
    IndyNonRevocationInterval:
      type: object
      properties:
        from:
          minimum: 0
          type: integer
          description: Earliest time of interest in non-revocation interval
          format: int32
          example: 1640995199
        to:
          minimum: 0
          type: integer
          description: Latest time of interest in non-revocation interval
          format: int32
          example: 1640995199
    IndyPresAttrSpec:
      required:
      - name
      type: object
      properties:
        cred_def_id:
          pattern: ^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$
          type: string
          example: WgWxqztrNooG92RXvxSTWv:3:CL:20:tag
        mime-type:
          type: string
          description: MIME type (default null)
          example: image/jpeg
        name:
          type: string
          description: Attribute name
          example: favourite_drink
        referent:
          type: string
          description: Credential referent
          example: '0'
        value:
          type: string
          description: Attribute value
          example: martini
    IndyPresPredSpec:
      required:
      - name
      - predicate
      - threshold
      type: object
      properties:
        cred_def_id:
          pattern: ^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$
          type: string
          description: Credential definition identifier
          example: WgWxqztrNooG92RXvxSTWv:3:CL:20:tag
        name:
          type: string
          description: Attribute name
          example: high_score
        predicate:
          type: string
          description: Predicate type ('<', '<=', '>=', or '>')
          example: '>='
          enum:
          - <
          - <=
          - '>='
          - '>'
        threshold:
          type: integer
          description: Threshold value
          format: int32
    IndyPresPreview:
      required:
      - attributes
      - predicates
      type: object
      properties:
        '@type':
          type: string
          description: Message type identifier
          example: did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/present-proof/1.0/presentation-preview
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/IndyPresAttrSpec'
        predicates:
          type: array
          items:
            $ref: '#/components/schemas/IndyPresPredSpec'
    IndyPresSpec:
      required:
      - requested_attributes
      - requested_predicates
      - self_attested_attributes
      type: object
      properties:
        requested_attributes:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/IndyRequestedCredsRequestedAttr'
          description: Nested object mapping proof request attribute referents to
            requested-attribute specifiers
        requested_predicates:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/IndyRequestedCredsRequestedPred'
          description: Nested object mapping proof request predicate referents to
            requested-predicate specifiers
        self_attested_attributes:
          type: object
          additionalProperties:
            type: string
            description: Self-attested attribute values to use in requested-credentials
              structure for proof construction
            example: self_attested_value
          description: Self-attested attributes to build into proof
        trace:
          type: boolean
          description: Whether to trace event (default false)
          example: false
    IndyPrimaryProof:
      type: object
      properties:
        eq_proof:
          type: object
          description: Indy equality proof
          nullable: true
          allOf:
          - $ref: '#/components/schemas/IndyEQProof'
        ge_proofs:
          type: array
          description: Indy GE proofs
          nullable: true
          items:
            $ref: '#/components/schemas/IndyGEProof'
    IndyProof:
      type: object
      properties:
        identifiers:
          type: array
          description: Indy proof.identifiers content
          items:
            $ref: '#/components/schemas/IndyProofIdentifier'
        proof:
          type: object
          description: Indy proof.proof content
          allOf:
          - $ref: '#/components/schemas/IndyProofProof'
        requested_proof:
          type: object
          description: Indy proof.requested_proof content
          allOf:
          - $ref: '#/components/schemas/IndyProofRequestedProof'
    IndyProofIdentifier:
      type: object
      properties:
        cred_def_id:
          pattern: ^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$
          type: string
          description: Credential definition identifier
          example: WgWxqztrNooG92RXvxSTWv:3:CL:20:tag
        rev_reg_id:
          pattern: ^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)
          type: string
          description: Revocation registry identifier
          nullable: true
          example: WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0
        schema_id:
          pattern: ^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$
          type: string
          description: Schema identifier
          example: WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0
        timestamp:
          minimum: 0
          type: integer
          description: Timestamp epoch
          format: int32
          nullable: true
          example: 1640995199
    IndyProofProof:
      type: object
      properties:
        aggregated_proof:
          type: object
          description: Indy proof aggregated proof
          allOf:
          - $ref: '#/components/schemas/IndyProofProofAggregatedProof'
        proofs:
          type: array
          description: Indy proof proofs
          items:
            $ref: '#/components/schemas/IndyProofProofProofsProof'
    IndyProofProofAggregatedProof:
      type: object
      properties:
        c_hash:
          type: string
          description: c_hash value
        c_list:
          type: array
          description: c_list value
          items:
            type: array
            items:
              type: integer
              format: int32
    IndyProofProofProofsProof:
      type: object
      properties:
        non_revoc_proof:
          type: object
          description: Indy non-revocation proof
          nullable: true
          allOf:
          - $ref: '#/components/schemas/IndyNonRevocProof'
        primary_proof:
          type: object
          description: Indy primary proof
          allOf:
          - $ref: '#/components/schemas/IndyPrimaryProof'
    IndyProofReqAttrSpec:
      type: object
      properties:
        name:
          type: string
          description: Attribute name
          example: favouriteDrink
        names:
          type: array
          description: Attribute name group
          items:
            type: string
            example: age
        non_revoked:
          type: object
          nullable: true
          allOf:
          - $ref: '#/components/schemas/IndyProofReqAttrSpecNonRevoked'
        restrictions:
          type: array
          description: 'If present, credential must satisfy one of given restrictions:
            specify schema_id, schema_issuer_did, schema_name, schema_version, issuer_did,
            cred_def_id, and/or attr::<attribute-name>::value where <attribute-name>
            represents a credential attribute name'
          items:
            type: object
            additionalProperties:
              type: string
              example: WgWxqztrNooG92RXvxSTWv:3:CL:20:tag
    IndyProofReqAttrSpecNonRevoked:
      type: object
      properties:
        from:
          minimum: 0
          type: integer
          description: Earliest time of interest in non-revocation interval
          example: 1640995199
        to:
          minimum: 0
          type: integer
          description: Latest time of interest in non-revocation interval
          example: 1640995199
    IndyProofReqPredSpec:
      required:
      - name
      - p_type
      - p_value
      type: object
      properties:
        name:
          type: string
          description: Attribute name
          example: index
        non_revoked:
          type: object
          nullable: true
          allOf:
          - $ref: '#/components/schemas/IndyProofReqPredSpecNonRevoked'
        p_type:
          type: string
          description: Predicate type ('<', '<=', '>=', or '>')
          example: '>='
          enum:
          - <
          - <=
          - '>='
          - '>'
        p_value:
          type: integer
          description: Threshold value
          format: int32
        restrictions:
          type: array
          description: 'If present, credential must satisfy one of given restrictions:
            specify schema_id, schema_issuer_did, schema_name, schema_version, issuer_did,
            cred_def_id, and/or attr::<attribute-name>::value where <attribute-name>
            represents a credential attribute name'
          items:
            type: object
            additionalProperties:
              type: string
              example: WgWxqztrNooG92RXvxSTWv:3:CL:20:tag
    IndyProofReqPredSpecNonRevoked:
      type: object
      properties:
        from:
          minimum: 0
          type: integer
          description: Earliest time of interest in non-revocation interval
          example: 1640995199
        to:
          minimum: 0
          type: integer
          description: Latest time of interest in non-revocation interval
          example: 1640995199
    IndyProofRequest:
      required:
      - requested_attributes
      - requested_predicates
      type: object
      properties:
        name:
          type: string
          description: Proof request name
          example: Proof request
        non_revoked:
          type: object
          nullable: true
          allOf:
          - $ref: '#/components/schemas/IndyProofRequestNonRevoked'
        nonce:
          pattern: ^[1-9][0-9]*$
          type: string
          description: Nonce
          example: '1'
        requested_attributes:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/IndyProofReqAttrSpec'
          description: Requested attribute specifications of proof request
        requested_predicates:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/IndyProofReqPredSpec'
          description: Requested predicate specifications of proof request
        version:
          pattern: ^[0-9.]+$
          type: string
          description: Proof request version
          example: '1.0'
    IndyProofRequestNonRevoked:
      type: object
      properties:
        from:
          minimum: 0
          type: integer
          description: Earliest time of interest in non-revocation interval
          example: 1640995199
        to:
          minimum: 0
          type: integer
          description: Latest time of interest in non-revocation interval
          example: 1640995199
    IndyProofRequestedProof:
      type: object
      properties:
        predicates:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/IndyProofRequestedProofPredicate'
          description: Proof requested proof predicates.
        revealed_attr_groups:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/IndyProofRequestedProofRevealedAttrGroup'
          description: Proof requested proof revealed attribute groups
          nullable: true
        revealed_attrs:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/IndyProofRequestedProofRevealedAttr'
          description: Proof requested proof revealed attributes
          nullable: true
        self_attested_attrs:
          type: object
          properties: {}
          description: Proof requested proof self-attested attributes
        unrevealed_attrs:
          type: object
          properties: {}
          description: Unrevealed attributes
    IndyProofRequestedProofPredicate:
      type: object
      properties:
        sub_proof_index:
          type: integer
          description: Sub-proof index
          format: int32
    IndyProofRequestedProofRevealedAttr:
      type: object
      properties:
        encoded:
          pattern: ^-?[0-9]*$
          type: string
          description: Encoded value
          example: -1
        raw:
          type: string
          description: Raw value
        sub_proof_index:
          type: integer
          description: Sub-proof index
          format: int32
    IndyProofRequestedProofRevealedAttrGroup:
      type: object
      properties:
        sub_proof_index:
          type: integer
          description: Sub-proof index
          format: int32
        values:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/RawEncoded'
          description: Indy proof requested proof revealed attr groups group value
    IndyRequestedCredsRequestedAttr:
      required:
      - cred_id
      type: object
      properties:
        cred_id:
          type: string
          description: Wallet credential identifier (typically but not necessarily
            a UUID)
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        revealed:
          type: boolean
          description: Whether to reveal attribute in proof (default true)
    IndyRequestedCredsRequestedPred:
      required:
      - cred_id
      type: object
      properties:
        cred_id:
          type: string
          description: Wallet credential identifier (typically but not necessarily
            a UUID)
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        timestamp:
          minimum: 0
          type: integer
          description: Epoch timestamp of interest for non-revocation proof
          example: 1640995199
    IndyRevRegDef:
      type: object
      properties:
        credDefId:
          pattern: ^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$
          type: string
          description: Credential definition identifier
          example: WgWxqztrNooG92RXvxSTWv:3:CL:20:tag
        id:
          pattern: ^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)
          type: string
          description: Indy revocation registry identifier
          example: WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0
        revocDefType:
          type: string
          description: Revocation registry type (specify CL_ACCUM)
          example: CL_ACCUM
          enum:
          - CL_ACCUM
        tag:
          type: string
          description: Revocation registry tag
        value:
          type: object
          description: Revocation registry definition value
          allOf:
          - $ref: '#/components/schemas/IndyRevRegDefValue'
        ver:
          pattern: ^[0-9.]+$
          type: string
          description: Version of revocation registry definition
          example: '1.0'
    IndyRevRegDefValue:
      type: object
      properties:
        issuanceType:
          type: string
          description: Issuance type
          enum:
          - ISSUANCE_ON_DEMAND
          - ISSUANCE_BY_DEFAULT
        maxCredNum:
          minimum: 1
          type: integer
          description: Maximum number of credentials; registry size
          format: int32
          example: 10
        publicKeys:
          type: object
          description: Public keys
          allOf:
          - $ref: '#/components/schemas/IndyRevRegDefValuePublicKeys'
        tailsHash:
          pattern: ^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$
          type: string
          description: Tails hash value
          example: H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV
        tailsLocation:
          type: string
          description: Tails file location
    IndyRevRegDefValuePublicKeys:
      type: object
      properties:
        accumKey:
          $ref: '#/components/schemas/IndyRevRegDefValuePublicKeysAccumKey'
    IndyRevRegDefValuePublicKeysAccumKey:
      type: object
      properties:
        z:
          type: string
          description: Value for z
          example: 1 120F522F81E6B7 1 09F7A59005C4939854
    IndyRevRegEntry:
      type: object
      properties:
        value:
          type: object
          description: Revocation registry entry value
          allOf:
          - $ref: '#/components/schemas/IndyRevRegEntryValue'
        ver:
          pattern: ^[0-9.]+$
          type: string
          description: Version of revocation registry entry
          example: '1.0'
    IndyRevRegEntryValue:
      type: object
      properties:
        accum:
          type: string
          description: Accumulator value
          example: 21 11792B036AED0AAA12A4 4 298B2571FFC63A737
        prevAccum:
          type: string
          description: Previous accumulator value
          example: 21 137AC810975E4 6 76F0384B6F23
        revoked:
          type: array
          description: Revoked credential revocation identifiers
          items:
            type: integer
            format: int32
    InputDescriptors:
      type: object
      properties:
        constraints:
          $ref: '#/components/schemas/Constraints'
        group:
          type: array
          items:
            type: string
            description: Group
        id:
          type: string
          description: ID
        metadata:
          type: object
          properties: {}
          description: Metadata dictionary
        name:
          type: string
          description: Name
        purpose:
          type: string
          description: Purpose
        schema:
          type: object
          description: Accepts a list of schema or a dict containing filters like
            oneof_filter.
          example:
            oneof_filter:
            - - uri: https://www.w3.org/Test1#Test1
              - uri: https://www.w3.org/Test2#Test2
            - oneof_filter:
              - - uri: https://www.w3.org/Test1#Test1
              - - uri: https://www.w3.org/Test2#Test2
          allOf:
          - $ref: '#/components/schemas/SchemasInputDescriptorFilter'
    IntroModuleResponse:
      type: object
    InvitationCreateRequest:
      type: object
      properties:
        alias:
          type: string
          description: Alias for connection
          example: Barry
        attachments:
          type: array
          description: Optional invitation attachments
          items:
            $ref: '#/components/schemas/AttachmentDef'
        handshake_protocols:
          type: array
          items:
            type: string
            description: Handshake protocol to specify in invitation
            example: did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/didexchange/1.0
        mediation_id:
          pattern: '[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}'
          type: string
          description: Identifier for active mediation record to be used
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        metadata:
          type: object
          properties: {}
          description: Optional metadata to attach to the connection created with
            the invitation
        my_label:
          type: string
          description: Label for connection invitation
          example: Invitation to Barry
        use_public_did:
          type: boolean
          description: Whether to use public DID in invitation
          example: false
    InvitationMessage:
      type: object
      properties:
        '@id':
          type: string
          description: Message identifier
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        '@type':
          type: string
          description: Message type
          readOnly: true
          example: https://didcomm.org/my-family/1.0/my-message-type
        handshake_protocols:
          type: array
          items:
            type: string
            description: Handshake protocol
            example: did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/didexchange/1.0
        label:
          type: string
          description: Optional label
          example: Bob
        requests~attach:
          type: array
          description: Optional request attachment
          items:
            $ref: '#/components/schemas/AttachDecorator'
        services:
          type: array
          example:
          - did: WgWxqztrNooG92RXvxSTWv
            id: string
            recipientKeys:
            - did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH
            routingKeys:
            - did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH
            serviceEndpoint: http://192.168.56.101:8020
            type: string
          - did:sov:WgWxqztrNooG92RXvxSTWv
          items:
            oneOf:
            - type: object
              description: Either a DIDComm service object (as per RFC0067) or a DID
                string.
            - type: string
    InvitationRecord:
      type: object
      properties:
        created_at:
          pattern: ^\d{4}-\d\d-\d\d[T ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$
          type: string
          description: Time of record creation
          example: 2021-12-31 23:59:59+00:00
        invi_msg_id:
          type: string
          description: Invitation message identifier
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        invitation:
          type: object
          description: Out of band invitation message
          allOf:
          - $ref: '#/components/schemas/InvitationMessage'
        invitation_id:
          type: string
          description: Invitation record identifier
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        invitation_url:
          type: string
          description: Invitation message URL
          example: https://example.com/endpoint?c_i=eyJAdHlwZSI6ICIuLi4iLCAiLi4uIjogIi4uLiJ9XX0=
        oob_id:
          type: string
          description: Out of band record identifier
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        state:
          type: string
          description: Out of band message exchange state
          example: await_response
        trace:
          type: boolean
          description: Record trace information, based on agent configuration
        updated_at:
          pattern: ^\d{4}-\d\d-\d\d[T ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$
          type: string
          description: Time of last record update
          example: 2021-12-31 23:59:59+00:00
    InvitationResult:
      type: object
      properties:
        connection_id:
          type: string
          description: Connection identifier
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        invitation:
          $ref: '#/components/schemas/ConnectionInvitation'
        invitation_url:
          type: string
          description: Invitation URL
          example: http://192.168.56.101:8020/invite?c_i=eyJAdHlwZSI6Li4ufQ==
    IssueCredentialModuleResponse:
      type: object
    IssuerCredRevRecord:
      type: object
      properties:
        created_at:
          pattern: ^\d{4}-\d\d-\d\d[T ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$
          type: string
          description: Time of record creation
          example: 2021-12-31 23:59:59+00:00
        cred_def_id:
          pattern: ^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$
          type: string
          description: Credential definition identifier
          example: WgWxqztrNooG92RXvxSTWv:3:CL:20:tag
        cred_ex_id:
          type: string
          description: Credential exchange record identifier at credential issue
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        cred_rev_id:
          pattern: ^[1-9][0-9]*$
          type: string
          description: Credential revocation identifier
          example: '12345'
        record_id:
          type: string
          description: Issuer credential revocation record identifier
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        rev_reg_id:
          pattern: ^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)
          type: string
          description: Revocation registry identifier
          example: WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0
        state:
          type: string
          description: Issue credential revocation record state
          example: issued
        updated_at:
          pattern: ^\d{4}-\d\d-\d\d[T ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$
          type: string
          description: Time of last record update
          example: 2021-12-31 23:59:59+00:00
    IssuerRevRegRecord:
      type: object
      properties:
        created_at:
          pattern: ^\d{4}-\d\d-\d\d[T ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$
          type: string
          description: Time of record creation
          example: 2021-12-31 23:59:59+00:00
        cred_def_id:
          pattern: ^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$
          type: string
          description: Credential definition identifier
          example: WgWxqztrNooG92RXvxSTWv:3:CL:20:tag
        error_msg:
          type: string
          description: Error message
          example: Revocation registry undefined
        issuer_did:
          pattern: ^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$
          type: string
          description: Issuer DID
          example: WgWxqztrNooG92RXvxSTWv
        max_cred_num:
          type: integer
          description: Maximum number of credentials for revocation registry
          format: int32
          example: 1000
        pending_pub:
          type: array
          description: Credential revocation identifier for credential revoked and
            pending publication to ledger
          items:
            type: string
            example: '23'
        record_id:
          type: string
          description: Issuer revocation registry record identifier
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        revoc_def_type:
          type: string
          description: Revocation registry type (specify CL_ACCUM)
          example: CL_ACCUM
          enum:
          - CL_ACCUM
        revoc_reg_def:
          type: object
          description: Revocation registry definition
          allOf:
          - $ref: '#/components/schemas/IndyRevRegDef'
        revoc_reg_entry:
          type: object
          description: Revocation registry entry
          allOf:
          - $ref: '#/components/schemas/IndyRevRegEntry'
        revoc_reg_id:
          pattern: ^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)
          type: string
          description: Revocation registry identifier
          example: WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0
        state:
          type: string
          description: Issue revocation registry record state
          example: active
        tag:
          type: string
          description: Tag within issuer revocation registry identifier
        tails_hash:
          pattern: ^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$
          type: string
          description: Tails hash
          example: H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV
        tails_local_path:
          type: string
          description: Local path to tails file
        tails_public_uri:
          type: string
          description: Public URI for tails file
        updated_at:
          pattern: ^\d{4}-\d\d-\d\d[T ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$
          type: string
          description: Time of last record update
          example: 2021-12-31 23:59:59+00:00
    Keylist:
      type: object
      properties:
        results:
          type: array
          description: List of keylist records
          items:
            $ref: '#/components/schemas/RouteRecord'
    KeylistQuery:
      type: object
      properties:
        '@id':
          type: string
          description: Message identifier
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        '@type':
          type: string
          description: Message type
          readOnly: true
          example: https://didcomm.org/my-family/1.0/my-message-type
        filter:
          type: object
          properties: {}
          description: Query dictionary object
          example:
            filter: {}
        paginate:
          type: object
          description: Pagination info
          allOf:
          - $ref: '#/components/schemas/KeylistQueryPaginate'
    KeylistQueryFilterRequest:
      type: object
      properties:
        filter:
          type: object
          properties: {}
          description: Filter for keylist query
    KeylistQueryPaginate:
      type: object
      properties:
        limit:
          type: integer
          description: Limit for keylist query
          format: int32
          example: 30
        offset:
          type: integer
          description: Offset value for query
          format: int32
          example: 0
    KeylistUpdate:
      type: object
      properties:
        '@id':
          type: string
          description: Message identifier
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        '@type':
          type: string
          description: Message type
          readOnly: true
          example: https://didcomm.org/my-family/1.0/my-message-type
        updates:
          type: array
          description: List of update rules
          items:
            $ref: '#/components/schemas/KeylistUpdateRule'
    KeylistUpdateRequest:
      type: object
      properties:
        updates:
          type: array
          items:
            $ref: '#/components/schemas/KeylistUpdateRule'
    KeylistUpdateRule:
      required:
      - action
      - recipient_key
      type: object
      properties:
        action:
          type: string
          description: Action for specific key
          example: add
          enum:
          - add
          - remove
        recipient_key:
          pattern: ^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$
          type: string
          description: Key to remove or add
          example: H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV
    LDProofVCDetail:
      required:
      - credential
      - options
      type: object
      properties:
        credential:
          type: object
          description: Detail of the JSON-LD Credential to be issued
          example:
            '@context':
            - https://www.w3.org/2018/credentials/v1
            - https://w3id.org/citizenship/v1
            credentialSubject:
              familyName: SMITH
              gender: Male
              givenName: JOHN
              type:
              - PermanentResident
              - Person
            description: Government of Example Permanent Resident Card.
            identifier: '83627465'
            issuanceDate: 2019-12-03 12:19:52+00:00
            issuer: did:key:z6MkmjY8GnV5i9YTDtPETC2uUAW6ejw3nk5mXF5yci5ab7th
            name: Permanent Resident Card
            type:
            - VerifiableCredential
            - PermanentResidentCard
          allOf:
          - $ref: '#/components/schemas/Credential'
        options:
          type: object
          description: Options for specifying how the linked data proof is created.
          example:
            proofType: Ed25519Signature2018
          allOf:
          - $ref: '#/components/schemas/LDProofVCDetailOptions'
    LDProofVCDetailOptions:
      required:
      - proofType
      type: object
      properties:
        challenge:
          type: string
          description: A challenge to include in the proof. SHOULD be provided by
            the requesting party of the credential (=holder)
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        created:
          pattern: ^\d{4}-\d\d-\d\d[T ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$
          type: string
          description: The date and time of the proof (with a maximum accuracy in
            seconds). Defaults to current system time
          example: 2021-12-31 23:59:59+00:00
        credentialStatus:
          type: object
          description: The credential status mechanism to use for the credential.
            Omitting the property indicates the issued credential will not include
            a credential status
          allOf:
          - $ref: '#/components/schemas/CredentialStatusOptions'
        domain:
          type: string
          description: The intended domain of validity for the proof
          example: example.com
        proofPurpose:
          type: string
          description: The proof purpose used for the proof. Should match proof purposes
            registered in the Linked Data Proofs Specification
          example: assertionMethod
        proofType:
          type: string
          description: The proof type used for the proof. Should match suites registered
            in the Linked Data Cryptographic Suite Registry
          example: Ed25519Signature2018
    LedgerConfigInstance:
      type: object
      properties:
        genesis_file:
          type: string
          description: genesis_file
        genesis_transactions:
          type: string
          description: genesis_transactions
        genesis_url:
          type: string
          description: genesis_url
        id:
          type: string
          description: ledger_id
        is_production:
          type: boolean
          description: is_production
    LedgerConfigList:
      required:
      - ledger_config_list
      type: object
      properties:
        ledger_config_list:
          type: array
          items:
            $ref: '#/components/schemas/LedgerConfigInstance'
    LedgerModulesResult:
      type: object
    LinkedDataProof:
      required:
      - created
      - proofPurpose
      - type
      - verificationMethod
      type: object
      properties:
        challenge:
          type: string
          description: Associates a challenge with a proof, for use with a proofPurpose
            such as authentication
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        created:
          pattern: ^\d{4}-\d\d-\d\d[T ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$
          type: string
          description: The string value of an ISO8601 combined date and time string
            generated by the Signature Algorithm
          example: 2021-12-31 23:59:59+00:00
        domain:
          pattern: \w+:(\/?\/?)[^\s]+
          type: string
          description: A string value specifying the restricted domain of the signature.
          example: example.com
        jws:
          type: string
          description: Associates a Detached Json Web Signature with a proof
          example: eyJhbGciOiAiRWREUc2UsICJjcml0IjogWyJiNjQiXX0..lKJU0Df_keblRKhZAS9Qq6zybm-HqUXNVZ8vgEPNTAjQ1Ch6YBKY7UBAjg6iBX5qBQ
        nonce:
          type: string
          description: The nonce
          example: CF69iO3nfvqRsRBNElE8b4wO39SyJHPM7Gg1nExltW5vSfQA1lvDCR/zXX1To0/4NLo==
        proofPurpose:
          type: string
          description: Proof purpose
          example: assertionMethod
        proofValue:
          type: string
          description: The proof value of a proof
          example: sy1AahqbzJQ63n9RtekmwzqZeVj494VppdAVJBnMYrTwft6cLJJGeTSSxCCJ6HKnRtwE7jjDh6sB2z2AAiZY9BBnCD8wUVgwqH3qchGRCuC2RugA4eQ9fUrR4Yuycac3caiaaay
        type:
          type: string
          description: Identifies the digital signature suite that was used to create
            the signature
          example: Ed25519Signature2018
        verificationMethod:
          pattern: \w+:(\/?\/?)[^\s]+
          type: string
          description: Information used for proof verification
          example: did:key:z6Mkgg342Ycpuk263R9d8Aq6MUaxPn1DDeHyGo38EefXmgDL#z6Mkgg342Ycpuk263R9d8Aq6MUaxPn1DDeHyGo38EefXmgDL
    MediationCreateRequest:
      type: object
      properties:
        mediator_terms:
          type: array
          description: List of mediator rules for recipient
          items:
            type: string
            description: Indicate terms to which the mediator requires the recipient
              to agree
        recipient_terms:
          type: array
          description: List of recipient rules for mediation
          items:
            type: string
            description: Indicate terms to which the recipient requires the mediator
              to agree
    MediationDeny:
      type: object
      properties:
        '@id':
          type: string
          description: Message identifier
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        '@type':
          type: string
          description: Message type
          readOnly: true
          example: https://didcomm.org/my-family/1.0/my-message-type
        mediator_terms:
          type: array
          items:
            type: string
            description: Terms for mediator to agree
        recipient_terms:
          type: array
          items:
            type: string
            description: Terms for recipient to agree
    MediationGrant:
      type: object
      properties:
        '@id':
          type: string
          description: Message identifier
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        '@type':
          type: string
          description: Message type
          readOnly: true
          example: https://didcomm.org/my-family/1.0/my-message-type
        endpoint:
          type: string
          description: endpoint on which messages destined for the recipient are received.
          example: http://192.168.56.102:8020/
        routing_keys:
          type: array
          items:
            type: string
            description: Keys to use for forward message packaging
    MediationList:
      type: object
      properties:
        results:
          type: array
          description: List of mediation records
          items:
            $ref: '#/components/schemas/MediationRecord'
    MediationRecord:
      required:
      - connection_id
      - role
      type: object
      properties:
        connection_id:
          type: string
        created_at:
          pattern: ^\d{4}-\d\d-\d\d[T ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$
          type: string
          description: Time of record creation
          example: 2021-12-31 23:59:59+00:00
        endpoint:
          type: string
        mediation_id:
          type: string
        mediator_terms:
          type: array
          items:
            type: string
        recipient_terms:
          type: array
          items:
            type: string
        role:
          type: string
        routing_keys:
          type: array
          items:
            pattern: ^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$
            type: string
            example: H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV
        state:
          type: string
          description: Current record state
          example: active
        updated_at:
          pattern: ^\d{4}-\d\d-\d\d[T ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$
          type: string
          description: Time of last record update
          example: 2021-12-31 23:59:59+00:00
    Menu:
      required:
      - options
      type: object
      properties:
        '@id':
          type: string
          description: Message identifier
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        '@type':
          type: string
          description: Message type
          readOnly: true
          example: https://didcomm.org/my-family/1.0/my-message-type
        description:
          type: string
          description: Introductory text for the menu
          example: This menu presents options
        errormsg:
          type: string
          description: An optional error message to display in menu header
          example: 'Error: item not found'
        options:
          type: array
          description: List of menu options
          items:
            $ref: '#/components/schemas/MenuOption'
        title:
          type: string
          description: Menu title
          example: My Menu
    MenuForm:
      type: object
      properties:
        description:
          type: string
          description: Additional descriptive text for menu form
          example: Window preference settings
        params:
          type: array
          description: List of form parameters
          items:
            $ref: '#/components/schemas/MenuFormParam'
        submit-label:
          type: string
          description: Alternative label for form submit button
          example: Send
        title:
          type: string
          description: Menu form title
          example: Preferences
    MenuFormParam:
      required:
      - name
      - title
      type: object
      properties:
        default:
          type: string
          description: Default parameter value
          example: '0'
        description:
          type: string
          description: Additional descriptive text for menu form parameter
          example: Delay in seconds before starting
        name:
          type: string
          description: Menu parameter name
          example: delay
        required:
          type: boolean
          description: Whether parameter is required
          example: false
        title:
          type: string
          description: Menu parameter title
          example: Delay in seconds
        type:
          type: string
          description: Menu form parameter input type
          example: int
    MenuJson:
      required:
      - options
      type: object
      properties:
        description:
          type: string
          description: Introductory text for the menu
          example: User preferences for window settings
        errormsg:
          type: string
          description: Optional error message to display in menu header
          example: 'Error: item not present'
        options:
          type: array
          description: List of menu options
          items:
            $ref: '#/components/schemas/MenuOption'
        title:
          type: string
          description: Menu title
          example: My Menu
    MenuOption:
      required:
      - name
      - title
      type: object
      properties:
        description:
          type: string
          description: Additional descriptive text for menu option
          example: Window display preferences
        disabled:
          type: boolean
          description: Whether to show option as disabled
          example: false
        form:
          $ref: '#/components/schemas/MenuForm'
        name:
          type: string
          description: Menu option name (unique identifier)
          example: window_prefs
        title:
          type: string
          description: Menu option title
          example: Window Preferences
    MultitenantModuleResponse:
      type: object
    PerformRequest:
      type: object
      properties:
        name:
          type: string
          description: Menu option name
          example: Query
        params:
          type: object
          additionalProperties:
            type: string
            example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
          description: Input parameter values
    PingRequest:
      type: object
      properties:
        comment:
          type: string
          description: Comment for the ping message
          nullable: true
    PingRequestResponse:
      type: object
      properties:
        thread_id:
          type: string
          description: Thread ID of the ping message
    PresentationDefinition:
      type: object
      properties:
        format:
          $ref: '#/components/schemas/ClaimFormat'
        id:
          pattern: '[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}'
          type: string
          description: Unique Resource Identifier
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        input_descriptors:
          type: array
          items:
            $ref: '#/components/schemas/InputDescriptors'
        name:
          type: string
          description: Human-friendly name that describes what the presentation definition
            pertains to
        purpose:
          type: string
          description: Describes the purpose for which the Presentation Definition's
            inputs are being requested
        submission_requirements:
          type: array
          items:
            $ref: '#/components/schemas/SubmissionRequirements'
    PresentationProposal:
      required:
      - presentation_proposal
      type: object
      properties:
        '@id':
          type: string
          description: Message identifier
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        '@type':
          type: string
          description: Message type
          readOnly: true
          example: https://didcomm.org/my-family/1.0/my-message-type
        comment:
          type: string
          description: Human-readable comment
          nullable: true
        presentation_proposal:
          $ref: '#/components/schemas/IndyPresPreview'
    PresentationRequest:
      required:
      - request_presentations~attach
      type: object
      properties:
        '@id':
          type: string
          description: Message identifier
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        '@type':
          type: string
          description: Message type
          readOnly: true
          example: https://didcomm.org/my-family/1.0/my-message-type
        comment:
          type: string
          description: Human-readable comment
          nullable: true
        request_presentations~attach:
          type: array
          items:
            $ref: '#/components/schemas/AttachDecorator'
    ProtocolDescriptor:
      required:
      - pid
      type: object
      properties:
        pid:
          type: string
        roles:
          type: array
          description: List of roles
          nullable: true
          items:
            type: string
            description: 'Role: requester or responder'
            example: requester
    PublishRevocations:
      type: object
      properties:
        rrid2crid:
          type: object
          additionalProperties:
            type: array
            items:
              pattern: ^[1-9][0-9]*$
              type: string
              description: Credential revocation identifier
              example: '12345'
          description: Credential revocation ids by revocation registry id
    Queries:
      type: object
      properties:
        '@id':
          type: string
          description: Message identifier
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        '@type':
          type: string
          description: Message type
          readOnly: true
          example: https://didcomm.org/my-family/1.0/my-message-type
        queries:
          type: array
          items:
            $ref: '#/components/schemas/QueryItem'
    Query:
      required:
      - query
      type: object
      properties:
        '@id':
          type: string
          description: Message identifier
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        '@type':
          type: string
          description: Message type
          readOnly: true
          example: https://didcomm.org/my-family/1.0/my-message-type
        comment:
          type: string
          nullable: true
        query:
          type: string
    QueryItem:
      required:
      - feature-type
      - match
      type: object
      properties:
        feature-type:
          type: string
          description: feature type
          enum:
          - protocol
          - goal-code
        match:
          type: string
          description: match
    RawEncoded:
      type: object
      properties:
        encoded:
          pattern: ^-?[0-9]*$
          type: string
          description: Encoded value
          example: -1
        raw:
          type: string
          description: Raw value
    ReceiveInvitationRequest:
      type: object
      properties:
        '@id':
          type: string
          description: Message identifier
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        '@type':
          type: string
          description: Message type
          readOnly: true
          example: https://didcomm.org/my-family/1.0/my-message-type
        did:
          pattern: ^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$
          type: string
          description: DID for connection invitation
          example: WgWxqztrNooG92RXvxSTWv
        imageUrl:
          type: string
          description: Optional image URL for connection invitation
          format: url
          nullable: true
          example: http://192.168.56.101/img/logo.jpg
        label:
          type: string
          description: Optional label for connection invitation
          example: Bob
        recipientKeys:
          type: array
          description: List of recipient keys
          items:
            pattern: ^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$
            type: string
            description: Recipient public key
            example: H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV
        routingKeys:
          type: array
          description: List of routing keys
          items:
            pattern: ^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$
            type: string
            description: Routing key
            example: H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV
        serviceEndpoint:
          type: string
          description: Service endpoint at which to reach this agent
          example: http://192.168.56.101:8020
    RemoveWalletRequest:
      type: object
      properties:
        wallet_key:
          type: string
          description: Master key used for key derivation. Only required for             unmanaged
            wallets.
          example: MySecretKey123
    ResolutionResult:
      required:
      - did_doc
      - metadata
      type: object
      properties:
        did_doc:
          type: object
          properties: {}
          description: DID Document
        metadata:
          type: object
          properties: {}
          description: Resolution metadata
    RevRegCreateRequest:
      type: object
      properties:
        credential_definition_id:
          pattern: ^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$
          type: string
          description: Credential definition identifier
          example: WgWxqztrNooG92RXvxSTWv:3:CL:20:tag
        max_cred_num:
          maximum: 32768
          minimum: 4
          type: integer
          description: Revocation registry size
          format: int32
          example: 1000
    RevRegIssuedResult:
      type: object
      properties:
        result:
          minimum: 0
          type: integer
          description: Number of credentials issued against revocation registry
          format: int32
          example: 0
    RevRegResult:
      type: object
      required:
      - result
      properties:
        result:
          $ref: '#/components/schemas/IssuerRevRegRecord'
    RevRegUpdateTailsFileUri:
      required:
      - tails_public_uri
      type: object
      properties:
        tails_public_uri:
          type: string
          description: Public URI to the tails file
          format: url
          example: http://192.168.56.133:6543/revocation/registry/WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0/tails-file
    RevRegWalletUpdatedResult:
      type: object
      properties:
        accum_calculated:
          type: object
          properties: {}
          description: Calculated accumulator for phantom revocations
        accum_fixed:
          type: object
          properties: {}
          description: Applied ledger transaction to fix revocations
        rev_reg_delta:
          type: object
          properties: {}
          description: Indy revocation registry delta
    RevRegsCreated:
      type: object
      properties:
        rev_reg_ids:
          type: array
          items:
            pattern: ^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)
            type: string
            description: Revocation registry identifiers
            example: WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0
    RevocationModuleResponse:
      type: object
    RevokeRequest:
      type: object
      properties:
        comment:
          type: string
          description: Optional comment to include in revocation notification
        connection_id:
          pattern: '[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}'
          type: string
          description: Connection ID to which the revocation notification will be
            sent; required if notify is true
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        cred_ex_id:
          pattern: '[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}'
          type: string
          description: Credential exchange identifier
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        cred_rev_id:
          pattern: ^[1-9][0-9]*$
          type: string
          description: Credential revocation identifier
          example: '12345'
        notify:
          type: boolean
          description: Send a notification to the credential recipient
        notify_version:
          type: string
          description: Specify which version of the revocation notification should
            be sent
          enum:
          - v1_0
          - v2_0
        publish:
          type: boolean
          description: (True) publish revocation to ledger immediately, or (default,
            False) mark it pending
        rev_reg_id:
          pattern: ^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)
          type: string
          description: Revocation registry identifier
          example: WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0
        thread_id:
          type: string
          description: Thread ID of the credential exchange message thread resulting
            in the credential now being revoked; required if notify is true
    RouteRecord:
      required:
      - recipient_key
      type: object
      properties:
        connection_id:
          type: string
        created_at:
          pattern: ^\d{4}-\d\d-\d\d[T ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$
          type: string
          description: Time of record creation
          example: 2021-12-31 23:59:59+00:00
        recipient_key:
          type: string
        record_id:
          type: string
        role:
          type: string
        state:
          type: string
          description: Current record state
          example: active
        updated_at:
          pattern: ^\d{4}-\d\d-\d\d[T ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$
          type: string
          description: Time of last record update
          example: 2021-12-31 23:59:59+00:00
        wallet_id:
          type: string
    Schema:
      type: object
      properties:
        attrNames:
          type: array
          description: Schema attribute names
          items:
            type: string
            description: Attribute name
            example: score
        id:
          pattern: ^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$
          type: string
          description: Schema identifier
          example: WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0
        name:
          type: string
          description: Schema name
          example: schema_name
        seqNo:
          minimum: 1
          type: integer
          description: Schema sequence number
          format: int32
          example: 10
        ver:
          pattern: ^[0-9.]+$
          type: string
          description: Node protocol version
          example: '1.0'
        version:
          pattern: ^[0-9.]+$
          type: string
          description: Schema version
          example: '1.0'
    SchemaGetResult:
      type: object
      properties:
        schema:
          $ref: '#/components/schemas/Schema'
    SchemaInputDescriptor:
      type: object
      properties:
        required:
          type: boolean
          description: Required
        uri:
          type: string
          description: URI
    SchemaSendRequest:
      required:
      - attributes
      - schema_name
      - schema_version
      type: object
      properties:
        attributes:
          type: array
          description: List of schema attributes
          items:
            type: string
            description: attribute name
            example: score
        schema_name:
          type: string
          description: Schema name
          example: prefs
        schema_version:
          pattern: ^[0-9.]+$
          type: string
          description: Schema version
          example: '1.0'
    SchemaSendResult:
      required:
      - schema_id
      - schema
      type: object
      properties:
        schema:
          type: object
          description: Schema definition
          allOf:
          - $ref: '#/components/schemas/Schema'
        schema_id:
          pattern: ^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$
          type: string
          description: Schema identifier
          example: WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0
    SchemasCreatedResult:
      type: object
      properties:
        schema_ids:
          type: array
          items:
            pattern: ^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$
            type: string
            description: Schema identifiers
            example: WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0
    SchemasInputDescriptorFilter:
      type: object
      properties:
        oneof_filter:
          type: boolean
          description: oneOf
        uri_groups:
          type: array
          items:
            type: array
            items:
              $ref: '#/components/schemas/SchemaInputDescriptor'
    SendMenu:
      required:
      - menu
      type: object
      properties:
        menu:
          type: object
          description: Menu to send to connection
          allOf:
          - $ref: '#/components/schemas/MenuJson'
    SendMessage:
      type: object
      properties:
        content:
          type: string
          description: Message content
          example: Hello
    SignRequest:
      required:
      - doc
      - verkey
      type: object
      properties:
        doc:
          $ref: '#/components/schemas/Doc'
        verkey:
          type: string
          description: Verkey to use for signing
    SignResponse:
      type: object
      properties:
        error:
          type: string
          description: Error text
        signed_doc:
          type: object
          properties: {}
          description: Signed document
    SignatureOptions:
      required:
      - proofPurpose
      - verificationMethod
      type: object
      properties:
        challenge:
          type: string
        domain:
          type: string
        proofPurpose:
          type: string
        type:
          type: string
        verificationMethod:
          type: string
    SignedDoc:
      required:
      - proof
      type: object
      properties:
        proof:
          type: object
          description: Linked data proof
          allOf:
          - $ref: '#/components/schemas/SignatureOptions'
    SubmissionRequirements:
      type: object
      properties:
        count:
          type: integer
          description: Count Value
          format: int32
          example: 1234
        from:
          type: string
          description: From
        from_nested:
          type: array
          items:
            $ref: '#/components/schemas/SubmissionRequirements'
        max:
          type: integer
          description: Max Value
          format: int32
          example: 1234
        min:
          type: integer
          description: Min Value
          format: int32
          example: 1234
        name:
          type: string
          description: Name
        purpose:
          type: string
          description: Purpose
        rule:
          type: string
          description: Selection
          enum:
          - all
          - pick
    TAAAccept:
      type: object
      properties:
        mechanism:
          type: string
        text:
          type: string
        version:
          type: string
    TAAAcceptance:
      type: object
      properties:
        mechanism:
          type: string
        time:
          type: integer
          example: 1640995199
    TAAInfo:
      type: object
      properties:
        aml_record:
          $ref: '#/components/schemas/AMLRecord'
        taa_accepted:
          $ref: '#/components/schemas/TAAAcceptance'
        taa_record:
          $ref: '#/components/schemas/TAARecord'
        taa_required:
          type: boolean
    TAARecord:
      type: object
      properties:
        digest:
          type: string
        text:
          type: string
        version:
          type: string
    TAAResult:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/TAAInfo'
    TransactionJobs:
      type: object
      properties:
        transaction_my_job:
          type: string
          description: My transaction related job
          enum:
          - TRANSACTION_AUTHOR
          - TRANSACTION_ENDORSER
          - reset
        transaction_their_job:
          type: string
          description: Their transaction related job
          enum:
          - TRANSACTION_AUTHOR
          - TRANSACTION_ENDORSER
          - reset
    TransactionList:
      type: object
      properties:
        results:
          type: array
          description: List of transaction records
          items:
            $ref: '#/components/schemas/TransactionRecord'
    TransactionRecord:
      type: object
      properties:
        _type:
          type: string
          description: Transaction type
          example: '101'
        connection_id:
          type: string
          description: The connection identifier for thie particular transaction record
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        created_at:
          pattern: ^\d{4}-\d\d-\d\d[T ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$
          type: string
          description: Time of record creation
          example: 2021-12-31 23:59:59+00:00
        endorser_write_txn:
          type: boolean
          description: If True, Endorser will write the transaction after endorsing
            it
          example: true
        formats:
          type: array
          items:
            type: object
            additionalProperties:
              type: string
            example:
              attach_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              format: dif/endorse-transaction/request@v1.0
        messages_attach:
          type: array
          items:
            type: object
            properties: {}
            example:
              '@id': 143c458d-1b1c-40c7-ab85-4d16808ddf0a
              data:
                json: '{"endorser": "V4SGRU86Z58d6TV7PBUe6f","identifier": "LjgpST2rjsoxYegQDRm7EL","operation":
                  {"data": {"attr_names": ["first_name", "last_name"],"name": "test_schema","version":
                  "2.1",},"type": "101",},"protocolVersion": 2,"reqId": 1597766666168851000,"signatures":
                  {"LjgpST2rjsox": "4ATKMn6Y9sTgwqaGTm7py2c2M8x1EVDTWKZArwyuPgjU"},"taaAcceptance":
                  {"mechanism": "manual","taaDigest": "f50fe2c2ab977006761d36bd6f23e4c6a7e0fc2feb9f62","time":
                  1597708800,}}'
              mime-type: application/json
        meta_data:
          type: object
          properties: {}
          example:
            context:
              param1: param1_value
              param2: param2_value
            post_process:
            - topic: topic_value
              other: other_value
        signature_request:
          type: array
          items:
            type: object
            properties: {}
            example:
              author_goal_code: aries.transaction.ledger.write
              context: did:sov
              method: add-signature
              signature_type: <requested signature type>
              signer_goal_code: aries.transaction.endorse
        signature_response:
          type: array
          items:
            type: object
            properties: {}
            example:
              context: did:sov
              message_id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              method: add-signature
              signer_goal_code: aries.transaction.refuse
        state:
          type: string
          description: Current record state
          example: active
        thread_id:
          type: string
          description: Thread Identifier
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        timing:
          type: object
          properties: {}
          example:
            expires_time: 2020-12-13T17:29:06+0000
        trace:
          type: boolean
          description: Record trace information, based on agent configuration
        transaction_id:
          type: string
          description: Transaction identifier
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        updated_at:
          pattern: ^\d{4}-\d\d-\d\d[T ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$
          type: string
          description: Time of last record update
          example: 2021-12-31 23:59:59+00:00
    TxnOrCredentialDefinitionSendResult:
      type: object
      additionalProperties: false
      properties:
        sent:
          $ref: '#/components/schemas/CredentialDefinitionSendResult'
        txn:
          type: object
          description: Credential definition transaction to endorse
          allOf:
          - $ref: '#/components/schemas/TransactionRecord'
    TxnOrPublishRevocationsResult:
      type: object
      additionalProperties: false
      properties:
        sent:
          $ref: '#/components/schemas/PublishRevocations'
        txn:
          type: object
          description: Revocation registry revocations transaction to endorse
          allOf:
          - $ref: '#/components/schemas/TransactionRecord'
    TxnOrRegisterLedgerNymResponse:
      type: object
      properties:
        success:
          type: boolean
          description: Success of nym registration operation
          example: true
        txn:
          type: object
          description: DID transaction to endorse
          allOf:
          - $ref: '#/components/schemas/TransactionRecord'
    TxnOrRevRegResult:
      type: object
      additionalProperties: false
      properties:
        sent:
          $ref: '#/components/schemas/RevRegResult'
        txn:
          type: object
          description: Revocation registry definition transaction to endorse
          allOf:
          - $ref: '#/components/schemas/TransactionRecord'
    TxnOrSchemaSendResult:
      type: object
      additionalProperties: false
      properties:
        sent:
          type: object
          description: Content sent
          allOf:
          - $ref: '#/components/schemas/SchemaSendResult'
        txn:
          type: object
          description: Schema transaction to endorse
          allOf:
          - $ref: '#/components/schemas/TransactionRecord'
    UpdateWalletRequest:
      type: object
      properties:
        image_url:
          type: string
          description: Image url for this wallet. This image url is publicized            (self-attested)
            to other agents as part of forming a connection.
          example: https://aries.ca/images/sample.png
        label:
          type: string
          description: Label for this wallet. This label is publicized            (self-attested)
            to other agents as part of forming a connection.
          example: Alice
        wallet_dispatch_type:
          type: string
          description: Webhook target dispatch type for this wallet.             default
            - Dispatch only to webhooks associated with this wallet.             base
            - Dispatch only to webhooks associated with the base wallet.             both
            - Dispatch to both webhook targets.
          example: default
          enum:
          - default
          - both
          - base
        wallet_webhook_urls:
          type: array
          description: List of Webhook URLs associated with this subwallet
          items:
            type: string
            description: Optional webhook URL to receive webhook messages
            example: http://localhost:8022/webhooks
    V10CredentialBoundOfferRequest:
      type: object
      properties:
        counter_proposal:
          type: object
          description: Optional counter-proposal
          allOf:
          - $ref: '#/components/schemas/CredentialProposal'
    V10CredentialConnFreeOfferRequest:
      required:
      - cred_def_id
      - credential_preview
      type: object
      properties:
        auto_issue:
          type: boolean
          description: Whether to respond automatically to credential requests, creating
            and issuing requested credentials
        auto_remove:
          type: boolean
          description: Whether to remove the credential exchange record on completion
            (overrides --preserve-exchange-records configuration setting)
        comment:
          type: string
          description: Human-readable comment
          nullable: true
        cred_def_id:
          pattern: ^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$
          type: string
          description: Credential definition identifier
          example: WgWxqztrNooG92RXvxSTWv:3:CL:20:tag
        credential_preview:
          $ref: '#/components/schemas/CredentialPreview'
        trace:
          type: boolean
          description: Record trace information, based on agent configuration
    V10CredentialCreate:
      required:
      - credential_proposal
      type: object
      properties:
        auto_remove:
          type: boolean
          description: Whether to remove the credential exchange record on completion
            (overrides --preserve-exchange-records configuration setting)
        comment:
          type: string
          description: Human-readable comment
          nullable: true
        cred_def_id:
          pattern: ^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$
          type: string
          description: Credential definition identifier
          example: WgWxqztrNooG92RXvxSTWv:3:CL:20:tag
        credential_proposal:
          $ref: '#/components/schemas/CredentialPreview'
        issuer_did:
          pattern: ^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$
          type: string
          description: Credential issuer DID
          example: WgWxqztrNooG92RXvxSTWv
        schema_id:
          pattern: ^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$
          type: string
          description: Schema identifier
          example: WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0
        schema_issuer_did:
          pattern: ^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$
          type: string
          description: Schema issuer DID
          example: WgWxqztrNooG92RXvxSTWv
        schema_name:
          type: string
          description: Schema name
          example: preferences
        schema_version:
          pattern: ^[0-9.]+$
          type: string
          description: Schema version
          example: '1.0'
        trace:
          type: boolean
          description: Record trace information, based on agent configuration
    V10CredentialExchange:
      type: object
      properties:
        auto_issue:
          type: boolean
          description: Issuer choice to issue to request in this credential exchange
          example: false
        auto_offer:
          type: boolean
          description: Holder choice to accept offer in this credential exchange
          example: false
        auto_remove:
          type: boolean
          description: Issuer choice to remove this credential exchange record when
            complete
          example: false
        connection_id:
          type: string
          description: Connection identifier
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        created_at:
          pattern: ^\d{4}-\d\d-\d\d[T ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$
          type: string
          description: Time of record creation
          example: 2021-12-31 23:59:59+00:00
        credential:
          type: object
          description: Credential as stored
          allOf:
          - $ref: '#/components/schemas/IndyCredInfo'
        credential_definition_id:
          pattern: ^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$
          type: string
          description: Credential definition identifier
          example: WgWxqztrNooG92RXvxSTWv:3:CL:20:tag
        credential_exchange_id:
          type: string
          description: Credential exchange identifier
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        credential_id:
          type: string
          description: Credential identifier
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        credential_offer:
          type: object
          description: (Indy) credential offer
          allOf:
          - $ref: '#/components/schemas/IndyCredAbstract'
        credential_offer_dict:
          type: object
          description: Credential offer message
          allOf:
          - $ref: '#/components/schemas/CredentialOffer'
        credential_proposal_dict:
          type: object
          description: Credential proposal message
          allOf:
          - $ref: '#/components/schemas/CredentialProposal'
        credential_request:
          type: object
          description: (Indy) credential request
          allOf:
          - $ref: '#/components/schemas/IndyCredRequest'
        credential_request_metadata:
          type: object
          properties: {}
          description: (Indy) credential request metadata
        error_msg:
          type: string
          description: Error message
          example: Credential definition identifier is not set in proposal
        initiator:
          type: string
          description: 'Issue-credential exchange initiator: self or external'
          example: self
          enum:
          - self
          - external
        parent_thread_id:
          type: string
          description: Parent thread identifier
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        raw_credential:
          type: object
          description: Credential as received, prior to storage in holder wallet
          allOf:
          - $ref: '#/components/schemas/IndyCredential'
        revoc_reg_id:
          type: string
          description: Revocation registry identifier
        revocation_id:
          type: string
          description: Credential identifier within revocation registry
        role:
          type: string
          description: 'Issue-credential exchange role: holder or issuer'
          example: issuer
          enum:
          - holder
          - issuer
        schema_id:
          pattern: ^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$
          type: string
          description: Schema identifier
          example: WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0
        state:
          type: string
          description: Issue-credential exchange state
          example: credential_acked
        thread_id:
          type: string
          description: Thread identifier
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        trace:
          type: boolean
          description: Record trace information, based on agent configuration
        updated_at:
          pattern: ^\d{4}-\d\d-\d\d[T ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$
          type: string
          description: Time of last record update
          example: 2021-12-31 23:59:59+00:00
    V10CredentialExchangeListResult:
      type: object
      properties:
        results:
          type: array
          description: Aries#0036 v1.0 credential exchange records
          items:
            $ref: '#/components/schemas/V10CredentialExchange'
    V10CredentialFreeOfferRequest:
      required:
      - connection_id
      - cred_def_id
      - credential_preview
      type: object
      properties:
        auto_issue:
          type: boolean
          description: Whether to respond automatically to credential requests, creating
            and issuing requested credentials
        auto_remove:
          type: boolean
          description: Whether to remove the credential exchange record on completion
            (overrides --preserve-exchange-records configuration setting)
        comment:
          type: string
          description: Human-readable comment
          nullable: true
        connection_id:
          type: string
          description: Connection identifier
          format: uuid
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        cred_def_id:
          pattern: ^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$
          type: string
          description: Credential definition identifier
          example: WgWxqztrNooG92RXvxSTWv:3:CL:20:tag
        credential_preview:
          $ref: '#/components/schemas/CredentialPreview'
        trace:
          type: boolean
          description: Record trace information, based on agent configuration
    V10CredentialIssueRequest:
      type: object
      properties:
        comment:
          type: string
          description: Human-readable comment
          nullable: true
    V10CredentialProblemReportRequest:
      required:
      - description
      type: object
      properties:
        description:
          type: string
    V10CredentialProposalRequestMand:
      required:
      - connection_id
      - credential_proposal
      type: object
      properties:
        auto_remove:
          type: boolean
          description: Whether to remove the credential exchange record on completion
            (overrides --preserve-exchange-records configuration setting)
        comment:
          type: string
          description: Human-readable comment
          nullable: true
        connection_id:
          type: string
          description: Connection identifier
          format: uuid
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        cred_def_id:
          pattern: ^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$
          type: string
          description: Credential definition identifier
          example: WgWxqztrNooG92RXvxSTWv:3:CL:20:tag
        credential_proposal:
          $ref: '#/components/schemas/CredentialPreview'
        issuer_did:
          pattern: ^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$
          type: string
          description: Credential issuer DID
          example: WgWxqztrNooG92RXvxSTWv
        schema_id:
          pattern: ^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$
          type: string
          description: Schema identifier
          example: WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0
        schema_issuer_did:
          pattern: ^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$
          type: string
          description: Schema issuer DID
          example: WgWxqztrNooG92RXvxSTWv
        schema_name:
          type: string
          description: Schema name
          example: preferences
        schema_version:
          pattern: ^[0-9.]+$
          type: string
          description: Schema version
          example: '1.0'
        trace:
          type: boolean
          description: Record trace information, based on agent configuration
    V10CredentialProposalRequestOpt:
      required:
      - connection_id
      type: object
      properties:
        auto_remove:
          type: boolean
          description: Whether to remove the credential exchange record on completion
            (overrides --preserve-exchange-records configuration setting)
        comment:
          type: string
          description: Human-readable comment
          nullable: true
        connection_id:
          type: string
          description: Connection identifier
          format: uuid
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        cred_def_id:
          pattern: ^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$
          type: string
          description: Credential definition identifier
          example: WgWxqztrNooG92RXvxSTWv:3:CL:20:tag
        credential_proposal:
          $ref: '#/components/schemas/CredentialPreview'
        issuer_did:
          pattern: ^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$
          type: string
          description: Credential issuer DID
          example: WgWxqztrNooG92RXvxSTWv
        schema_id:
          pattern: ^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$
          type: string
          description: Schema identifier
          example: WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0
        schema_issuer_did:
          pattern: ^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$
          type: string
          description: Schema issuer DID
          example: WgWxqztrNooG92RXvxSTWv
        schema_name:
          type: string
          description: Schema name
          example: preferences
        schema_version:
          pattern: ^[0-9.]+$
          type: string
          description: Schema version
          example: '1.0'
        trace:
          type: boolean
          description: Record trace information, based on agent configuration
    V10CredentialStoreRequest:
      type: object
      properties:
        credential_id:
          type: string
    V10DiscoveryExchangeListResult:
      type: object
      properties:
        results:
          type: array
          items:
            type: object
            description: Discover Features v1.0 exchange record
            allOf:
            - $ref: '#/components/schemas/V10DiscoveryRecord'
    V10DiscoveryExchangeResult:
      type: object
      properties:
        results:
          type: object
          description: Discover Features v1.0 exchange record
          allOf:
          - $ref: '#/components/schemas/V10DiscoveryRecord'
    V10DiscoveryRecord:
      type: object
      properties:
        connection_id:
          type: string
          description: Connection identifier
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        created_at:
          pattern: ^\d{4}-\d\d-\d\d[T ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$
          type: string
          description: Time of record creation
          example: 2021-12-31 23:59:59+00:00
        disclose:
          type: object
          description: Disclose message
          allOf:
          - $ref: '#/components/schemas/Disclose'
        discovery_exchange_id:
          type: string
          description: Credential exchange identifier
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        query_msg:
          type: object
          description: Query message
          allOf:
          - $ref: '#/components/schemas/Query'
        state:
          type: string
          description: Current record state
          example: active
        thread_id:
          type: string
          description: Thread identifier
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        trace:
          type: boolean
          description: Record trace information, based on agent configuration
        updated_at:
          pattern: ^\d{4}-\d\d-\d\d[T ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$
          type: string
          description: Time of last record update
          example: 2021-12-31 23:59:59+00:00
    V10PresentProofModuleResponse:
      type: object
    V10PresentationCreateRequestRequest:
      required:
      - proof_request
      type: object
      properties:
        auto_verify:
          type: boolean
          description: Verifier choice to auto-verify proof presentation
          example: false
        comment:
          type: string
          nullable: true
        proof_request:
          $ref: '#/components/schemas/IndyProofRequest'
        trace:
          type: boolean
          description: Whether to trace event (default false)
          example: false
    V10PresentationExchange:
      type: object
      properties:
        auto_present:
          type: boolean
          description: Prover choice to auto-present proof as verifier requests
          example: false
        auto_verify:
          type: boolean
          description: Verifier choice to auto-verify proof presentation
        connection_id:
          type: string
          description: Connection identifier
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        created_at:
          pattern: ^\d{4}-\d\d-\d\d[T ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$
          type: string
          description: Time of record creation
          example: 2021-12-31 23:59:59+00:00
        error_msg:
          type: string
          description: Error message
          example: Invalid structure
        initiator:
          type: string
          description: 'Present-proof exchange initiator: self or external'
          example: self
          enum:
          - self
          - external
        presentation:
          type: object
          description: (Indy) presentation (also known as proof)
          allOf:
          - $ref: '#/components/schemas/IndyProof'
        presentation_exchange_id:
          type: string
          description: Presentation exchange identifier
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        presentation_proposal_dict:
          type: object
          description: Presentation proposal message
          allOf:
          - $ref: '#/components/schemas/PresentationProposal'
        presentation_request:
          type: object
          description: (Indy) presentation request (also known as proof request)
          allOf:
          - $ref: '#/components/schemas/IndyProofRequest'
        presentation_request_dict:
          type: object
          description: Presentation request message
          allOf:
          - $ref: '#/components/schemas/PresentationRequest'
        role:
          type: string
          description: 'Present-proof exchange role: prover or verifier'
          example: prover
          enum:
          - prover
          - verifier
        state:
          type: string
          description: Present-proof exchange state
          example: verified
        thread_id:
          type: string
          description: Thread identifier
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        trace:
          type: boolean
          description: Record trace information, based on agent configuration
        updated_at:
          pattern: ^\d{4}-\d\d-\d\d[T ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$
          type: string
          description: Time of last record update
          example: 2021-12-31 23:59:59+00:00
        verified:
          type: string
          description: 'Whether presentation is verified: true or false'
          example: 'true'
          enum:
          - 'true'
          - 'false'
    V10PresentationExchangeList:
      type: object
      properties:
        results:
          type: array
          description: Aries RFC 37 v1.0 presentation exchange records
          items:
            $ref: '#/components/schemas/V10PresentationExchange'
    V10PresentationProblemReportRequest:
      required:
      - description
      type: object
      properties:
        description:
          type: string
    V10PresentationProposalRequest:
      required:
      - connection_id
      - presentation_proposal
      type: object
      properties:
        auto_present:
          type: boolean
          description: Whether to respond automatically to presentation requests,
            building and presenting requested proof
        comment:
          type: string
          description: Human-readable comment
          nullable: true
        connection_id:
          type: string
          description: Connection identifier
          format: uuid
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        presentation_proposal:
          $ref: '#/components/schemas/IndyPresPreview'
        trace:
          type: boolean
          description: Whether to trace event (default false)
          example: false
    V10PresentationSendRequestRequest:
      required:
      - connection_id
      - proof_request
      type: object
      properties:
        auto_verify:
          type: boolean
          description: Verifier choice to auto-verify proof presentation
          example: false
        comment:
          type: string
          nullable: true
        connection_id:
          type: string
          description: Connection identifier
          format: uuid
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        proof_request:
          $ref: '#/components/schemas/IndyProofRequest'
        trace:
          type: boolean
          description: Whether to trace event (default false)
          example: false
    V10PresentationSendRequestToProposal:
      type: object
      properties:
        auto_verify:
          type: boolean
          description: Verifier choice to auto-verify proof presentation
          example: false
        trace:
          type: boolean
          description: Whether to trace event (default false)
          example: false
    V20CredAttrSpec:
      required:
      - name
      - value
      type: object
      properties:
        mime-type:
          type: string
          description: 'MIME type: omit for (null) default'
          nullable: true
          example: image/jpeg
        name:
          type: string
          description: Attribute name
          example: favourite_drink
        value:
          type: string
          description: 'Attribute value: base64-encode if MIME type is present'
          example: martini
    V20CredBoundOfferRequest:
      type: object
      properties:
        counter_preview:
          type: object
          description: Optional content for counter-proposal
          allOf:
          - $ref: '#/components/schemas/V20CredPreview'
        filter:
          type: object
          description: Credential specification criteria by format
          allOf:
          - $ref: '#/components/schemas/V20CredFilter'
    V20CredExFree:
      required:
      - connection_id
      - filter
      type: object
      properties:
        auto_remove:
          type: boolean
          description: Whether to remove the credential exchange record on completion
            (overrides --preserve-exchange-records configuration setting)
        comment:
          type: string
          description: Human-readable comment
          nullable: true
        connection_id:
          type: string
          description: Connection identifier
          format: uuid
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        credential_preview:
          $ref: '#/components/schemas/V20CredPreview'
        filter:
          type: object
          description: Credential specification criteria by format
          allOf:
          - $ref: '#/components/schemas/V20CredFilter'
        trace:
          type: boolean
          description: Record trace information, based on agent configuration
    V20CredExRecord:
      type: object
      properties:
        auto_issue:
          type: boolean
          description: Issuer choice to issue to request in this credential exchange
          example: false
        auto_offer:
          type: boolean
          description: Holder choice to accept offer in this credential exchange
          example: false
        auto_remove:
          type: boolean
          description: Issuer choice to remove this credential exchange record when
            complete
          example: false
        by_format:
          type: object
          description: Attachment content by format for proposal, offer, request,
            and issue
          allOf:
          - $ref: '#/components/schemas/V20CredExRecordByFormat'
        connection_id:
          type: string
          description: Connection identifier
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        created_at:
          pattern: ^\d{4}-\d\d-\d\d[T ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$
          type: string
          description: Time of record creation
          example: 2021-12-31 23:59:59+00:00
        cred_ex_id:
          type: string
          description: Credential exchange identifier
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        cred_issue:
          type: object
          description: Serialized credential issue message
          allOf:
          - $ref: '#/components/schemas/V20CredIssue'
        cred_offer:
          type: object
          description: Credential offer message
          allOf:
          - $ref: '#/components/schemas/V20CredOffer'
        cred_preview:
          type: object
          description: Credential preview from credential proposal
          allOf:
          - $ref: '#/components/schemas/V20CredPreview'
        cred_proposal:
          type: object
          description: Credential proposal message
          allOf:
          - $ref: '#/components/schemas/V20CredProposal'
        cred_request:
          type: object
          description: Serialized credential request message
          allOf:
          - $ref: '#/components/schemas/V20CredRequest'
        error_msg:
          type: string
          description: Error message
          example: The front fell off
        initiator:
          type: string
          description: 'Issue-credential exchange initiator: self or external'
          example: self
          enum:
          - self
          - external
        parent_thread_id:
          type: string
          description: Parent thread identifier
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        role:
          type: string
          description: 'Issue-credential exchange role: holder or issuer'
          example: issuer
          enum:
          - issuer
          - holder
        state:
          type: string
          description: Issue-credential exchange state
          example: done
          enum:
          - proposal-sent
          - proposal-received
          - offer-sent
          - offer-received
          - request-sent
          - request-received
          - credential-issued
          - credential-received
          - done
          - credential-revoked
          - abandoned
        thread_id:
          type: string
          description: Thread identifier
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        trace:
          type: boolean
          description: Record trace information, based on agent configuration
        updated_at:
          pattern: ^\d{4}-\d\d-\d\d[T ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$
          type: string
          description: Time of last record update
          example: 2021-12-31 23:59:59+00:00
    V20CredExRecordByFormat:
      type: object
      properties:
        cred_issue:
          type: object
          properties: {}
        cred_offer:
          type: object
          properties: {}
        cred_proposal:
          type: object
          properties: {}
        cred_request:
          type: object
          properties: {}
    V20CredExRecordDetail:
      type: object
      properties:
        cred_ex_record:
          type: object
          description: Credential exchange record
          allOf:
          - $ref: '#/components/schemas/V20CredExRecord'
        indy:
          $ref: '#/components/schemas/V20CredExRecordIndy'
        ld_proof:
          $ref: '#/components/schemas/V20CredExRecordLDProof'
    V20CredExRecordIndy:
      type: object
      properties:
        created_at:
          pattern: ^\d{4}-\d\d-\d\d[T ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$
          type: string
          description: Time of record creation
          example: 2021-12-31 23:59:59+00:00
        cred_ex_id:
          type: string
          description: Corresponding v2.0 credential exchange record identifier
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        cred_ex_indy_id:
          type: string
          description: Record identifier
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        cred_id_stored:
          type: string
          description: Credential identifier stored in wallet
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        cred_request_metadata:
          type: object
          properties: {}
          description: Credential request metadata for indy holder
        cred_rev_id:
          pattern: ^[1-9][0-9]*$
          type: string
          description: Credential revocation identifier within revocation registry
          example: '12345'
        rev_reg_id:
          pattern: ^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)
          type: string
          description: Revocation registry identifier
          example: WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0
        state:
          type: string
          description: Current record state
          example: active
        updated_at:
          pattern: ^\d{4}-\d\d-\d\d[T ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$
          type: string
          description: Time of last record update
          example: 2021-12-31 23:59:59+00:00
    V20CredExRecordLDProof:
      type: object
      properties:
        created_at:
          pattern: ^\d{4}-\d\d-\d\d[T ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$
          type: string
          description: Time of record creation
          example: 2021-12-31 23:59:59+00:00
        cred_ex_id:
          type: string
          description: Corresponding v2.0 credential exchange record identifier
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        cred_ex_ld_proof_id:
          type: string
          description: Record identifier
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        cred_id_stored:
          type: string
          description: Credential identifier stored in wallet
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        state:
          type: string
          description: Current record state
          example: active
        updated_at:
          pattern: ^\d{4}-\d\d-\d\d[T ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$
          type: string
          description: Time of last record update
          example: 2021-12-31 23:59:59+00:00
    V20CredExRecordListResult:
      type: object
      properties:
        results:
          type: array
          description: Credential exchange records and corresponding detail records
          items:
            $ref: '#/components/schemas/V20CredExRecordDetail'
    V20CredFilter:
      type: object
      properties:
        indy:
          type: object
          description: Credential filter for indy
          allOf:
          - $ref: '#/components/schemas/V20CredFilterIndy'
        ld_proof:
          type: object
          description: Credential filter for linked data proof
          allOf:
          - $ref: '#/components/schemas/LDProofVCDetail'
    V20CredFilterIndy:
      type: object
      properties:
        cred_def_id:
          pattern: ^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$
          type: string
          description: Credential definition identifier
          example: WgWxqztrNooG92RXvxSTWv:3:CL:20:tag
        issuer_did:
          pattern: ^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$
          type: string
          description: Credential issuer DID
          example: WgWxqztrNooG92RXvxSTWv
        schema_id:
          pattern: ^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$
          type: string
          description: Schema identifier
          example: WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0
        schema_issuer_did:
          pattern: ^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$
          type: string
          description: Schema issuer DID
          example: WgWxqztrNooG92RXvxSTWv
        schema_name:
          type: string
          description: Schema name
          example: preferences
        schema_version:
          pattern: ^[0-9.]+$
          type: string
          description: Schema version
          example: '1.0'
    V20CredFilterLDProof:
      required:
      - ld_proof
      type: object
      properties:
        ld_proof:
          type: object
          description: Credential filter for linked data proof
          allOf:
          - $ref: '#/components/schemas/LDProofVCDetail'
    V20CredFormat:
      required:
      - attach_id
      - format
      type: object
      properties:
        attach_id:
          type: string
          description: Attachment identifier
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        format:
          type: string
          description: Attachment format specifier
          example: aries/ld-proof-vc-detail@v1.0
    V20CredIssue:
      required:
      - credentials~attach
      - formats
      type: object
      properties:
        '@id':
          type: string
          description: Message identifier
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        '@type':
          type: string
          description: Message type
          readOnly: true
          example: https://didcomm.org/my-family/1.0/my-message-type
        comment:
          type: string
          description: Human-readable comment
          nullable: true
        credentials~attach:
          type: array
          description: Credential attachments
          items:
            $ref: '#/components/schemas/AttachDecorator'
        formats:
          type: array
          description: Acceptable attachment formats
          items:
            $ref: '#/components/schemas/V20CredFormat'
        replacement_id:
          type: string
          description: Issuer-unique identifier to coordinate credential replacement
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
    V20CredIssueProblemReportRequest:
      required:
      - description
      type: object
      properties:
        description:
          type: string
    V20CredIssueRequest:
      type: object
      properties:
        comment:
          type: string
          description: Human-readable comment
          nullable: true
    V20CredOffer:
      required:
      - formats
      - offers~attach
      type: object
      properties:
        '@id':
          type: string
          description: Message identifier
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        '@type':
          type: string
          description: Message type
          readOnly: true
          example: https://didcomm.org/my-family/1.0/my-message-type
        comment:
          type: string
          description: Human-readable comment
          nullable: true
        credential_preview:
          $ref: '#/components/schemas/V20CredPreview'
        formats:
          type: array
          description: Acceptable credential formats
          items:
            $ref: '#/components/schemas/V20CredFormat'
        offers~attach:
          type: array
          description: Offer attachments
          items:
            $ref: '#/components/schemas/AttachDecorator'
        replacement_id:
          type: string
          description: Issuer-unique identifier to coordinate credential replacement
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
    V20CredOfferConnFreeRequest:
      required:
      - filter
      type: object
      properties:
        auto_issue:
          type: boolean
          description: Whether to respond automatically to credential requests, creating
            and issuing requested credentials
        auto_remove:
          type: boolean
          description: Whether to remove the credential exchange record on completion
            (overrides --preserve-exchange-records configuration setting)
        comment:
          type: string
          description: Human-readable comment
          nullable: true
        credential_preview:
          $ref: '#/components/schemas/V20CredPreview'
        filter:
          type: object
          description: Credential specification criteria by format
          allOf:
          - $ref: '#/components/schemas/V20CredFilter'
        trace:
          type: boolean
          description: Record trace information, based on agent configuration
    V20CredOfferRequest:
      required:
      - connection_id
      - filter
      type: object
      properties:
        auto_issue:
          type: boolean
          description: Whether to respond automatically to credential requests, creating
            and issuing requested credentials
        auto_remove:
          type: boolean
          description: Whether to remove the credential exchange record on completion
            (overrides --preserve-exchange-records configuration setting)
        comment:
          type: string
          description: Human-readable comment
          nullable: true
        connection_id:
          type: string
          description: Connection identifier
          format: uuid
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        credential_preview:
          $ref: '#/components/schemas/V20CredPreview'
        filter:
          type: object
          description: Credential specification criteria by format
          allOf:
          - $ref: '#/components/schemas/V20CredFilter'
        trace:
          type: boolean
          description: Record trace information, based on agent configuration
    V20CredPreview:
      required:
      - attributes
      type: object
      properties:
        '@type':
          type: string
          description: Message type identifier
          example: issue-credential/2.0/credential-preview
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/V20CredAttrSpec'
    V20CredProposal:
      required:
      - filters~attach
      - formats
      type: object
      properties:
        '@id':
          type: string
          description: Message identifier
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        '@type':
          type: string
          description: Message type
          readOnly: true
          example: https://didcomm.org/my-family/1.0/my-message-type
        comment:
          type: string
          description: Human-readable comment
          nullable: true
        credential_preview:
          type: object
          description: Credential preview
          allOf:
          - $ref: '#/components/schemas/V20CredPreview'
        filters~attach:
          type: array
          description: Credential filter per acceptable format on corresponding identifier
          items:
            $ref: '#/components/schemas/AttachDecorator'
        formats:
          type: array
          description: Attachment formats
          items:
            $ref: '#/components/schemas/V20CredFormat'
    V20CredRequest:
      required:
      - formats
      - requests~attach
      type: object
      properties:
        '@id':
          type: string
          description: Message identifier
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        '@type':
          type: string
          description: Message type
          readOnly: true
          example: https://didcomm.org/my-family/1.0/my-message-type
        comment:
          type: string
          description: Human-readable comment
          nullable: true
        formats:
          type: array
          description: Acceptable attachment formats
          items:
            $ref: '#/components/schemas/V20CredFormat'
        requests~attach:
          type: array
          description: Request attachments
          items:
            $ref: '#/components/schemas/AttachDecorator'
    V20CredRequestFree:
      required:
      - connection_id
      - filter
      type: object
      properties:
        auto_remove:
          type: boolean
          description: Whether to remove the credential exchange record on completion
            (overrides --preserve-exchange-records configuration setting)
        comment:
          type: string
          description: Human-readable comment
          nullable: true
        connection_id:
          type: string
          description: Connection identifier
          format: uuid
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        filter:
          type: object
          description: Credential specification criteria by format
          allOf:
          - $ref: '#/components/schemas/V20CredFilterLDProof'
        holder_did:
          type: string
          description: Holder DID to substitute for the credentialSubject.id
          nullable: true
          example: did:key:ahsdkjahsdkjhaskjdhakjshdkajhsdkjahs
        trace:
          type: boolean
          description: Whether to trace event (default false)
          example: false
    V20CredRequestRequest:
      type: object
      properties:
        holder_did:
          type: string
          description: Holder DID to substitute for the credentialSubject.id
          nullable: true
          example: did:key:ahsdkjahsdkjhaskjdhakjshdkajhsdkjahs
    V20CredStoreRequest:
      type: object
      properties:
        credential_id:
          type: string
    V20DiscoveryExchangeListResult:
      type: object
      properties:
        results:
          type: array
          items:
            type: object
            description: Discover Features v2.0 exchange record
            allOf:
            - $ref: '#/components/schemas/V20DiscoveryRecord'
    V20DiscoveryExchangeResult:
      type: object
      properties:
        results:
          type: object
          description: Discover Features v2.0 exchange record
          allOf:
          - $ref: '#/components/schemas/V20DiscoveryRecord'
    V20DiscoveryRecord:
      type: object
      properties:
        connection_id:
          type: string
          description: Connection identifier
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        created_at:
          pattern: ^\d{4}-\d\d-\d\d[T ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$
          type: string
          description: Time of record creation
          example: 2021-12-31 23:59:59+00:00
        disclosures:
          type: object
          description: Disclosures message
          allOf:
          - $ref: '#/components/schemas/Disclosures'
        discovery_exchange_id:
          type: string
          description: Credential exchange identifier
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        queries_msg:
          type: object
          description: Queries message
          allOf:
          - $ref: '#/components/schemas/Queries'
        state:
          type: string
          description: Current record state
          example: active
        thread_id:
          type: string
          description: Thread identifier
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        trace:
          type: boolean
          description: Record trace information, based on agent configuration
        updated_at:
          pattern: ^\d{4}-\d\d-\d\d[T ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$
          type: string
          description: Time of last record update
          example: 2021-12-31 23:59:59+00:00
    V20IssueCredSchemaCore:
      required:
      - filter
      type: object
      properties:
        auto_remove:
          type: boolean
          description: Whether to remove the credential exchange record on completion
            (overrides --preserve-exchange-records configuration setting)
        comment:
          type: string
          description: Human-readable comment
          nullable: true
        credential_preview:
          $ref: '#/components/schemas/V20CredPreview'
        filter:
          type: object
          description: Credential specification criteria by format
          allOf:
          - $ref: '#/components/schemas/V20CredFilter'
        trace:
          type: boolean
          description: Record trace information, based on agent configuration
    V20IssueCredentialModuleResponse:
      type: object
    V20Pres:
      required:
      - formats
      - presentations~attach
      type: object
      properties:
        '@id':
          type: string
          description: Message identifier
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        '@type':
          type: string
          description: Message type
          readOnly: true
          example: https://didcomm.org/my-family/1.0/my-message-type
        comment:
          type: string
          description: Human-readable comment
          nullable: true
        formats:
          type: array
          description: Acceptable attachment formats
          items:
            $ref: '#/components/schemas/V20PresFormat'
        presentations~attach:
          type: array
          items:
            $ref: '#/components/schemas/AttachDecorator'
    V20PresCreateRequestRequest:
      required:
      - presentation_request
      type: object
      properties:
        auto_verify:
          type: boolean
          description: Verifier choice to auto-verify proof presentation
          example: false
        comment:
          type: string
          nullable: true
        presentation_request:
          $ref: '#/components/schemas/V20PresRequestByFormat'
        trace:
          type: boolean
          description: Whether to trace event (default false)
          example: false
    V20PresExRecord:
      type: object
      properties:
        auto_present:
          type: boolean
          description: Prover choice to auto-present proof as verifier requests
          example: false
        auto_verify:
          type: boolean
          description: Verifier choice to auto-verify proof presentation
        by_format:
          type: object
          description: Attachment content by format for proposal, request, and presentation
          allOf:
          - $ref: '#/components/schemas/V20PresExRecordByFormat'
        connection_id:
          type: string
          description: Connection identifier
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        created_at:
          pattern: ^\d{4}-\d\d-\d\d[T ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$
          type: string
          description: Time of record creation
          example: 2021-12-31 23:59:59+00:00
        error_msg:
          type: string
          description: Error message
          example: Invalid structure
        initiator:
          type: string
          description: 'Present-proof exchange initiator: self or external'
          example: self
          enum:
          - self
          - external
        pres:
          type: object
          description: Presentation message
          allOf:
          - $ref: '#/components/schemas/V20Pres'
        pres_ex_id:
          type: string
          description: Presentation exchange identifier
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        pres_proposal:
          type: object
          description: Presentation proposal message
          allOf:
          - $ref: '#/components/schemas/V20PresProposal'
        pres_request:
          type: object
          description: Presentation request message
          allOf:
          - $ref: '#/components/schemas/V20PresRequest'
        role:
          type: string
          description: 'Present-proof exchange role: prover or verifier'
          example: prover
          enum:
          - prover
          - verifier
        state:
          type: string
          description: Present-proof exchange state
          enum:
          - proposal-sent
          - proposal-received
          - request-sent
          - request-received
          - presentation-sent
          - presentation-received
          - done
          - abandoned
        thread_id:
          type: string
          description: Thread identifier
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        trace:
          type: boolean
          description: Record trace information, based on agent configuration
        updated_at:
          pattern: ^\d{4}-\d\d-\d\d[T ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$
          type: string
          description: Time of last record update
          example: 2021-12-31 23:59:59+00:00
        verified:
          type: string
          description: 'Whether presentation is verified: ''true'' or ''false'''
          example: 'true'
          enum:
          - 'true'
          - 'false'
    V20PresExRecordByFormat:
      type: object
      properties:
        pres:
          type: object
          properties: {}
        pres_proposal:
          type: object
          properties: {}
        pres_request:
          type: object
          properties: {}
    V20PresExRecordList:
      type: object
      properties:
        results:
          type: array
          description: Presentation exchange records
          items:
            $ref: '#/components/schemas/V20PresExRecord'
    V20PresFormat:
      required:
      - attach_id
      - format
      type: object
      properties:
        attach_id:
          type: string
          description: Attachment identifier
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        format:
          type: string
          description: Attachment format specifier
          example: dif/presentation-exchange/submission@v1.0
    V20PresProblemReportRequest:
      required:
      - description
      type: object
      properties:
        description:
          type: string
    V20PresProposal:
      required:
      - formats
      - proposals~attach
      type: object
      properties:
        '@id':
          type: string
          description: Message identifier
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        '@type':
          type: string
          description: Message type
          readOnly: true
          example: https://didcomm.org/my-family/1.0/my-message-type
        comment:
          type: string
          description: Human-readable comment
        formats:
          type: array
          items:
            $ref: '#/components/schemas/V20PresFormat'
        proposals~attach:
          type: array
          description: Attachment per acceptable format on corresponding identifier
          items:
            $ref: '#/components/schemas/AttachDecorator'
    V20PresProposalByFormat:
      type: object
      properties:
        dif:
          type: object
          description: Presentation proposal for DIF
          allOf:
          - $ref: '#/components/schemas/DIFProofProposal'
        indy:
          type: object
          description: Presentation proposal for indy
          allOf:
          - $ref: '#/components/schemas/IndyProofRequest'
    V20PresProposalRequest:
      required:
      - connection_id
      - presentation_proposal
      type: object
      properties:
        auto_present:
          type: boolean
          description: Whether to respond automatically to presentation requests,
            building and presenting requested proof
        comment:
          type: string
          description: Human-readable comment
          nullable: true
        connection_id:
          type: string
          description: Connection identifier
          format: uuid
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        presentation_proposal:
          $ref: '#/components/schemas/V20PresProposalByFormat'
        trace:
          type: boolean
          description: Whether to trace event (default false)
          example: false
    V20PresRequest:
      required:
      - formats
      - request_presentations~attach
      type: object
      properties:
        '@id':
          type: string
          description: Message identifier
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        '@type':
          type: string
          description: Message type
          readOnly: true
          example: https://didcomm.org/my-family/1.0/my-message-type
        comment:
          type: string
          description: Human-readable comment
        formats:
          type: array
          items:
            $ref: '#/components/schemas/V20PresFormat'
        request_presentations~attach:
          type: array
          description: Attachment per acceptable format on corresponding identifier
          items:
            $ref: '#/components/schemas/AttachDecorator'
        will_confirm:
          type: boolean
          description: Whether verifier will send confirmation ack
    V20PresRequestByFormat:
      type: object
      properties:
        dif:
          type: object
          description: Presentation request for DIF
          allOf:
          - $ref: '#/components/schemas/DIFProofRequest'
        indy:
          type: object
          description: Presentation request for indy
          allOf:
          - $ref: '#/components/schemas/IndyProofRequest'
    V20PresSendRequestRequest:
      required:
      - connection_id
      - presentation_request
      type: object
      properties:
        auto_verify:
          type: boolean
          description: Verifier choice to auto-verify proof presentation
          example: false
        comment:
          type: string
          nullable: true
        connection_id:
          type: string
          description: Connection identifier
          format: uuid
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        presentation_request:
          $ref: '#/components/schemas/V20PresRequestByFormat'
        trace:
          type: boolean
          description: Whether to trace event (default false)
          example: false
    V20PresSpecByFormatRequest:
      type: object
      properties:
        dif:
          type: object
          description: Optional Presentation specification for DIF, overrides the
            PresentionExchange record's PresRequest
          allOf:
          - $ref: '#/components/schemas/DIFPresSpec'
        indy:
          type: object
          description: Presentation specification for indy
          allOf:
          - $ref: '#/components/schemas/IndyPresSpec'
        trace:
          type: boolean
          description: Record trace information, based on agent configuration
    V20PresentProofModuleResponse:
      type: object
    V20PresentationSendRequestToProposal:
      type: object
      properties:
        auto_verify:
          type: boolean
          description: Verifier choice to auto-verify proof presentation
          example: false
        trace:
          type: boolean
          description: Whether to trace event (default false)
          example: false
    VCRecord:
      type: object
      properties:
        contexts:
          type: array
          items:
            pattern: ^[A-Za-z0-9\.\-\+]+://([A-Za-z0-9][.A-Za-z0-9-_]+[A-Za-z0-9])+(:[1-9][0-9]*)?(/[^?&#]+)?$
            type: string
            description: Context
            example: https://myhost:8021
        cred_tags:
          type: object
          additionalProperties:
            type: string
            description: Retrieval tag value
        cred_value:
          type: object
          properties: {}
          description: (JSON-serializable) credential value
        expanded_types:
          type: array
          items:
            type: string
            description: JSON-LD expanded type extracted from type and context
            example: https://w3id.org/citizenship#PermanentResidentCard
        given_id:
          type: string
          description: Credential identifier
          example: http://example.edu/credentials/3732
        issuer_id:
          type: string
          description: Issuer identifier
          example: https://example.edu/issuers/14
        proof_types:
          type: array
          items:
            type: string
            description: Signature suite used for proof
            example: Ed25519Signature2018
        record_id:
          type: string
          description: Record identifier
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        schema_ids:
          type: array
          items:
            type: string
            description: Schema identifier
            example: https://example.org/examples/degree.json
        subject_ids:
          type: array
          items:
            type: string
            description: Subject identifier
            example: did:example:ebfeb1f712ebc6f1c276e12ec21
    VCRecordList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/VCRecord'
    VerifyRequest:
      required:
      - doc
      type: object
      properties:
        doc:
          type: object
          description: Signed document
          allOf:
          - $ref: '#/components/schemas/SignedDoc'
        verkey:
          type: string
          description: Verkey to use for doc verification
    VerifyResponse:
      required:
      - valid
      type: object
      properties:
        error:
          type: string
          description: Error text
        valid:
          type: boolean
    W3CCredentialsListRequest:
      type: object
      properties:
        contexts:
          type: array
          items:
            pattern: ^[A-Za-z0-9\.\-\+]+://([A-Za-z0-9][.A-Za-z0-9-_]+[A-Za-z0-9])+(:[1-9][0-9]*)?(/[^?&#]+)?$
            type: string
            description: Credential context to match
            example: https://myhost:8021
        given_id:
          type: string
          description: Given credential id to match
        issuer_id:
          type: string
          description: Credential issuer identifier to match
        max_results:
          type: integer
          description: Maximum number of results to return
          format: int32
        proof_types:
          type: array
          items:
            type: string
            description: Signature suite used for proof
            example: Ed25519Signature2018
        schema_ids:
          type: array
          description: Schema identifiers, all of which to match
          items:
            pattern: ^[A-Za-z0-9\.\-\+]+://([A-Za-z0-9][.A-Za-z0-9-_]+[A-Za-z0-9])+(:[1-9][0-9]*)?(/[^?&#]+)?$
            type: string
            description: Credential schema identifier
            example: https://myhost:8021
        subject_ids:
          type: array
          description: Subject identifiers, all of which to match
          items:
            type: string
            description: Subject identifier
        tag_query:
          type: object
          additionalProperties:
            type: string
            description: Tag value
          description: Tag filter
        types:
          type: array
          items:
            pattern: ^[A-Za-z0-9\.\-\+]+://([A-Za-z0-9][.A-Za-z0-9-_]+[A-Za-z0-9])+(:[1-9][0-9]*)?(/[^?&#]+)?$
            type: string
            description: Credential type to match
            example: https://myhost:8021
    WalletList:
      type: object
      properties:
        results:
          type: array
          description: List of wallet records
          items:
            $ref: '#/components/schemas/WalletRecord'
    WalletModuleResponse:
      type: object
    WalletRecord:
      required:
      - key_management_mode
      - wallet_id
      type: object
      properties:
        created_at:
          pattern: ^\d{4}-\d\d-\d\d[T ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$
          type: string
          description: Time of record creation
          example: 2021-12-31 23:59:59+00:00
        key_management_mode:
          type: string
          description: Mode regarding management of wallet key
          enum:
          - managed
          - unmanaged
        settings:
          type: object
          properties: {}
          description: Settings for this wallet.
        state:
          type: string
          description: Current record state
          example: active
        updated_at:
          pattern: ^\d{4}-\d\d-\d\d[T ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$
          type: string
          description: Time of last record update
          example: 2021-12-31 23:59:59+00:00
        wallet_id:
          type: string
          description: Wallet record ID
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
    WriteLedgerRequest:
      type: object
      properties:
        ledger_id:
          type: string
  securitySchemes:
    AuthorizationHeader:
      type: apiKey
      description: Bearer token. Be sure to preprend token with 'Bearer '
      name: Authorization
      in: header
